{"version":3,"file":"maplibre-gl-terradraw.es.js","sources":["../node_modules/.pnpm/terra-draw@1.15.0/node_modules/terra-draw/dist/terra-draw.modern.js","../node_modules/.pnpm/terra-draw-maplibre-gl-adapter@1.1.2_maplibre-gl@5.7.3_terra-draw@1.15.0/node_modules/terra-draw-maplibre-gl-adapter/dist/terra-draw-maplibre-gl-adapter.modern.js","../src/lib/constants/AvailableModes.ts","../src/lib/constants/defaultControlOptions.ts","../src/lib/constants/defaultMeasureControlOptions.ts","../src/lib/constants/defaultValhallaControlOptions.ts","../src/lib/constants/getDefaultModeOptions.ts","../node_modules/.pnpm/@turf+helpers@7.2.0/node_modules/@turf/helpers/dist/esm/index.js","../node_modules/.pnpm/@turf+meta@7.2.0/node_modules/@turf/meta/dist/esm/index.js","../node_modules/.pnpm/@turf+area@7.2.0/node_modules/@turf/area/dist/esm/index.js","../src/lib/helpers/convertAreaUnit.ts","../src/lib/helpers/calcArea.ts","../node_modules/.pnpm/@turf+invariant@7.2.0/node_modules/@turf/invariant/dist/esm/index.js","../node_modules/.pnpm/@turf+distance@7.2.0/node_modules/@turf/distance/dist/esm/index.js","../src/lib/helpers/convertDistance.ts","../src/lib/helpers/calcDistance.ts","../src/lib/helpers/capitalize.ts","../src/lib/helpers/cleanMaplibreStyle.ts","../src/lib/helpers/debounce.ts","../src/lib/helpers/memoryCache.ts","../src/lib/helpers/modalDialog.ts","../src/lib/helpers/queryElevationByPoint.ts","../node_modules/.pnpm/@watergis+terrain-rgb@2.1.1/node_modules/@watergis/terrain-rgb/dist/terrain-rgb.es.js","../src/lib/helpers/queryElevationFromRasterDEM.ts","../src/lib/helpers/roundFeatureCoordinates.ts","../src/lib/helpers/valhallaIsochrone.ts","../src/lib/helpers/valhallaRouting.ts","../src/lib/controls/MaplibreTerradrawControl.ts","../node_modules/.pnpm/@turf+centroid@7.2.0/node_modules/@turf/centroid/dist/esm/index.js","../src/lib/controls/MaplibreMeasureControl.ts","../src/lib/controls/MaplibreValhallaControl.ts"],"sourcesContent":["function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var o in i)({}).hasOwnProperty.call(i,o)&&(t[o]=i[o])}return t},t.apply(null,arguments)}var e;!function(t){t.Commit=\"commit\",t.Provisional=\"provisional\",t.Finish=\"finish\"}(e||(e={}));const i={SELECTED:\"selected\",MID_POINT:\"midPoint\",SELECTION_POINT_FEATURE_ID:\"selectionPointFeatureId\",SELECTION_POINT:\"selectionPoint\"},o={MODE:\"mode\",CURRENTLY_DRAWING:\"currentlyDrawing\",EDITED:\"edited\",CLOSING_POINT:\"closingPoint\",SNAPPING_POINT:\"snappingPoint\",COORDINATE_POINT:\"coordinatePoint\",COORDINATE_POINT_FEATURE_ID:\"coordinatePointFeatureId\",COORDINATE_POINT_IDS:\"coordinatePointIds\",PROVISIONAL_COORDINATE_COUNT:\"provisionalCoordinateCount\",COMMITTED_COORDINATE_COUNT:\"committedCoordinateCount\"},s=10;function n(t){return Boolean(t&&\"object\"==typeof t&&null!==t&&!Array.isArray(t))}function r(t){return Boolean(t&&\"object\"==typeof t&&\"properties\"in t&&\"object\"==typeof t.properties&&null!==t.properties&&\"mode\"in t.properties)}function a(t){return!!function(t){return\"number\"==typeof t&&!isNaN(new Date(t).valueOf())}(t)}const d=\"Feature is not a Polygon\",h=\"Feature mode property does not match the mode being added to\";var l;!function(t){t.Drawing=\"drawing\",t.Select=\"select\",t.Static=\"static\",t.Render=\"render\"}(l||(l={}));const c={rightClick:!0,contextMenu:!1,leftClick:!0,onDragStart:!0,onDrag:!0,onDragEnd:!0};class u{get state(){return this._state}set state(t){throw new Error(\"Please use the modes lifecycle methods\")}get styles(){return this._styles}set styles(t){if(\"object\"!=typeof t)throw new Error(\"Styling must be an object\");this.onStyleChange&&this.onStyleChange([],\"styling\"),this._styles=t}registerBehaviors(t){}constructor(t,e=!1){this._state=\"unregistered\",this._styles={},this.pointerEvents=c,this.behaviors=[],this.validate=void 0,this.pointerDistance=40,this.coordinatePrecision=void 0,this.onStyleChange=void 0,this.store=void 0,this.projection=\"web-mercator\",this.setDoubleClickToZoom=void 0,this.unproject=void 0,this.project=void 0,this.setCursor=void 0,this.type=l.Drawing,this.mode=\"base\",e||this.updateOptions(t)}updateOptions(e){null!=e&&e.styles&&(this.styles=t({},this._styles,e.styles)),null!=e&&e.pointerDistance&&(this.pointerDistance=e.pointerDistance),null!=e&&e.validation&&(this.validate=e&&e.validation),null!=e&&e.projection&&(this.projection=e.projection),void 0!==(null==e?void 0:e.pointerEvents)&&(this.pointerEvents=e.pointerEvents)}allowPointerEvent(t,e){return\"boolean\"==typeof t?t:\"function\"!=typeof t||t(e)}setDrawing(){if(\"started\"!==this._state)throw new Error(\"Mode must be unregistered or stopped to start\");this._state=\"drawing\"}setStarted(){if(\"stopped\"!==this._state&&\"registered\"!==this._state&&\"drawing\"!==this._state&&\"selecting\"!==this._state)throw new Error(\"Mode must be unregistered or stopped to start\");this._state=\"started\",this.setDoubleClickToZoom(!1)}setStopped(){if(\"started\"!==this._state)throw new Error(\"Mode must be started to be stopped\");this._state=\"stopped\",this.setDoubleClickToZoom(!0)}register(t){if(\"unregistered\"!==this._state)throw new Error(\"Can not register unless mode is unregistered\");this._state=\"registered\",this.store=t.store,this.store.registerOnChange(t.onChange),this.setDoubleClickToZoom=t.setDoubleClickToZoom,this.project=t.project,this.unproject=t.unproject,this.onSelect=t.onSelect,this.onDeselect=t.onDeselect,this.setCursor=t.setCursor,this.onStyleChange=t.onChange,this.onFinish=t.onFinish,this.coordinatePrecision=t.coordinatePrecision,this.registerBehaviors({mode:t.mode,store:this.store,project:this.project,unproject:this.unproject,pointerDistance:this.pointerDistance,coordinatePrecision:t.coordinatePrecision,projection:this.projection})}validateFeature(t){return this.performFeatureValidation(t)}afterFeatureAdded(t){}afterFeatureUpdated(t){}performFeatureValidation(t){if(\"unregistered\"===this._state)throw new Error(\"Mode must be registered\");const i=function(t,e){let i;if(n(t))if(null==t.id)i=\"Feature has no id\";else if(\"string\"!=typeof t.id&&\"number\"!=typeof t.id)i=\"Feature must be string or number as per GeoJSON spec\";else if(e(t.id))if(n(t.geometry))if(n(t.properties))if(\"string\"==typeof t.geometry.type&&[\"Polygon\",\"LineString\",\"Point\"].includes(t.geometry.type))if(Array.isArray(t.geometry.coordinates)){if(!t.properties.mode||\"string\"!=typeof t.properties.mode)return{valid:!1,reason:\"Feature does not have a valid mode property\"}}else i=\"Feature coordinates is not an array\";else i=\"Feature is not Point, LineString or Polygon\";else i=\"Feature has no properties\";else i=\"Feature has no geometry\";else i=\"Feature must match the id strategy (default is UUID4)\";else i=\"Feature is not object\";return i?{valid:!1,reason:i}:{valid:!0}}(t,this.store.idStrategy.isValidId);if(this.validate){const o=this.validate(t,{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional});return{valid:i.valid&&o.valid,reason:o.reason}}return{valid:i.valid,reason:i.reason}}validateModeFeature(t,e){const i=this.performFeatureValidation(t);return i.valid?t.properties.mode!==this.mode?{valid:!1,reason:h}:e(t):{valid:!1,reason:i.reason}}onFinish(t,e){}onDeselect(t){}onSelect(t){}onKeyDown(t){}onKeyUp(t){}onMouseMove(t){}onClick(t){}onDragStart(t,e){}onDrag(t,e){}onDragEnd(t,e){}getHexColorStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getNumericStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getStylingValue(t,e,i){return void 0===t?e:\"function\"==typeof t?t(i):t}}class p extends u{constructor(...t){super(...t),this.type=l.Select}}function g(t,e){const i=t=>t*Math.PI/180,o=i(t[1]),s=i(t[0]),n=i(e[1]),r=n-o,a=i(e[0])-s,d=Math.sin(r/2)*Math.sin(r/2)+Math.cos(o)*Math.cos(n)*Math.sin(a/2)*Math.sin(a/2);return 2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d))*6371e3/1e3}const y=6371008.8;function f(t){return t%360*Math.PI/180}function m(t){return t/6371.0088}function v(t){return t%(2*Math.PI)*180/Math.PI}function C(t,e=9){const i=Math.pow(10,e);return Math.round(t*i)/i}const P=57.29577951308232,I=.017453292519943295,x=6378137,E=(t,e)=>({x:0===t?0:t*I*x,y:0===e?0:Math.log(Math.tan(Math.PI/4+e*I/2))*x}),S=(t,e)=>({lng:0===t?0:P*(t/x),lat:0===e?0:(2*Math.atan(Math.exp(e/x))-Math.PI/2)*P});function M(t,e,i){const o=f(t[0]),s=f(t[1]),n=f(i),r=m(e),a=Math.asin(Math.sin(s)*Math.cos(r)+Math.cos(s)*Math.sin(r)*Math.cos(n));return[v(o+Math.atan2(Math.sin(n)*Math.sin(r)*Math.cos(s),Math.cos(r)-Math.sin(s)*Math.sin(a))),v(a)]}function F(t){const{center:e,radiusKilometers:i,coordinatePrecision:o}=t,s=t.steps?t.steps:64,n=[];for(let t=0;t<s;t++){const r=M(e,i,-360*t/s);n.push([C(r[0],o),C(r[1],o)])}return n.push(n[0]),{type:\"Feature\",geometry:{type:\"Polygon\",coordinates:[n]},properties:{}}}function D(t){let e;if(\"Polygon\"===t.geometry.type)e=t.geometry.coordinates;else{if(\"LineString\"!==t.geometry.type)throw new Error(\"Self intersects only accepts Polygons and LineStrings\");e=[t.geometry.coordinates]}const i=[];for(let t=0;t<e.length;t++)for(let i=0;i<e[t].length-1;i++)for(let o=0;o<e.length;o++)for(let n=0;n<e[o].length-1;n++)s(t,i,o,n);return i.length>0;function o(t){return t<0||t>1}function s(t,s,n,r){const a=e[t][s],d=e[t][s+1],h=e[n][r],l=e[n][r+1],c=function(t,e,i,o){if(w(t,i)||w(t,o)||w(e,i)||w(o,i))return null;const s=t[0],n=t[1],r=e[0],a=e[1],d=i[0],h=i[1],l=o[0],c=o[1],u=(s-r)*(h-c)-(n-a)*(d-l);return 0===u?null:[((s*a-n*r)*(d-l)-(s-r)*(d*c-h*l))/u,((s*a-n*r)*(h-c)-(n-a)*(d*c-h*l))/u]}(a,d,h,l);if(null===c)return;let u,p;u=d[0]!==a[0]?(c[0]-a[0])/(d[0]-a[0]):(c[1]-a[1])/(d[1]-a[1]),p=l[0]!==h[0]?(c[0]-h[0])/(l[0]-h[0]):(c[1]-h[1])/(l[1]-h[1]),o(u)||o(p)||(c.toString(),i.push(c))}}function w(t,e){return t[0]===e[0]&&t[1]===e[1]}function O(t,e){return b(t[0])<=e&&b(t[1])<=e}function _(t){return 2===t.length&&\"number\"==typeof t[0]&&\"number\"==typeof t[1]&&Infinity!==t[0]&&Infinity!==t[1]&&(i=t[0])>=-180&&i<=180&&(e=t[1])>=-90&&e<=90;var e,i}function b(t){let e=1,i=0;for(;Math.round(t*e)/e!==t;)e*=10,i++;return i}const k=\"Feature has holes\",N=\"Feature has less than 4 coordinates\",T=\"Feature has invalid coordinates\",j=\"Feature coordinates are not closed\";function W(t,e){if(\"Polygon\"!==t.geometry.type)return{valid:!1,reason:\"Feature is not a Polygon\"};if(1!==t.geometry.coordinates.length)return{valid:!1,reason:k};if(t.geometry.coordinates[0].length<4)return{valid:!1,reason:N};for(let i=0;i<t.geometry.coordinates[0].length;i++){if(!_(t.geometry.coordinates[0][i]))return{valid:!1,reason:T};if(!O(t.geometry.coordinates[0][i],e))return{valid:!1,reason:\"Feature has coordinates with excessive precision\"}}return(i=t.geometry.coordinates[0][0])[0]!==(o=t.geometry.coordinates[0][t.geometry.coordinates[0].length-1])[0]||i[1]!==o[1]?{valid:!1,reason:j}:{valid:!0};var i,o}function B(t,e){const i=W(t,e);return i.valid?D(t)?{valid:!1,reason:\"Feature intersects itself\"}:{valid:!0}:i}const G={cancel:\"Escape\",finish:\"Enter\"},R={start:\"crosshair\"};class L extends u{constructor(t){super(t,!0),this.mode=\"circle\",this.center=void 0,this.clickCount=0,this.currentCircleId=void 0,this.keyEvents=G,this.cursors=R,this.startingRadiusKilometers=1e-5,this.cursorMovedAfterInitialCursorDown=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.startingRadiusKilometers&&(this.startingRadiusKilometers=e.startingRadiusKilometers)}close(){if(void 0===this.currentCircleId)return;this.store.updateProperty([{id:this.currentCircleId,property:o.CURRENTLY_DRAWING,value:void 0}]);const t=this.currentCircleId;if(this.validate&&t){const i=this.store.getGeometryCopy(t);if(!this.validate({type:\"Feature\",id:t,geometry:i,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid)return}this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onClick(t){if(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(0===this.clickCount){this.center=[t.lng,t.lat];const e=F({center:this.center,radiusKilometers:this.startingRadiusKilometers,coordinatePrecision:this.coordinatePrecision}),[i]=this.store.create([{geometry:e.geometry,properties:{mode:this.mode,radiusKilometers:this.startingRadiusKilometers,[o.CURRENTLY_DRAWING]:!0}}]);this.currentCircleId=i,this.clickCount++,this.cursorMovedAfterInitialCursorDown=!1,this.setDrawing()}else 1===this.clickCount&&this.center&&void 0!==this.currentCircleId&&this.cursorMovedAfterInitialCursorDown&&this.updateCircle(t),this.close()}onMouseMove(t){this.cursorMovedAfterInitialCursorDown=!0,this.updateCircle(t)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentCircleId;this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t])}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return\"Feature\"===e.type&&\"Polygon\"===e.geometry.type&&e.properties.mode===this.mode?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=s,i):i}validateFeature(t){return this.validateModeFeature(t,t=>B(t,this.coordinatePrecision))}updateCircle(t){if(1===this.clickCount&&this.center&&this.currentCircleId){const i=g(this.center,[t.lng,t.lat]);let o;if(\"web-mercator\"===this.projection){const e=function(t,e){const i=1e3*g(t,e);if(0===i)return 1;const{x:o,y:s}=E(t[0],t[1]),{x:n,y:r}=E(e[0],e[1]);return Math.sqrt(Math.pow(n-o,2)+Math.pow(r-s,2))/i}(this.center,[t.lng,t.lat]);o=function(t){const{center:e,radiusKilometers:i,coordinatePrecision:o}=t,s=t.steps?t.steps:64,n=1e3*i,[r,a]=e,{x:d,y:h}=E(r,a),l=[];for(let t=0;t<s;t++){const e=360*t/s*Math.PI/180,i=n*Math.cos(e),r=n*Math.sin(e),[a,c]=[d+i,h+r],{lng:u,lat:p}=S(a,c);l.push([C(u,o),C(p,o)])}return l.push(l[0]),{type:\"Feature\",geometry:{type:\"Polygon\",coordinates:[l]},properties:{}}}({center:this.center,radiusKilometers:i*e,coordinatePrecision:this.coordinatePrecision})}else{if(\"globe\"!==this.projection)throw new Error(\"Invalid projection\");o=F({center:this.center,radiusKilometers:i,coordinatePrecision:this.coordinatePrecision})}if(this.validate&&!this.validate({type:\"Feature\",id:this.currentCircleId,geometry:o.geometry,properties:{radiusKilometers:i}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid)return;this.store.updateGeometry([{id:this.currentCircleId,geometry:o.geometry}]),this.store.updateProperty([{id:this.currentCircleId,property:\"radiusKilometers\",value:i}])}}afterFeatureUpdated(t){this.currentCircleId===t.id&&(this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted())}}const U=(t,e)=>{const{x:i,y:o}=t,{x:s,y:n}=e,r=s-i,a=n-o;return Math.sqrt(a*a+r*r)};function A(t){const e=function(t){const e=t.coordinates[0];let i=0;for(let t=0;t<e.length-1;t++){const[o,s]=e[t],[n,r]=e[t+1];i+=(n-o)*(r+s)}return i<0}(t);if(!e)return{type:\"Polygon\",coordinates:[t.coordinates[0].reverse()]}}const V={cancel:\"Escape\",finish:\"Enter\"},Y={start:\"crosshair\",close:\"pointer\"};class K extends u{constructor(t){super(t,!0),this.mode=\"freehand\",this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.minDistance=20,this.keyEvents=V,this.cursors=Y,this.preventPointsNearClose=!0,this.autoClose=!1,this.autoCloseTimeout=500,this.hasLeftStartingPoint=!1,this.preventNewFeature=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.minDistance&&(this.minDistance=e.minDistance),void 0!==(null==e?void 0:e.preventPointsNearClose)&&(this.preventPointsNearClose=e.preventPointsNearClose),void 0!==(null==e?void 0:e.autoClose)&&(this.autoClose=e.autoClose),null!=e&&e.autoCloseTimeout&&(this.autoCloseTimeout=e.autoCloseTimeout),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors))}close(){if(void 0===this.currentId)return;if(this.currentId){const t=A(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}]),this.store.updateProperty([{id:this.currentId,property:o.CURRENTLY_DRAWING,value:void 0}])}const t=this.currentId;if(this.validate&&t){const i=this.store.getGeometryCopy(t);if(!this.validate({type:\"Feature\",id:t,geometry:i,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1,\"drawing\"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(void 0===this.currentId||!1===this.startingClick)return void this.setCursor(this.cursors.start);const i=this.store.getGeometryCopy(this.currentId),o=i.coordinates[0].length-2,[s,n]=i.coordinates[0][o],{x:r,y:a}=this.project(s,n),d=U({x:r,y:a},{x:t.containerX,y:t.containerY}),[h,l]=i.coordinates[0][0],{x:c,y:u}=this.project(h,l);if(U({x:c,y:u},{x:t.containerX,y:t.containerY})<this.pointerDistance){if(this.autoClose&&this.hasLeftStartingPoint&&(this.preventNewFeature=!0,setTimeout(()=>{this.preventNewFeature=!1},this.autoCloseTimeout),this.close()),this.setCursor(this.cursors.close),this.preventPointsNearClose)return}else this.hasLeftStartingPoint=!0,this.setCursor(this.cursors.start);if(d<this.minDistance)return;i.coordinates[0].pop();const p={type:\"Polygon\",coordinates:[[...i.coordinates[0],[t.lng,t.lat],i.coordinates[0][0]]]};this.validate&&!this.validate({type:\"Feature\",id:this.currentId,geometry:p,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid||this.store.updateGeometry([{id:this.currentId,geometry:p}])}onClick(t){if(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)){if(this.preventNewFeature)return;if(!1===this.startingClick){const[e,i]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0}},{geometry:{type:\"Point\",coordinates:[t.lng,t.lat]},properties:{mode:this.mode,[o.CLOSING_POINT]:!0}}]);return this.currentId=e,this.closingPointId=i,this.startingClick=!0,void(\"drawing\"!==this.state&&this.setDrawing())}this.close()}}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&!0===this.startingClick&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,\"drawing\"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==e&&this.store.delete([e])}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return\"Feature\"===e.type&&\"Polygon\"===e.geometry.type&&e.properties.mode===this.mode?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=s,i):\"Feature\"===e.type&&\"Point\"===e.geometry.type&&e.properties.mode===this.mode?(i.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,i.pointWidth,e),i.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,i.pointColor,e),i.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,e),i.zIndex=50,i):i}validateFeature(t){return this.validateModeFeature(t,t=>W(t,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1)}}class z{constructor({store:t,mode:e,project:i,unproject:o,pointerDistance:s,coordinatePrecision:n,projection:r}){this.store=void 0,this.mode=void 0,this.project=void 0,this.unproject=void 0,this.pointerDistance=void 0,this.coordinatePrecision=void 0,this.projection=void 0,this.store=t,this.mode=e,this.project=i,this.unproject=o,this.pointerDistance=s,this.coordinatePrecision=n,this.projection=r}}function X({unproject:t,point:e,pointerDistance:i}){const o=i/2,{x:s,y:n}=e;return{type:\"Feature\",properties:{},geometry:{type:\"Polygon\",coordinates:[[t(s-o,n-o),t(s+o,n-o),t(s+o,n+o),t(s-o,n+o),t(s-o,n-o)].map(t=>[t.lng,t.lat])]}}}class H extends z{constructor(t){super(t)}create(t){const{containerX:e,containerY:i}=t;return X({unproject:this.unproject,point:{x:e,y:i},pointerDistance:this.pointerDistance})}}class $ extends z{constructor(t){super(t)}measure(t,e){const{x:i,y:o}=this.project(e[0],e[1]);return U({x:i,y:o},{x:t.containerX,y:t.containerY})}}class q extends z{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=t=>this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode)).coordinate,this.getSnappableCoordinate=(t,e)=>this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode&&t.id!==e)).coordinate,this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDist:Infinity};return o.forEach(e=>{let i;if(\"Polygon\"===e.geometry.type)i=e.geometry.coordinates[0];else{if(\"LineString\"!==e.geometry.type)return;i=e.geometry.coordinates}i.forEach((i,o)=>{const n=this.pixelDistance.measure(t,i);n<s.minDist&&n<this.pointerDistance&&(s.coordinate=i,s.minDist=n,s.featureId=e.id,s.featureCoordinateIndex=o)})}),s}}function Z(t,e,i){const o=f(t[0]),s=f(t[1]),n=f(i),r=m(e),a=Math.asin(Math.sin(s)*Math.cos(r)+Math.cos(s)*Math.sin(r)*Math.cos(n));return[v(o+Math.atan2(Math.sin(n)*Math.sin(r)*Math.cos(s),Math.cos(r)-Math.sin(s)*Math.sin(a))),v(a)]}function J({x:t,y:e},i,o){const s=f(o);return{x:t+i*Math.cos(s),y:e+i*Math.sin(s)}}function Q(t,e){const i=f(t[0]),o=f(e[0]),s=f(t[1]),n=f(e[1]),r=Math.sin(o-i)*Math.cos(n),a=Math.cos(s)*Math.sin(n)-Math.sin(s)*Math.cos(n)*Math.cos(o-i);return v(Math.atan2(r,a))}function tt({x:t,y:e},{x:i,y:o}){const s=i-t,n=o-e;if(0===s&&0===n)return 0;let r=Math.atan2(n,s);return r*=180/Math.PI,r>180?r-=360:r<-180&&(r+=360),r}function et(t){return(t+360)%360}function it(t,e,i){const o=[],s=t.length;let n,r,a,d=0;for(let s=0;s<t.length&&!(e>=d&&s===t.length-1);s++){if(d>e&&0===o.length){if(n=e-d,!n)return o.push(t[s]),o;r=Q(t[s],t[s-1])-180,a=Z(t[s],n,r),o.push(a)}if(d>=i)return n=i-d,n?(r=Q(t[s],t[s-1])-180,a=Z(t[s],n,r),o.push(a),o):(o.push(t[s]),o);if(d>=e&&o.push(t[s]),s===t.length-1)return o;d+=g(t[s],t[s+1])}if(d<e&&t.length===s)throw new Error(\"Start position is beyond line\");const h=t[t.length-1];return[h,h]}function ot(t){return t*(Math.PI/180)}function st(t){return t*(180/Math.PI)}class nt extends z{constructor(t){super(t),this.config=void 0,this.config=t}generateInsertionCoordinates(t,e,i){const o=[t,e];let s=0;for(let t=0;t<o.length-1;t++)s+=g(o[0],o[1]);if(s<=i)return o;let n=s/i-1;Number.isInteger(n)||(n=Math.floor(n)+1);const r=[];for(let t=0;t<n;t++){const e=it(o,i*t,i*(t+1));r.push(e)}const a=[];for(let t=0;t<r.length;t++)a.push(r[t][1]);return this.limitCoordinates(a)}generateInsertionGeodesicCoordinates(t,e,i){const o=g(t,e),s=function(t,e,i){const o=[],s=ot(t[1]),n=ot(t[0]),r=ot(e[1]),a=ot(e[0]);i+=1;const d=2*Math.asin(Math.sqrt(Math.sin((r-s)/2)**2+Math.cos(s)*Math.cos(r)*Math.sin((a-n)/2)**2));if(0===d||isNaN(d))return o;for(let t=0;t<=i;t++){const e=t/i,h=Math.sin((1-e)*d)/Math.sin(d),l=Math.sin(e*d)/Math.sin(d),c=h*Math.cos(s)*Math.cos(n)+l*Math.cos(r)*Math.cos(a),u=h*Math.cos(s)*Math.sin(n)+l*Math.cos(r)*Math.sin(a),p=h*Math.sin(s)+l*Math.sin(r);if(isNaN(c)||isNaN(u)||isNaN(p))continue;const g=Math.atan2(p,Math.sqrt(c**2+u**2)),y=Math.atan2(u,c);isNaN(g)||isNaN(y)||o.push([st(y),st(g)])}return o.slice(1,-1)}(t,e,Math.floor(o/i));return this.limitCoordinates(s)}limitCoordinates(t){return t.map(t=>[C(t[0],this.config.coordinatePrecision),C(t[1],this.config.coordinatePrecision)])}}function rt(t,e){return t[0]===e[0]&&t[1]===e[1]}function at(t,e){if(\"LineString\"!==t.geometry.type)return{valid:!1,reason:\"Feature is not a LineString\"};if(t.geometry.coordinates.length<2)return{valid:!1,reason:\"Feature has less than 2 coordinates\"};for(let i=0;i<t.geometry.coordinates.length;i++){if(!_(t.geometry.coordinates[i]))return{valid:!1,reason:\"Feature has invalid coordinates\"};if(!O(t.geometry.coordinates[i],e))return{valid:!1,reason:\"Feature has coordinates with excessive precision\"}}return{valid:!0}}function dt(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2))}function ht(t,e){const i=function(t,e){const[i,o,s]=t,[n,r,a]=e;return i*n+o*r+s*a}(t,e)/(dt(t)*dt(e));return Math.acos(Math.min(Math.max(i,-1),1))}function lt(t){const e=f(t[1]),i=f(t[0]);return[Math.cos(e)*Math.cos(i),Math.cos(e)*Math.sin(i),Math.sin(e)]}function ct(t){const[e,i,o]=t,s=v(Math.asin(o));return[v(Math.atan2(i,e)),s]}function ut(t,e,i){const o=lt(t),s=lt(e),n=lt(i),[r,a,d]=n,[h,l,c]=function(t,e){const[i,o,s]=t,[n,r,a]=e;return[o*a-s*r,s*n-i*a,i*r-o*n]}(o,s),u=l*d-c*a,p=c*r-h*d,y=h*a-l*r,f=y*l-p*c,m=u*c-y*h,v=p*h-u*l,C=1/Math.sqrt(Math.pow(f,2)+Math.pow(m,2)+Math.pow(v,2)),P=[f*C,m*C,v*C],I=[-1*f*C,-1*m*C,-1*v*C],x=ht(o,s),E=ht(o,P),S=ht(s,P),M=ht(o,I),F=ht(s,I);let D;return D=E<M&&E<F||S<M&&S<F?P:I,ht(o,D)>x||ht(s,D)>x?g(ct(D),ct(o))<=g(ct(D),ct(s))?[ct(o),!0,!1]:[ct(s),!1,!0]:[ct(D),!1,!1]}function pt(t,e,i){const o=e.x-t.x,s=e.y-t.y,n=Math.max(0,Math.min(1,((i.x-t.x)*o+(i.y-t.y)*s)/(o*o+s*s)));return{x:t.x+n*o,y:t.y+n*s}}class gt extends z{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=t=>{const e=this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode));return e.coordinate?[C(e.coordinate[0],this.config.coordinatePrecision),C(e.coordinate[1],this.config.coordinatePrecision)]:void 0},this.getSnappableCoordinate=(t,e)=>{const i=this.getSnappable(t,t=>Boolean(t.properties&&t.properties.mode===this.mode&&t.id!==e));return i.coordinate?[C(i.coordinate[0],this.config.coordinatePrecision),C(i.coordinate[1],this.config.coordinatePrecision)]:void 0},this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDistance:Infinity};return o.forEach(e=>{let i;if(\"Polygon\"===e.geometry.type)i=e.geometry.coordinates[0];else{if(\"LineString\"!==e.geometry.type)return;i=e.geometry.coordinates}const o=[];for(let t=0;t<i.length-1;t++)o.push([i[t],i[t+1]]);let n;const r=[t.lng,t.lat];if(\"web-mercator\"===this.config.projection?n=function(t,e){let i=[Infinity,Infinity],o=Infinity,s=0;for(let n of e){const r=n[0],a=n[1];let d,h=Infinity;const l=E(r[0],r[1]),c=E(a[0],a[1]),u=E(t[0],t[1]);if(r[0]===t[0]&&r[1]===t[1])d=r;else if(a[0]===t[0]&&a[1]===t[1])d=a;else{const{x:t,y:e}=pt(l,c,u),{lng:i,lat:o}=S(t,e);d=[i,o]}d&&(h=U(u,E(d[0],d[1])),h<o&&(i=d,o=h,s=e.indexOf(n)))}return Infinity===o?void 0:{coordinate:i,lineIndex:s,distance:o}}(r,o):\"globe\"===this.config.projection&&(n=function(t,e){let i=[Infinity,Infinity],o=Infinity,s=0;for(let n of e){const r=n[0],a=n[1];let d,h=Infinity;r[0]===t[0]&&r[1]===t[1]?d=r:a[0]===t[0]&&a[1]===t[1]?d=a:[d]=ut(r,a,t),d&&(h=g(t,d),h<o&&(i=d,o=h,s=e.indexOf(n)))}return Infinity===o?void 0:{coordinate:i,distance:o,lineIndex:s}}(r,o)),!n)return;const a=this.pixelDistance.measure(t,n.coordinate);a<s.minDistance&&a<this.pointerDistance&&(s.featureId=e.id,s.coordinate=[C(n.coordinate[0],this.config.coordinatePrecision),C(n.coordinate[1],this.config.coordinatePrecision)],s.featureCoordinateIndex=n.lineIndex,s.minDistance=a)}),s}}const yt={cancel:\"Escape\",finish:\"Enter\"},ft={start:\"crosshair\",close:\"pointer\",dragStart:\"grabbing\",dragEnd:\"crosshair\"};class mt extends u{constructor(t){super(t,!0),this.mode=\"linestring\",this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.keyEvents=yt,this.snapping=void 0,this.cursors=ft,this.mouseMove=!1,this.insertCoordinates=void 0,this.lastCommittedCoordinates=void 0,this.snappedPointId=void 0,this.lastMouseMoveEvent=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinateSnapping=void 0,this.insertPoint=void 0,this.lineSnapping=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null!=e&&e.snapping&&(this.snapping=e.snapping),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.insertCoordinates&&(this.insertCoordinates=e.insertCoordinates),e&&e.editable&&(this.editable=e.editable)}updateSnappedCoordinate(t){const e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:\"Point\",coordinates:e}}]);else{const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:e},properties:{mode:this.mode,[o.SNAPPING_POINT]:!0}}]);this.snappedPointId=t}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);return e}close(){if(void 0===this.currentId)return;const t=this.store.getGeometryCopy(this.currentId);t.coordinates.pop(),this.updateGeometries([...t.coordinates],void 0,e.Commit),this.store.updateProperty([{id:this.currentId,property:o.CURRENTLY_DRAWING,value:void 0}]);const i=this.currentId;this.closingPointId&&this.store.delete([this.closingPointId]),this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.snappedPointId=void 0,this.lastCommittedCoordinates=void 0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(i,{mode:this.mode,action:\"draw\"})}updateGeometries(t,e,i){if(!this.currentId)return;const o={type:\"LineString\",coordinates:t};if(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid)return;const s=[{id:this.currentId,geometry:o}];this.closingPointId&&e&&s.push({id:this.closingPointId,geometry:{type:\"Point\",coordinates:e}}),\"commit\"===i&&(this.lastCommittedCoordinates=o.coordinates),this.store.updateGeometry(s)}generateInsertCoordinates(t,e){if(!this.insertCoordinates||!this.lastCommittedCoordinates)throw new Error(\"Not able to insert coordinates\");if(\"amount\"!==this.insertCoordinates.strategy)throw new Error(\"Strategy does not exist\");const i=g(t,e)/(this.insertCoordinates.value+1);let o=[];return\"globe\"===this.projection?o=this.insertPoint.generateInsertionGeodesicCoordinates(t,e,i):\"web-mercator\"===this.projection&&(o=this.insertPoint.generateInsertionCoordinates(t,e,i)),o}createLine(t){const[e]=this.store.create([{geometry:{type:\"LineString\",coordinates:[t,t]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0}}]);this.lastCommittedCoordinates=[t,t],this.currentId=e,this.currentCoordinate++,this.setDrawing()}firstUpdateToLine(t){if(!this.currentId)return;const i=this.store.getGeometryCopy(this.currentId).coordinates,[s]=this.store.create([{geometry:{type:\"Point\",coordinates:[...t]},properties:{mode:this.mode,[o.CLOSING_POINT]:!0}}]);this.closingPointId=s,this.setCursor(this.cursors.close);const n=[...i,t];this.updateGeometries(n,void 0,e.Commit),this.currentCoordinate++}updateToLine(t,i){if(!this.currentId)return;const o=this.store.getGeometryCopy(this.currentId).coordinates,[s,n]=this.lastCommittedCoordinates?this.lastCommittedCoordinates[this.lastCommittedCoordinates.length-1]:o[o.length-2],{x:r,y:a}=this.project(s,n);if(U({x:r,y:a},{x:i.x,y:i.y})<this.pointerDistance)return void this.close();this.setCursor(this.cursors.close);const d=[...o,t];this.updateGeometries(d,o[o.length-1],e.Commit),this.currentCoordinate++}registerBehaviors(t){this.coordinateSnapping=new q(t,new $(t),new H(t)),this.insertPoint=new nt(t),this.clickBoundingBox=new H(t),this.pixelDistance=new $(t),this.lineSnapping=new gt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new q(t,this.pixelDistance,this.clickBoundingBox)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){this.mouseMove=!0,this.setCursor(this.cursors.start),this.lastMouseMoveEvent=t;const i=this.updateSnappedCoordinate(t)||[t.lng,t.lat];if(void 0===this.currentId||0===this.currentCoordinate)return;const o=this.store.getGeometryCopy(this.currentId).coordinates;if(o.pop(),this.closingPointId){const[e,i]=o[o.length-1],{x:s,y:n}=this.project(e,i);U({x:s,y:n},{x:t.containerX,y:t.containerY})<this.pointerDistance&&this.setCursor(this.cursors.close)}let s=[...o,i];if(this.insertCoordinates&&this.currentId&&this.lastCommittedCoordinates){const t=this.lastCommittedCoordinates[this.lastCommittedCoordinates.length-1],e=i;if(!rt(t,e)){const o=this.generateInsertCoordinates(t,e);s=[...this.lastCommittedCoordinates.slice(0,-1),...o,i]}}this.updateGeometries(s,void 0,e.Provisional)}onRightClick(t){if(!this.editable||\"started\"!==this.state)return;const{featureId:i,featureCoordinateIndex:o}=this.coordinateSnapping.getSnappable(t,t=>this.lineStringFilter(t));if(!i||void 0===o)return;const s=this.store.getGeometryCopy(i);let n;if(\"LineString\"===s.type&&(n=s.coordinates,!(n.length<=2))){if(n.splice(o,1),this.validate&&!this.validate({id:i,type:\"Feature\",geometry:s,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Commit}).valid)return;this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:i,geometry:s}]),this.onFinish(i,{mode:this.mode,action:\"edit\"})}}onLeftClick(t){this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);const e=this.snapCoordinate(t)||[t.lng,t.lat];0===this.currentCoordinate?this.createLine(e):1===this.currentCoordinate&&this.currentId?this.firstUpdateToLine(e):this.currentId&&this.updateToLine(e,{x:t.containerX,y:t.containerY})}onClick(t){(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))&&(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,\"right\"===t.button?this.onRightClick(t):\"left\"===t.button&&this.onLeftClick(t))}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel&&this.cleanUp(),t.key===this.keyEvents.finish&&this.close()}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t))return;if(!this.editable)return;let i;if(\"started\"===this.state){const e=this.lineSnapping.getSnappable(t,t=>this.lineStringFilter(t));e.coordinate&&(this.editedSnapType=\"line\",this.editedFeatureCoordinateIndex=e.featureCoordinateIndex,this.editedFeatureId=e.featureId,i=e.coordinate);const o=this.coordinateSnapping.getSnappable(t,t=>this.lineStringFilter(t));o.coordinate&&(this.editedSnapType=\"coordinate\",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:i},properties:{mode:this.mode,[o.EDITED]:!0}}]);this.editedPointId=t}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,i){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t))return;if(void 0===this.editedFeatureId||void 0===this.editedFeatureCoordinateIndex)return;const s=this.store.getGeometryCopy(this.editedFeatureId);\"coordinate\"===this.editedSnapType||\"line\"===this.editedSnapType&&void 0!==this.editedInsertIndex?s.coordinates[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:\"line\"===this.editedSnapType&&void 0===this.editedInsertIndex&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,s.coordinates.splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const n={type:\"LineString\",coordinates:s.coordinates};this.validate&&!this.validate({type:\"Feature\",geometry:n,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:n}]),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:\"Point\",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:o.EDITED,value:!0}]))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&void 0!==this.editedFeatureId&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:o.EDITED,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:\"edit\"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.closingPointId,i=this.snappedPointId;this.closingPointId=void 0,this.snappedPointId=void 0,this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==i&&this.store.delete([i]),void 0!==e&&this.store.delete([e])}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(\"Feature\"===e.type&&\"LineString\"===e.geometry.type&&e.properties.mode===this.mode)return i.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,i.lineStringColor,e),i.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,i.lineStringWidth,e),i.zIndex=s,i;if(\"Feature\"===e.type&&\"Point\"===e.geometry.type&&e.properties.mode===this.mode){const t=e.properties[o.CLOSING_POINT];return i.pointColor=this.getHexColorStylingValue(t?this.styles.closingPointColor:this.styles.snappingPointColor,i.pointColor,e),i.pointWidth=this.getNumericStylingValue(t?this.styles.closingPointWidth:this.styles.snappingPointWidth,i.pointWidth,e),i.pointOutlineColor=this.getHexColorStylingValue(t?this.styles.closingPointOutlineColor:this.styles.snappingPointOutlineColor,\"#ffffff\",e),i.pointOutlineWidth=this.getNumericStylingValue(t?this.styles.closingPointOutlineWidth:this.styles.snappingPointOutlineWidth,2,e),i.zIndex=50,i}return i}validateFeature(t){return this.validateModeFeature(t,t=>at(t,this.coordinatePrecision))}lineStringFilter(t){return Boolean(\"LineString\"===t.geometry.type&&t.properties&&t.properties.mode===this.mode)}snapCoordinate(t){var e,i,o;let s;if(null!=(e=this.snapping)&&e.toLine){let e;e=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t),e&&(s=e)}return null!=(i=this.snapping)&&i.toCoordinate&&(s=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t)),null!=(o=this.snapping)&&o.toCustom&&(s=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?()=>this.store.getGeometryCopy(this.currentId):()=>null,project:this.project,unproject:this.unproject})),s}afterFeatureUpdated(t){this.editedFeatureId===t.id&&this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0),this.snappedPointId&&this.lastMouseMoveEvent&&this.updateSnappedCoordinate(this.lastMouseMoveEvent),this.currentId===t.id&&(this.closingPointId&&(this.store.delete([this.closingPointId]),this.closingPointId=void 0),this.currentCoordinate=0,this.currentId=void 0,\"drawing\"===this.state&&this.setStarted())}}const vt=\"Feature is not a Point\",Ct=\"Feature has invalid coordinates\",Pt=\"Feature has coordinates with excessive precision\";function It(t,e){return\"Point\"!==t.geometry.type?{valid:!1,reason:vt}:_(t.geometry.coordinates)?O(t.geometry.coordinates,e)?{valid:!0}:{valid:!1,reason:Pt}:{valid:!1,reason:Ct}}const xt={create:\"crosshair\",dragStart:\"grabbing\",dragEnd:\"crosshair\"};class Et extends u{constructor(t){super(t,!0),this.mode=\"point\",this.cursors=xt,this.editable=!1,this.editedFeatureId=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null!=e&&e.editable&&(this.editable=e.editable)}start(){this.setStarted(),this.setCursor(this.cursors.create)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onClick(t){\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}onMouseMove(){}onKeyDown(){}onKeyUp(){}cleanUp(){this.editedFeatureId=void 0}onDragStart(t,e){if(this.allowPointerEvent(this.pointerEvents.onDragStart,t)){if(this.editable){const e=this.getNearestPointFeature(t);this.editedFeatureId=null==e?void 0:e.id}this.editedFeatureId&&(this.setCursor(this.cursors.dragStart),e(!1))}}onDrag(t,i){this.allowPointerEvent(this.pointerEvents.onDrag,t)&&void 0!==this.editedFeatureId&&(this.validate&&!this.validate({type:\"Feature\",geometry:{type:\"Point\",coordinates:[t.lng,t.lat]},properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid||(this.store.updateGeometry([{id:this.editedFeatureId,geometry:{type:\"Point\",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:o.EDITED,value:!0}])))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&void 0!==this.editedFeatureId&&(this.onFinish(this.editedFeatureId,{mode:this.mode,action:\"edit\"}),this.setCursor(this.cursors.dragEnd),this.store.updateProperty([{id:this.editedFeatureId,property:o.EDITED,value:!1}]),this.editedFeatureId=void 0,e(!0))}registerBehaviors(t){this.pixelDistance=new $(t),this.clickBoundingBox=new H(t)}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(\"Feature\"===e.type&&\"Point\"===e.geometry.type&&e.properties.mode===this.mode){const t=Boolean(e.id&&this.editedFeatureId===e.id);i.pointWidth=this.getNumericStylingValue(t?this.styles.editedPointWidth:this.styles.pointWidth,i.pointWidth,e),i.pointColor=this.getHexColorStylingValue(t?this.styles.editedPointColor:this.styles.pointColor,i.pointColor,e),i.pointOutlineColor=this.getHexColorStylingValue(t?this.styles.editedPointOutlineColor:this.styles.pointOutlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(t?this.styles.editedPointOutlineWidth:this.styles.pointOutlineWidth,2,e),i.zIndex=30}return i}validateFeature(t){return this.validateModeFeature(t,t=>It(t,this.coordinatePrecision))}onLeftClick(t){const i={type:\"Point\",coordinates:[t.lng,t.lat]},o={mode:this.mode};if(this.validate&&!this.validate({type:\"Feature\",geometry:i,properties:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid)return;const[s]=this.store.create([{geometry:i,properties:o}]);this.onFinish(s,{mode:this.mode,action:\"draw\"})}onRightClick(t){if(!this.editable)return;const e=this.getNearestPointFeature(t);e&&this.store.delete([e.id])}getNearestPointFeature(t){const e=this.clickBoundingBox.create(t),i=this.store.search(e);let o,s=Infinity;for(let e=0;e<i.length;e++){const n=i[e];if(\"Point\"!==n.geometry.type||n.properties.mode!==this.mode)continue;const r=this.pixelDistance.measure(t,n.geometry.coordinates);r>s||r>this.pointerDistance||(s=r,o=n)}return o}afterFeatureUpdated(t){this.editedFeatureId===t.id&&(this.editedFeatureId=void 0,this.setCursor(this.cursors.create))}}class St extends z{constructor(t,e){super(t),this.config=void 0,this.pixelDistance=void 0,this._startEndPoints=[],this.config=t,this.pixelDistance=e}get ids(){return this._startEndPoints.concat()}set ids(t){}create(t,e){if(this.ids.length)throw new Error(\"Opening and closing points already created\");if(t.length<=3)throw new Error(\"Requires at least 4 coordinates\");this._startEndPoints=this.store.create([{geometry:{type:\"Point\",coordinates:t[0]},properties:{mode:e,[o.CLOSING_POINT]:!0}},{geometry:{type:\"Point\",coordinates:t[t.length-2]},properties:{mode:e,[o.CLOSING_POINT]:!0}}])}delete(){this.ids.length&&(this.store.delete(this.ids),this._startEndPoints=[])}update(t){if(2!==this.ids.length)throw new Error(\"No closing points to update\");this.store.updateGeometry([{id:this.ids[0],geometry:{type:\"Point\",coordinates:t[0]}},{id:this.ids[1],geometry:{type:\"Point\",coordinates:t[t.length-3]}}])}isClosingPoint(t){const e=this.store.getGeometryCopy(this.ids[0]),i=this.store.getGeometryCopy(this.ids[1]),o=this.pixelDistance.measure(t,e.coordinates),s=this.pixelDistance.measure(t,i.coordinates);return{isClosing:o<this.pointerDistance,isPreviousClosing:s<this.pointerDistance}}}class Mt extends z{constructor(t){super(t)}createOrUpdate(t){const e=this.store.getGeometryCopy(t),i=this.store.getPropertiesCopy(t);let o;if(\"Polygon\"===e.type)o=e.coordinates[0].slice(0,-1);else{if(\"LineString\"!==e.type)return;o=e.coordinates}const s=this.store.getPropertiesCopy(t),n=s.coordinatePointIds;if(n)if(n&&n.every(t=>this.store.has(t))){const e=s.coordinatePointIds,n=e.map(t=>this.store.getGeometryCopy(t).coordinates);if(e.length!==o.length){this.deleteCoordinatePoints(e);const s=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,s)}else o.forEach((t,i)=>{t[0]===n[i][0]&&t[1]===n[i][1]||this.store.updateGeometry([{id:e[i],geometry:{type:\"Point\",coordinates:t}}])})}else{const e=n.filter(t=>this.store.has(t));e.length&&this.deleteCoordinatePoints(e);const s=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,s)}else{const e=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,e)}}deletePointsByFeatureIds(t){for(const e of t)this.deleteIfPresent(e)}getUpdated(e,i){const o=this.store.getPropertiesCopy(e);if(o.coordinatePointIds)return o.coordinatePointIds.map((e,o)=>({id:e,geometry:t({},this.store.getGeometryCopy(e),{coordinates:i[o]})}))}createPoints(t,e,i){return this.store.create(t.map((t,s)=>({geometry:{type:\"Point\",coordinates:t},properties:{mode:e,[o.COORDINATE_POINT]:!0,[o.COORDINATE_POINT_FEATURE_ID]:i,index:s}})))}setFeatureCoordinatePoints(t,e){this.store.updateProperty([{id:t,property:o.COORDINATE_POINT_IDS,value:e}])}deleteCoordinatePoints(t){const e=t.filter(t=>this.store.has(t));this.store.delete(e)}deleteIfPresent(t){const e=this.store.getPropertiesCopy(t).coordinatePointIds;e&&(this.deleteCoordinatePoints(e),this.setFeatureCoordinatePoints(t,null))}}const Ft={cancel:\"Escape\",finish:\"Enter\"},Dt={start:\"crosshair\",close:\"pointer\",dragStart:\"grabbing\",dragEnd:\"crosshair\"};class wt extends u{constructor(t){super(t,!0),this.mode=\"polygon\",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=Ft,this.cursors=Dt,this.mouseMove=!1,this.showCoordinatePoints=!1,this.lastMouseMoveEvent=void 0,this.snapping=void 0,this.snappedPointId=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinatePoints=void 0,this.lineSnapping=void 0,this.coordinateSnapping=void 0,this.pixelDistance=void 0,this.closingPoints=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(e){if(super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.snapping&&(this.snapping=e.snapping),void 0!==(null==e?void 0:e.editable)&&(this.editable=e.editable),void 0!==(null==e?void 0:e.pointerEvents)&&(this.pointerEvents=e.pointerEvents),void 0!==(null==e?void 0:e.showCoordinatePoints))if(this.showCoordinatePoints=e.showCoordinatePoints,this.coordinatePoints&&!0===e.showCoordinatePoints)this.store.copyAllWhere(t=>t.mode===this.mode).map(t=>t.id).forEach(t=>{this.coordinatePoints.createOrUpdate(t)});else if(this.coordinatePoints&&!1===this.showCoordinatePoints){const t=this.store.copyAllWhere(t=>t.mode===this.mode&&Boolean(t[o.COORDINATE_POINT_IDS]));this.coordinatePoints.deletePointsByFeatureIds(t.map(t=>t.id))}}close(){if(void 0===this.currentId)return;const t=this.store.getGeometryCopy(this.currentId).coordinates[0];if(t.length<5)return;if(!this.updatePolygonGeometry([...t.slice(0,-2),t[0]],e.Finish))return;const i=this.currentId;if(this.currentId){const t=A(this.store.getGeometryCopy(this.currentId));t&&(this.store.updateGeometry([{id:this.currentId,geometry:t}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId)),this.store.updateProperty([{id:this.currentId,property:o.CURRENTLY_DRAWING,value:void 0},{id:this.currentId,property:o.COMMITTED_COORDINATE_COUNT,value:void 0},{id:this.currentId,property:o.PROVISIONAL_COORDINATE_COUNT,value:void 0}])}this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.snappedPointId=void 0,this.closingPoints.delete(),\"drawing\"===this.state&&this.setStarted(),this.onFinish(i,{mode:this.mode,action:\"draw\"})}registerBehaviors(t){this.clickBoundingBox=new H(t),this.pixelDistance=new $(t),this.lineSnapping=new gt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new q(t,this.pixelDistance,this.clickBoundingBox),this.closingPoints=new St(t,this.pixelDistance),this.coordinatePoints=new Mt(t)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}updateSnappedCoordinate(t){const e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:\"Point\",coordinates:e}}]);else{const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:e},properties:{mode:this.mode,[o.SNAPPING_POINT]:!0}}]);this.snappedPointId=t}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0)}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),this.lastMouseMoveEvent=t,this.updateSnappedCoordinate(t),void 0===this.currentId||0===this.currentCoordinate)return;const i=this.store.getGeometryCopy(this.currentId).coordinates[0];let s;if(1===this.currentCoordinate){const e=1/Math.pow(10,this.coordinatePrecision-1),o=Math.max(1e-6,e);s=[i[0],[t.lng,t.lat],[t.lng,t.lat-o],i[0]]}else if(2===this.currentCoordinate)s=[i[0],i[1],[t.lng,t.lat],i[0]];else{const{isClosing:e,isPreviousClosing:o}=this.closingPoints.isClosingPoint(t);o||e?(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.setCursor(this.cursors.close),s=[...i.slice(0,-2),i[0],i[0]]):s=[...i.slice(0,-2),[t.lng,t.lat],i[0]]}this.store.updateProperty([{id:this.currentId,property:o.PROVISIONAL_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.updatePolygonGeometry(s,e.Provisional)}updatePolygonGeometry(t,e){if(!this.currentId)return!1;const i={type:\"Polygon\",coordinates:[t]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid||(this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId),0))}snapCoordinate(t){var e,i,o;let s;if(null!=(e=this.snapping)&&e.toLine){let e;e=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t),e&&(s=e)}if(null!=(i=this.snapping)&&i.toCoordinate){let e;e=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t),e&&(s=e)}return null!=(o=this.snapping)&&o.toCustom&&(s=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?()=>this.store.getGeometryCopy(this.currentId):()=>null,project:this.project,unproject:this.unproject})),s}polygonFilter(t){return Boolean(\"Polygon\"===t.geometry.type&&t.properties&&t.properties.mode===this.mode)}onRightClick(t){if(!this.editable||\"started\"!==this.state)return;const{featureId:i,featureCoordinateIndex:o}=this.coordinateSnapping.getSnappable(t,t=>this.polygonFilter(t));if(!i||void 0===o)return;const s=this.store.getGeometryCopy(i);let n;\"Polygon\"===s.type&&(n=s.coordinates[0],n.length<=4||(\"Polygon\"!==s.type||0!==o&&o!==n.length-1?n.splice(o,1):(n.shift(),n.pop(),n.push([n[0][0],n[0][1]])),(!this.validate||this.validate({id:i,type:\"Feature\",geometry:s,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Commit}).valid)&&(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:i,geometry:s}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(i),this.onFinish(i,{mode:this.mode,action:\"edit\"}))))}onLeftClick(t){if(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),0===this.currentCoordinate){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const[i]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0,[o.COMMITTED_COORDINATE_COUNT]:this.currentCoordinate+1,[o.PROVISIONAL_COORDINATE_COUNT]:this.currentCoordinate+1}}]);this.currentId=i,this.currentCoordinate++,this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(i),this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){const i=this.snapCoordinate(t);i&&(t.lng=i[0],t.lat=i[1]);const s=this.store.getGeometryCopy(this.currentId);if(rt([t.lng,t.lat],s.coordinates[0][0]))return;if(!this.updatePolygonGeometry([s.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],s.coordinates[0][0]],e.Commit))return;this.store.updateProperty([{id:this.currentId,property:o.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++}else if(2===this.currentCoordinate&&this.currentId){const i=this.snapCoordinate(t);i&&(t.lng=i[0],t.lat=i[1]);const s=this.store.getGeometryCopy(this.currentId).coordinates[0];if(rt([t.lng,t.lat],s[1]))return;if(!this.updatePolygonGeometry([s[0],s[1],[t.lng,t.lat],[t.lng,t.lat],s[0]],e.Commit))return;2===this.currentCoordinate&&this.closingPoints.create(s,\"polygon\"),this.store.updateProperty([{id:this.currentId,property:o.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++}else if(this.currentId){const i=this.store.getGeometryCopy(this.currentId).coordinates[0],{isClosing:s,isPreviousClosing:n}=this.closingPoints.isClosingPoint(t);if(n||s)this.close();else{const s=this.snapCoordinate(t);if(s&&(t.lng=s[0],t.lat=s[1]),rt([t.lng,t.lat],i[this.currentCoordinate-1]))return;const n=function(t=[[[0,0],[0,1],[1,1],[1,0],[0,0]]]){return{type:\"Feature\",geometry:{type:\"Polygon\",coordinates:t},properties:{}}}([[...i.slice(0,-1),[t.lng,t.lat],i[0]]]);if(!this.updatePolygonGeometry(n.geometry.coordinates[0],e.Commit))return;this.store.updateProperty([{id:this.currentId,property:o.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++,this.closingPoints.ids.length&&this.closingPoints.update(n.geometry.coordinates[0])}}}onClick(t){this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t))return;if(!this.editable)return;let i;if(\"started\"===this.state){const e=this.lineSnapping.getSnappable(t,t=>this.polygonFilter(t));e.coordinate&&(this.editedSnapType=\"line\",this.editedFeatureCoordinateIndex=e.featureCoordinateIndex,this.editedFeatureId=e.featureId,i=e.coordinate);const o=this.coordinateSnapping.getSnappable(t,t=>this.polygonFilter(t));o.coordinate&&(this.editedSnapType=\"coordinate\",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[t]=this.store.create([{geometry:{type:\"Point\",coordinates:i},properties:{mode:this.mode,[o.EDITED]:!0}}]);this.editedPointId=t}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,i){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t))return;if(void 0===this.editedFeatureId||void 0===this.editedFeatureCoordinateIndex)return;const s=this.store.getGeometryCopy(this.editedFeatureId),n=s.coordinates[0];\"coordinate\"===this.editedSnapType||\"line\"===this.editedSnapType&&void 0!==this.editedInsertIndex?0===this.editedFeatureCoordinateIndex||this.editedFeatureCoordinateIndex===s.coordinates[0].length-1?(n[0]=[t.lng,t.lat],n[n.length-1]=[t.lng,t.lat]):n[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:\"line\"===this.editedSnapType&&void 0===this.editedInsertIndex&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,s.coordinates[0].splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const r={type:\"Polygon\",coordinates:s.coordinates};this.validate&&!this.validate({type:\"Feature\",geometry:r,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:r}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.editedFeatureId),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:\"Point\",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:o.EDITED,value:!0}]))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&void 0!==this.editedFeatureId&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:o.EDITED,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:\"edit\"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.snappedPointId,i=this.editedPointId;this.currentId=void 0,this.snappedPointId=void 0,this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted();try{t&&this.coordinatePoints.deletePointsByFeatureIds([t]),void 0!==t&&this.store.delete([t]),void 0!==i&&this.store.delete([i]),void 0!==e&&this.store.delete([e]),this.closingPoints.ids.length&&this.closingPoints.delete()}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(e.properties.mode===this.mode){if(\"Polygon\"===e.geometry.type)return i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=s,i;if(\"Point\"===e.geometry.type){const t=e.properties[o.EDITED],s=e.properties[o.COORDINATE_POINT],n=t?\"editedPoint\":e.properties[o.CLOSING_POINT]?\"closingPoint\":e.properties[o.SNAPPING_POINT]?\"snappingPoint\":s?\"coordinatePoint\":void 0;if(!n)return i;const r={editedPoint:{width:this.styles.editedPointOutlineWidth,color:this.styles.editedPointColor,outlineColor:this.styles.editedPointOutlineColor,outlineWidth:this.styles.editedPointOutlineWidth},closingPoint:{width:this.styles.closingPointWidth,color:this.styles.closingPointColor,outlineColor:this.styles.closingPointOutlineColor,outlineWidth:this.styles.closingPointOutlineWidth},snappingPoint:{width:this.styles.snappingPointWidth,color:this.styles.snappingPointColor,outlineColor:this.styles.snappingPointOutlineColor,outlineWidth:this.styles.snappingPointOutlineWidth},coordinatePoint:{width:this.styles.coordinatePointWidth,color:this.styles.coordinatePointColor,outlineColor:this.styles.coordinatePointOutlineColor,outlineWidth:this.styles.coordinatePointOutlineWidth}};return i.pointWidth=this.getNumericStylingValue(r[n].width,i.pointWidth,e),i.pointColor=this.getHexColorStylingValue(r[n].color,i.pointColor,e),i.pointOutlineColor=this.getHexColorStylingValue(r[n].outlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(r[n].outlineWidth,2,e),i.zIndex=t?40:s?20:30,i}}return i}afterFeatureAdded(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id)}afterFeatureUpdated(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id),this.editedFeatureId===t.id&&this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0),this.snappedPointId&&this.lastMouseMoveEvent&&this.updateSnappedCoordinate(this.lastMouseMoveEvent),this.currentId===t.id&&(this.currentCoordinate=0,this.currentId=void 0,this.closingPoints.delete(),\"drawing\"===this.state&&this.setStarted())}validateFeature(t){return this.validateModeFeature(t,t=>W(t,this.coordinatePrecision))}}const Ot={cancel:\"Escape\",finish:\"Enter\"},_t={start:\"crosshair\"};class bt extends u{constructor(t){super(t,!0),this.mode=\"rectangle\",this.center=void 0,this.clickCount=0,this.currentRectangleId=void 0,this.keyEvents=Ot,this.cursors=_t,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents))}updateRectangle(t,e){if(1===this.clickCount&&this.center&&this.currentRectangleId){const i=this.store.getGeometryCopy(this.currentRectangleId).coordinates[0][0],o={type:\"Polygon\",coordinates:[[i,[t.lng,i[1]],[t.lng,t.lat],[i[0],t.lat],i]]};if(this.validate&&!this.validate({id:this.currentRectangleId,geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid)return;this.store.updateGeometry([{id:this.currentRectangleId,geometry:o}])}}close(){const t=this.currentRectangleId;if(t){const e=A(this.store.getGeometryCopy(t));e&&this.store.updateGeometry([{id:t,geometry:e}]),this.store.updateProperty([{id:t,property:o.CURRENTLY_DRAWING,value:void 0}])}this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted(),void 0!==t&&this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onClick(t){if(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(0===this.clickCount){this.center=[t.lng,t.lat];const[e]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0}}]);this.currentRectangleId=e,this.clickCount++,this.setDrawing()}else this.updateRectangle(t,e.Finish),this.close()}onMouseMove(t){this.updateRectangle(t,e.Provisional)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentRectangleId;this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted(),void 0!==t&&this.store.delete([t])}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return\"Feature\"===e.type&&\"Polygon\"===e.geometry.type&&e.properties.mode===this.mode?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=s,i):i}validateFeature(t){return this.validateModeFeature(t,t=>B(t,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentRectangleId===t.id&&(this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,\"drawing\"===this.state&&this.setStarted())}}class kt extends u{constructor(t){if(!t.modeName)throw new Error(\"Mode name is required for TerraDrawRenderMode\");super(t,!0),this.type=l.Render,this.mode=\"render\",this.updateOptions(t)}updateOptions(t){super.updateOptions(t),null!=t&&t.modeName&&(this.mode=t.modeName)}registerBehaviors(t){this.mode=t.mode}start(){this.setStarted()}stop(){this.setStopped()}onKeyUp(){}onKeyDown(){}onClick(){}onDragStart(){}onDrag(){}onDragEnd(){}onMouseMove(){}cleanUp(){}styleFeature(t){return{pointColor:this.getHexColorStylingValue(this.styles.pointColor,\"#3f97e0\",t),pointWidth:this.getNumericStylingValue(this.styles.pointWidth,6,t),pointOutlineColor:this.getHexColorStylingValue(this.styles.pointOutlineColor,\"#ffffff\",t),pointOutlineWidth:this.getNumericStylingValue(this.styles.pointOutlineWidth,0,t),polygonFillColor:this.getHexColorStylingValue(this.styles.polygonFillColor,\"#3f97e0\",t),polygonFillOpacity:this.getNumericStylingValue(this.styles.polygonFillOpacity,.3,t),polygonOutlineColor:this.getHexColorStylingValue(this.styles.polygonOutlineColor,\"#3f97e0\",t),polygonOutlineWidth:this.getNumericStylingValue(this.styles.polygonOutlineWidth,4,t),lineStringWidth:this.getNumericStylingValue(this.styles.lineStringWidth,4,t),lineStringColor:this.getHexColorStylingValue(this.styles.lineStringColor,\"#3f97e0\",t),zIndex:this.getNumericStylingValue(this.styles.zIndex,0,t)}}validateFeature(t){const e=super.validateFeature(t);if(e.valid){const e=t,i=It(e,this.coordinatePrecision).valid||W(e,this.coordinatePrecision).valid||at(e,this.coordinatePrecision).valid;return i?{valid:!0}:{valid:i,reason:\"Feature is not a valid Point, Polygon or LineString feature\"}}return e}}function Nt(t,e){const i=t,o=e,s=f(i[1]),n=f(o[1]);let r=f(o[0]-i[0]);r>Math.PI&&(r-=2*Math.PI),r<-Math.PI&&(r+=2*Math.PI);const a=Math.log(Math.tan(n/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),d=(v(Math.atan2(r,a))+360)%360;return d>180?-(360-d):d}function Tt(t,e,i){let o=e;e<0&&(o=-Math.abs(o));const s=o/y,n=t[0]*Math.PI/180,r=f(t[1]),a=f(i),d=s*Math.cos(a);let h=r+d;Math.abs(h)>Math.PI/2&&(h=h>0?Math.PI-h:-Math.PI-h);const l=Math.log(Math.tan(h/2+Math.PI/4)/Math.tan(r/2+Math.PI/4)),c=Math.abs(l)>1e-11?d/l:Math.cos(r),u=[(180*(n+s*Math.sin(a)/c)/Math.PI+540)%360-180,180*h/Math.PI];return u[0]+=u[0]-t[0]>180?-360:t[0]-u[0]>180?360:0,u}function jt(t,e,i,o,s){const n=o(t[0],t[1]),r=o(e[0],e[1]),{lng:a,lat:d}=s((n.x+r.x)/2,(n.y+r.y)/2);return[C(a,i),C(d,i)]}function Wt(t,e,i){const o=Tt(t,1e3*g(t,e)/2,Nt(t,e));return[C(o[0],i),C(o[1],i)]}function Bt({featureCoords:t,precision:e,unproject:i,project:o,projection:s}){const n=[];for(let r=0;r<t.length-1;r++){let a;if(\"web-mercator\"===s)a=jt(t[r],t[r+1],e,o,i);else{if(\"globe\"!==s)throw new Error(\"Invalid projection\");a=Wt(t[r],t[r+1],e)}n.push(a)}return n}class Gt extends z{constructor(t,e,i){super(t),this.config=void 0,this.selectionPointBehavior=void 0,this.coordinatePointBehavior=void 0,this._midPoints=[],this.config=t,this.selectionPointBehavior=e,this.coordinatePointBehavior=i}get ids(){return this._midPoints.concat()}set ids(t){}insert(t,e,i){const s=this.store.getGeometryCopy(e),{midPointFeatureId:n,midPointSegment:r}=this.store.getPropertiesCopy(e),a=this.store.getGeometryCopy(n),d=\"Polygon\"===a.type?a.coordinates[0]:a.coordinates;d.splice(r+1,0,s.coordinates),a.coordinates=\"Polygon\"===a.type?[d]:d,this.store.updateGeometry([{id:n,geometry:a}]),this.store.getPropertiesCopy(t)[o.COORDINATE_POINT_IDS]&&this.coordinatePointBehavior.createOrUpdate(t),this.store.delete([...this._midPoints,...this.selectionPointBehavior.ids]),this.create(d,n,i),this.selectionPointBehavior.create(d,a.type,n)}create(t,e,o){if(!this.store.has(e))throw new Error(\"Store does not have feature with this id\");this._midPoints=this.store.create(function(t,e,i,o,s,n){return Bt({featureCoords:t,precision:i,project:o,unproject:s,projection:n}).map((t,i)=>({geometry:{type:\"Point\",coordinates:t},properties:e(i)}))}(t,t=>({mode:this.mode,[i.MID_POINT]:!0,midPointSegment:t,midPointFeatureId:e}),o,this.config.project,this.config.unproject,this.projection))}delete(){this._midPoints.length&&(this.store.delete(this._midPoints),this._midPoints=[])}getUpdated(t){if(0!==this._midPoints.length)return Bt({featureCoords:t,precision:this.coordinatePrecision,project:this.config.project,unproject:this.config.unproject,projection:this.config.projection}).map((t,e)=>({id:this._midPoints[e],geometry:{type:\"Point\",coordinates:t}}))}}class Rt extends z{constructor(t){super(t),this._selectionPoints=[]}get ids(){return this._selectionPoints.concat()}set ids(t){}create(t,e,o){this._selectionPoints=this.store.create(function(t,e,i){const o=[],s=\"Polygon\"===e?t.length-1:t.length;for(let e=0;e<s;e++)o.push({geometry:{type:\"Point\",coordinates:t[e]},properties:i(e)});return o}(t,e,t=>({mode:this.mode,index:t,[i.SELECTION_POINT]:!0,[i.SELECTION_POINT_FEATURE_ID]:o})))}delete(){this.ids.length&&(this.store.delete(this.ids),this._selectionPoints=[])}getUpdated(t){if(0!==this._selectionPoints.length)return this._selectionPoints.map((e,i)=>({id:e,geometry:{type:\"Point\",coordinates:t[i]}}))}getOneUpdated(t,e){if(void 0!==this._selectionPoints[t])return{id:this._selectionPoints[t],geometry:{type:\"Point\",coordinates:e}}}}function Lt(t,e){let i=!1;for(let r=0,a=e.length;r<a;r++){const a=e[r];for(let e=0,r=a.length,d=r-1;e<r;d=e++)(s=a[e])[1]>(o=t)[1]!=(n=a[d])[1]>o[1]&&o[0]<(n[0]-s[0])*(o[1]-s[1])/(n[1]-s[1])+s[0]&&(i=!i)}var o,s,n;return i}const Ut=(t,e,i)=>{const o=t=>t*t,s=(t,e)=>o(t.x-e.x)+o(t.y-e.y);return Math.sqrt(((t,e,i)=>{const o=s(e,i);if(0===o)return s(t,e);let n=((t.x-e.x)*(i.x-e.x)+(t.y-e.y)*(i.y-e.y))/o;return n=Math.max(0,Math.min(1,n)),s(t,{x:e.x+n*(i.x-e.x),y:e.y+n*(i.y-e.y)})})(t,e,i))};class At extends z{constructor(t,e,i){super(t),this.config=void 0,this.createClickBoundingBox=void 0,this.pixelDistance=void 0,this.config=t,this.createClickBoundingBox=e,this.pixelDistance=i}find(t,e){let o,s,n,r,a=Infinity,d=Infinity,h=Infinity;const l=this.createClickBoundingBox.create(t),c=this.store.search(l);for(let l=0;l<c.length;l++){const u=c[l],p=u.geometry;if(\"Point\"===p.type){if(u.properties.selectionPoint||u.properties.coordinatePoint||!e&&u.properties[i.MID_POINT])continue;const s=this.pixelDistance.measure(t,p.coordinates);u.properties[i.MID_POINT]&&s<this.pointerDistance&&s<h?(h=s,n=u):!u.properties[i.MID_POINT]&&s<this.pointerDistance&&s<a&&(a=s,o=u)}else if(\"LineString\"===p.type){if(o)continue;for(let e=0;e<p.coordinates.length-1;e++){const i=p.coordinates[e],o=p.coordinates[e+1],n=Ut({x:t.containerX,y:t.containerY},this.project(i[0],i[1]),this.project(o[0],o[1]));n<this.pointerDistance&&n<d&&(d=n,s=u)}}else if(\"Polygon\"===p.type){if(o||s)continue;Lt([t.lng,t.lat],p.coordinates)&&(r=u)}}return{clickedFeature:o||s||r,clickedMidPoint:n}}}class Vt extends z{constructor(t,e,i,o,s){super(t),this.config=void 0,this.featuresAtCursorEvent=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.draggedFeatureId=null,this.dragPosition=void 0,this.config=t,this.featuresAtCursorEvent=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}startDragging(t,e){this.draggedFeatureId=e,this.dragPosition=[t.lng,t.lat]}stopDragging(){this.draggedFeatureId=null,this.dragPosition=void 0}isDragging(){return null!==this.draggedFeatureId}canDrag(t,e){const{clickedFeature:i}=this.featuresAtCursorEvent.find(t,!0);return!(!i||i.id!==e)}drag(t,i){if(!this.draggedFeatureId)return;const o=this.store.getGeometryCopy(this.draggedFeatureId),s=[t.lng,t.lat];if(\"Polygon\"===o.type||\"LineString\"===o.type){let n,r;if(\"Polygon\"===o.type?(n=o.coordinates[0],r=n.length-1):(n=o.coordinates,r=n.length),!this.dragPosition)return!1;for(let t=0;t<r;t++){const e=n[t];let i,o;if(\"web-mercator\"===this.config.projection){const t=E(this.dragPosition[0],this.dragPosition[1]),n=E(s[0],s[1]),r=E(e[0],e[1]),a={x:t.x-n.x,y:t.y-n.y},d=r.x-a.x,h=r.y-a.y,{lng:l,lat:c}=S(d,h);i=l,o=c}else{const t=[this.dragPosition[0]-s[0],this.dragPosition[1]-s[1]];i=e[0]-t[0],o=e[1]-t[1]}if(i=C(i,this.config.coordinatePrecision),o=C(o,this.config.coordinatePrecision),i>180||i<-180||o>90||o<-90)return!1;n[t]=[i,o]}\"Polygon\"===o.type&&(n[n.length-1]=[n[0][0],n[0][1]]);const a=this.selectionPoints.getUpdated(n)||[],d=this.midPoints.getUpdated(n)||[],h=this.coordinatePoints.getUpdated(this.draggedFeatureId,n)||[];if(i&&!i({type:\"Feature\",id:this.draggedFeatureId,geometry:o,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}).valid)return!1;this.store.updateGeometry([{id:this.draggedFeatureId,geometry:o},...a,...d,...h]),this.dragPosition=[t.lng,t.lat]}else\"Point\"===o.type&&(this.store.updateGeometry([{id:this.draggedFeatureId,geometry:{type:\"Point\",coordinates:s}}]),this.dragPosition=[t.lng,t.lat])}}class Yt extends z{constructor(t,e,i,o,s,n,r){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.coordinateSnapping=void 0,this.lineSnapping=void 0,this.draggedCoordinate={id:null,index:-1},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s,this.coordinateSnapping=n,this.lineSnapping=r}getClosestCoordinate(t,e){const i={dist:Infinity,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(\"LineString\"===e.type)o=e.coordinates;else{if(\"Polygon\"!==e.type)return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const t=\"Polygon\"===e.type&&(s===o.length-1||0===s);i.dist=n,i.index=t?0:s,i.isFirstOrLastPolygonCoord=t}}return i}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return-1===o.index?-1:o.index}snapCoordinate(t,e,i){let o=[t.lng,t.lat];const s=t=>Boolean(t.properties&&t.properties.mode===i.properties.mode&&t.id!==this.draggedCoordinate.id);if(null!=e&&e.toLine){let e;e=this.lineSnapping.getSnappable(t,s).coordinate,e&&(o=e)}if(e.toCoordinate){let e;e=this.coordinateSnapping.getSnappable(t,s).coordinate,e&&(o=e)}if(null!=e&&e.toCustom){let s;s=e.toCustom(t,{currentCoordinate:this.draggedCoordinate.index,currentId:i.id,getCurrentGeometrySnapshot:i.id?()=>this.store.getGeometryCopy(i.id):()=>null,project:this.project,unproject:this.unproject}),s&&(o=s)}return o}drag(t,i,o,s){const n=this.draggedCoordinate.id;if(null===n)return!1;const r=this.draggedCoordinate.index,a=this.store.getGeometryCopy(n),d=this.store.getPropertiesCopy(n),h=\"LineString\"===a.type?a.coordinates:a.coordinates[0],l=\"Polygon\"===a.type&&(r===h.length-1||0===r),c={type:\"Feature\",id:n,geometry:a,properties:d},u=this.snapCoordinate(t,s,c);if(t.lng>180||t.lng<-180||t.lat>90||t.lat<-90)return!1;if(l){const t=h.length-1;h[0]=u,h[t]=u}else h[r]=u;const p=this.selectionPoints.getOneUpdated(r,u),g=p?[p]:[],y=this.midPoints.getUpdated(h)||[],f=this.coordinatePoints.getUpdated(n,h)||[];return!(\"Point\"!==a.type&&!i&&D({type:\"Feature\",geometry:a,properties:{}})||o&&!o(c,{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}).valid||(this.store.updateGeometry([{id:n,geometry:a},...g,...y,...f]),0))}isDragging(){return null!==this.draggedCoordinate.id}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}}function Kt(t){let e=0,i=0,o=0;return(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0].slice(0,-1):t.geometry.coordinates).forEach(t=>{e+=t[0],i+=t[1],o++},!0),[e/o,i/o]}const zt=(t,e)=>{if(0===e||360===e||-360===e)return t;const i=.017453292519943295*e,o=(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).map(([t,e])=>E(t,e)),s=o.reduce((t,e)=>({x:t.x+e.x,y:t.y+e.y}),{x:0,y:0});s.x/=o.length,s.y/=o.length;const n=o.map(t=>({x:s.x+(t.x-s.x)*Math.cos(i)-(t.y-s.y)*Math.sin(i),y:s.y+(t.x-s.x)*Math.sin(i)+(t.y-s.y)*Math.cos(i)})).map(({x:t,y:e})=>[S(t,e).lng,S(t,e).lat]);return\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]=n:t.geometry.coordinates=n,t};function Xt(t){const e=(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).map(t=>{const{x:e,y:i}=E(t[0],t[1]);return[e,i]});return\"Polygon\"===t.geometry.type?function(t){let e=0,i=0,o=0;const s=t.length;for(let n=0;n<s-1;n++){const[s,r]=t[n],[a,d]=t[n+1],h=s*d-a*r;e+=h,i+=(s+a)*h,o+=(r+d)*h}return e/=2,i/=6*e,o/=6*e,{x:i,y:o}}(e):function(t){const e=t.length;let i=0,o=0;for(let s=0;s<e;s++){const[e,n]=t[s];i+=e,o+=n}return{x:i/e,y:o/e}}(e)}class Ht extends z{constructor(t,e,i,o){super(t),this.config=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.lastBearing=void 0,this.selectedGeometry=void 0,this.selectedGeometryCentroid=void 0,this.selectedGeometryWebMercatorCentroid=void 0,this.config=t,this.selectionPoints=e,this.midPoints=i,this.coordinatePoints=o}reset(){this.lastBearing=void 0,this.selectedGeometry=void 0,this.selectedGeometryWebMercatorCentroid=void 0,this.selectedGeometryCentroid=void 0}rotate(t,i,o){this.selectedGeometry||(this.selectedGeometry=this.store.getGeometryCopy(i));const s=this.selectedGeometry;if(\"Polygon\"!==s.type&&\"LineString\"!==s.type)return;const n=[t.lng,t.lat];let r;const a={type:\"Feature\",geometry:s,properties:{}};if(\"web-mercator\"===this.config.projection){this.selectedGeometryWebMercatorCentroid||(this.selectedGeometryWebMercatorCentroid=Xt(a));const e=E(t.lng,t.lat);if(r=tt(this.selectedGeometryWebMercatorCentroid,e),0===r)return;if(!this.lastBearing)return void(this.lastBearing=r);zt(a,-(this.lastBearing-r))}else{if(\"globe\"!==this.config.projection)throw new Error(\"Unsupported projection\");if(this.selectedGeometryCentroid||(this.selectedGeometryCentroid=Kt({type:\"Feature\",geometry:s,properties:{}})),r=Nt(this.selectedGeometryCentroid,n),!this.lastBearing)return void(this.lastBearing=r+180);!function(t,e){if(0===e||360===e||-360===e)return t;const i=Kt(t);(\"Polygon\"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).forEach(t=>{const o=Nt(i,t)+e,s=function(t,e){t[0]+=t[0]-e[0]>180?-360:e[0]-t[0]>180?360:0;const i=y,o=e[1]*Math.PI/180,s=t[1]*Math.PI/180,n=s-o;let r=Math.abs(t[0]-e[0])*Math.PI/180;r>Math.PI&&(r-=2*Math.PI);const a=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),d=Math.abs(a)>1e-11?n/a:Math.cos(o);return Math.sqrt(n*n+d*d*r*r)*i}(i,t),n=Tt(i,s,o);t[0]=n[0],t[1]=n[1]})}(a,-(this.lastBearing-(r+180)))}const d=\"Polygon\"===s.type?s.coordinates[0]:s.coordinates;d.forEach(t=>{t[0]=C(t[0],this.coordinatePrecision),t[1]=C(t[1],this.coordinatePrecision)});const h=this.midPoints.getUpdated(d)||[],l=this.selectionPoints.getUpdated(d)||[],c=this.coordinatePoints.getUpdated(i,d)||[];if(o&&!o({id:i,type:\"Feature\",geometry:s,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}))return!1;this.store.updateGeometry([{id:i,geometry:s},...l,...h,...c]),\"web-mercator\"===this.projection?this.lastBearing=r:\"globe\"===this.projection&&(this.lastBearing=r+180)}}class $t extends z{constructor(t,e){super(t),this.config=void 0,this.dragCoordinateResizeBehavior=void 0,this.config=t,this.dragCoordinateResizeBehavior=e}scale(t,e,i){if(!this.dragCoordinateResizeBehavior.isDragging()){const i=this.dragCoordinateResizeBehavior.getDraggableIndex(t,e);this.dragCoordinateResizeBehavior.startDragging(e,i)}this.dragCoordinateResizeBehavior.drag(t,\"center-fixed\",i)}reset(){this.dragCoordinateResizeBehavior.stopDragging()}}function qt({coordinates:t,originX:e,originY:i,xScale:o,yScale:s}){1===o&&1===s||t.forEach(t=>{const{x:n,y:r}=E(t[0],t[1]),a=e+(n-e)*o,d=i+(r-i)*s,{lng:h,lat:l}=S(a,d);t[0]=h,t[1]=l})}class Zt extends z{constructor(t,e,i,o,s){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.minimumScale=1e-4,this.draggedCoordinate={id:null,index:-1},this.boundingBoxMaps={opposite:{0:4,1:5,2:6,3:7,4:0,5:1,6:2,7:3}},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}getClosestCoordinate(t,e){const i={dist:Infinity,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(\"LineString\"===e.type)o=e.coordinates;else{if(\"Polygon\"!==e.type)return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const t=\"Polygon\"===e.type&&(s===o.length-1||0===s);i.dist=n,i.index=t?0:s,i.isFirstOrLastPolygonCoord=t}}return i}isValidDragWebMercator(t,e,i){switch(t){case 0:if(e<=0||i>=0)return!1;break;case 1:if(i>=0)return!1;break;case 2:if(e>=0||i>=0)return!1;break;case 3:if(e>=0)return!1;break;case 4:if(e>=0||i<=0)return!1;break;case 5:if(i<=0)return!1;break;case 6:if(e<=0||i<=0)return!1;break;case 7:if(e<=0)return!1}return!0}getSelectedFeatureDataWebMercator(){if(!this.draggedCoordinate.id||-1===this.draggedCoordinate.index)return null;const t=this.getFeature(this.draggedCoordinate.id);if(!t)return null;const e=this.getNormalisedCoordinates(t.geometry);return{boundingBox:this.getBBoxWebMercator(e),feature:t,updatedCoords:e,selectedCoordinate:e[this.draggedCoordinate.index]}}centerWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,r=Xt(i);if(!r)return null;const a=E(n[0],n[1]),{closestBBoxIndex:d}=this.getIndexesWebMercator(o,a),h=E(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:d,updatedCoords:s,webMercatorCursor:h,webMercatorSelected:a,webMercatorOrigin:r}),s}centerFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,r=Xt(i);if(!r)return null;const a=E(n[0],n[1]),{closestBBoxIndex:d}=this.getIndexesWebMercator(o,a),h=E(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:d,updatedCoords:s,webMercatorCursor:h,webMercatorSelected:a,webMercatorOrigin:r}),s}scaleFixedWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){if(!this.isValidDragWebMercator(t,e.x-o.x,e.y-o.y))return null;let n=U(e,o)/U(e,i);return n<0&&(n=this.minimumScale),qt({coordinates:s,originX:e.x,originY:e.y,xScale:n,yScale:n}),s}oppositeFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=E(s[0],s[1]),{oppositeBboxIndex:r,closestBBoxIndex:a}=this.getIndexesWebMercator(i,n),d={x:i[r][0],y:i[r][1]},h=E(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:a,updatedCoords:o,webMercatorCursor:h,webMercatorSelected:n,webMercatorOrigin:d}),o}oppositeWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=E(s[0],s[1]),{oppositeBboxIndex:r,closestBBoxIndex:a}=this.getIndexesWebMercator(i,n),d={x:i[r][0],y:i[r][1]},h=E(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:a,updatedCoords:o,webMercatorCursor:h,webMercatorSelected:n,webMercatorOrigin:d}),o}scaleWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){const n=e.x-o.x,r=e.y-o.y;if(!this.isValidDragWebMercator(t,n,r))return null;let a=1;0!==n&&1!==t&&5!==t&&(a=1-(e.x-i.x-n)/n);let d=1;return 0!==r&&3!==t&&7!==t&&(d=1-(e.y-i.y-r)/r),this.validateScale(a,d)?(a<0&&(a=this.minimumScale),d<0&&(d=this.minimumScale),this.performWebMercatorScale(s,e.x,e.y,a,d),s):null}getFeature(t){if(null===this.draggedCoordinate.id)return null;const e=this.store.getGeometryCopy(t);return\"Polygon\"!==e.type&&\"LineString\"!==e.type?null:{id:t,type:\"Feature\",geometry:e,properties:{}}}getNormalisedCoordinates(t){return\"Polygon\"===t.type?t.coordinates[0]:t.coordinates}validateScale(t,e){const i=!isNaN(t)&&e<Number.MAX_SAFE_INTEGER,o=!isNaN(e)&&e<Number.MAX_SAFE_INTEGER;return i&&o}performWebMercatorScale(t,e,i,o,s){t.forEach(t=>{const{x:n,y:r}=E(t[0],t[1]),a=e+(n-e)*o,d=i+(r-i)*s,{lng:h,lat:l}=S(a,d);t[0]=h,t[1]=l})}getBBoxWebMercator(t){const e=[Infinity,Infinity,-Infinity,-Infinity];(t=t.map(t=>{const{x:e,y:i}=E(t[0],t[1]);return[e,i]})).forEach(([t,i])=>{t<e[0]&&(e[0]=t),i<e[1]&&(e[1]=i),t>e[2]&&(e[2]=t),i>e[3]&&(e[3]=i)});const[i,o,s,n]=e;return[[i,n],[(i+s)/2,n],[s,n],[s,n+(o-n)/2],[s,o],[(i+s)/2,o],[i,o],[i,n+(o-n)/2]]}getIndexesWebMercator(t,e){let i,o=Infinity;for(let s=0;s<t.length;s++){const n=U({x:e.x,y:e.y},{x:t[s][0],y:t[s][1]});n<o&&(i=s,o=n)}if(void 0===i)throw new Error(\"No closest coordinate found\");return{oppositeBboxIndex:this.boundingBoxMaps.opposite[i],closestBBoxIndex:i}}isDragging(){return null!==this.draggedCoordinate.id}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return-1===o.index?-1:o.index}drag(t,i,o){if(!this.draggedCoordinate.id)return!1;const s=this.getFeature(this.draggedCoordinate.id);if(!s)return!1;let n=null;if(\"center\"===i?n=this.centerWebMercatorDrag(t):\"opposite\"===i?n=this.oppositeWebMercatorDrag(t):\"center-fixed\"===i?n=this.centerFixedWebMercatorDrag(t):\"opposite-fixed\"===i&&(n=this.oppositeFixedWebMercatorDrag(t)),!n)return!1;for(let t=0;t<n.length;t++){const e=n[t];if(e[0]=C(e[0],this.coordinatePrecision),e[1]=C(e[1],this.coordinatePrecision),!O(e,this.coordinatePrecision))return!1}const r=this.midPoints.getUpdated(n)||[],a=this.selectionPoints.getUpdated(n)||[],d=this.coordinatePoints.getUpdated(s.id,n)||[],h={type:s.geometry.type,coordinates:\"Polygon\"===s.geometry.type?[n]:n};return!(o&&!o({id:this.draggedCoordinate.id,type:\"Feature\",geometry:h,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:e.Provisional}).valid||(this.store.updateGeometry([{id:this.draggedCoordinate.id,geometry:h},...a,...r,...d]),0))}}const Jt={deselect:\"Escape\",delete:\"Delete\",rotate:[\"Control\",\"r\"],scale:[\"Control\",\"s\"]},Qt={pointerOver:\"move\",dragStart:\"move\",dragEnd:\"move\",insertMidpoint:\"crosshair\"};class te extends p{constructor(t){super(t,!0),this.mode=\"select\",this.allowManualDeselection=!0,this.dragEventThrottle=5,this.dragEventCount=0,this.selected=[],this.flags={},this.keyEvents=Jt,this.cursors=Qt,this.validations={},this.selectionPoints=void 0,this.midPoints=void 0,this.coordinateSnap=void 0,this.featuresAtMouseEvent=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.dragFeature=void 0,this.dragCoordinate=void 0,this.rotateFeature=void 0,this.scaleFeature=void 0,this.dragCoordinateResizeFeature=void 0,this.coordinatePoints=void 0,this.lineSnap=void 0,this.updateOptions(t)}updateOptions(e){if(super.updateOptions(e),this.cursors=e&&e.cursors?t({},this.cursors,e.cursors):Qt,null===(null==e?void 0:e.keyEvents)?this.keyEvents={deselect:null,delete:null,rotate:null,scale:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),void 0!==(null==e?void 0:e.dragEventThrottle)&&(this.dragEventThrottle=e.dragEventThrottle),void 0!==(null==e?void 0:e.allowManualDeselection)&&(this.allowManualDeselection=e.allowManualDeselection),null!=e&&e.flags){this.flags=t({},this.flags,e.flags),this.validations={};for(const t in this.flags){const e=this.flags[t].feature;e&&e.validation&&(this.validations[t]=e.validation)}}}selectFeature(t){this.select(t,!1)}setSelecting(){if(\"started\"!==this._state)throw new Error(\"Mode must be started to move to selecting state\");this._state=\"selecting\"}registerBehaviors(t){this.pixelDistance=new $(t),this.clickBoundingBox=new H(t),this.featuresAtMouseEvent=new At(t,this.clickBoundingBox,this.pixelDistance),this.selectionPoints=new Rt(t),this.coordinatePoints=new Mt(t),this.midPoints=new Gt(t,this.selectionPoints,this.coordinatePoints),this.coordinateSnap=new q(t,this.pixelDistance,this.clickBoundingBox),this.lineSnap=new gt(t,this.pixelDistance,this.clickBoundingBox),this.rotateFeature=new Ht(t,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragFeature=new Vt(t,this.featuresAtMouseEvent,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragCoordinate=new Yt(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints,this.coordinateSnap,this.lineSnap),this.dragCoordinateResizeFeature=new Zt(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints),this.scaleFeature=new $t(t,this.dragCoordinateResizeFeature)}deselectFeature(){this.deselect()}deselect(){const t=this.selected.filter(t=>this.store.has(t)).map(t=>({id:t,property:i.SELECTED,value:!1}));this.store.updateProperty(t),this.onDeselect(this.selected[0]),this.selected=[],this.selectionPoints.delete(),this.midPoints.delete()}deleteSelected(){this.store.delete(this.selected),this.selected=[]}onRightClick(t){if(!this.selectionPoints.ids.length)return;let i,o=Infinity;if(this.selectionPoints.ids.forEach(e=>{const s=this.store.getGeometryCopy(e),n=this.pixelDistance.measure(t,s.coordinates);n<this.pointerDistance&&n<o&&(o=n,i=this.store.getPropertiesCopy(e))}),!i)return;const s=i.selectionPointFeatureId,n=i.index,r=this.store.getPropertiesCopy(s),a=this.flags[r.mode],d=this.validations[r.mode];if(!(a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.deletable))return;const h=this.store.getGeometryCopy(s);let l;if(\"Polygon\"===h.type){if(l=h.coordinates[0],l.length<=4)return}else if(\"LineString\"===h.type&&(l=h.coordinates,l.length<=2))return;if(!l)return;if(\"Polygon\"!==h.type||0!==n&&n!==l.length-1?l.splice(n,1):(l.shift(),l.pop(),l.push([l[0][0],l[0][1]])),d&&!d({id:s,type:\"Feature\",geometry:h,properties:r},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Commit}).valid)return;const c=[...this.midPoints.ids,...this.selectionPoints.ids];this.store.delete(c),this.store.updateGeometry([{id:s,geometry:h}]),r.coordinatePointIds&&this.coordinatePoints.createOrUpdate(s),this.selectionPoints.create(l,h.type,s),a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.midpoints&&this.midPoints.create(l,s,this.coordinatePrecision)}select(t,e=!0){if(this.selected[0]===t)return;const{mode:o}=this.store.getPropertiesCopy(t),s=this.flags[o];if(!s||!s.feature)return;const n=this.selected[0];if(n){if(n===t)return;this.deselect()}e&&this.setCursor(this.cursors.pointerOver),this.selected=[t],this.store.updateProperty([{id:t,property:i.SELECTED,value:!0}]),this.onSelect(t);const{type:r,coordinates:a}=this.store.getGeometryCopy(t);if(\"LineString\"!==r&&\"Polygon\"!==r)return;const d=\"LineString\"===r?a:a[0];d&&s&&s.feature.coordinates&&(this.selectionPoints.create(d,r,t),s.feature.coordinates.midpoints&&this.midPoints.create(d,t,this.coordinatePrecision))}onLeftClick(t){const{clickedFeature:e,clickedMidPoint:i}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&i)this.midPoints.insert(this.selected[0],i.id,this.coordinatePrecision);else if(e&&e.id)this.select(e.id,!0);else if(this.selected.length&&this.allowManualDeselection)return void this.deselect()}start(){this.setStarted(),this.setSelecting()}stop(){this.cleanUp(),this.setStarted(),this.setStopped()}onClick(t){\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}canScale(t){return this.keyEvents.scale&&this.keyEvents.scale.every(e=>t.heldKeys.includes(e))}canRotate(t){return this.keyEvents.rotate&&this.keyEvents.rotate.every(e=>t.heldKeys.includes(e))}preventDefaultKeyEvent(t){const e=this.canRotate(t),i=this.canScale(t);(e||i)&&t.preventDefault()}onKeyDown(t){this.preventDefaultKeyEvent(t)}onKeyUp(t){if(this.preventDefaultKeyEvent(t),this.keyEvents.delete&&t.key===this.keyEvents.delete){if(!this.selected.length)return;const t=this.selected[0];this.onDeselect(this.selected[0]),this.coordinatePoints.deletePointsByFeatureIds([t]),this.deleteSelected(),this.selectionPoints.delete(),this.midPoints.delete()}else this.keyEvents.deselect&&t.key===this.keyEvents.deselect&&this.cleanUp()}cleanUp(){this.selected.length&&this.deselect()}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t))return;if(!this.selected.length)return;const i=this.store.getPropertiesCopy(this.selected[0]),o=this.flags[i.mode];if(!(o&&o.feature&&(o.feature.draggable||o.feature.coordinates&&o.feature.coordinates.draggable||o.feature.coordinates&&o.feature.coordinates.resizable||o.feature.coordinates&&\"object\"==typeof o.feature.coordinates.midpoints&&o.feature.coordinates.midpoints.draggable)))return;this.dragEventCount=0;const s=this.selected[0],n=this.dragCoordinate.getDraggableIndex(t,s);if(o&&o.feature&&o.feature.coordinates&&(o.feature.coordinates.draggable||o.feature.coordinates.resizable)&&-1!==n)return this.setCursor(this.cursors.dragStart),o.feature.coordinates.resizable?this.dragCoordinateResizeFeature.startDragging(s,n):this.dragCoordinate.startDragging(s,n),void e(!1);if(o&&o.feature&&o.feature.coordinates&&\"object\"==typeof o.feature.coordinates.midpoints&&o.feature.coordinates.midpoints.draggable){const{clickedMidPoint:i}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&i){this.midPoints.insert(s,i.id,this.coordinatePrecision);const o=this.dragCoordinate.getDraggableIndex(t,s);return this.dragCoordinate.startDragging(s,o),void e(!1)}}return o&&o.feature&&o.feature.draggable&&this.dragFeature.canDrag(t,s)?(this.setCursor(this.cursors.dragStart),this.dragFeature.startDragging(t,s),void e(!1)):void 0}onDrag(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t))return;const i=this.selected[0];if(!i)return;const o=this.store.getPropertiesCopy(i),s=this.flags[o.mode],n=!0===(s&&s.feature&&s.feature.selfIntersectable);if(this.dragEventCount++,this.dragEventCount%this.dragEventThrottle==0)return;const r=this.validations[o.mode];if(s&&s.feature&&s.feature.rotateable&&this.canRotate(t))return e(!1),void this.rotateFeature.rotate(t,i,r);if(s&&s.feature&&s.feature.scaleable&&this.canScale(t))return e(!1),void this.scaleFeature.scale(t,i,r);if(this.dragCoordinateResizeFeature.isDragging()&&s.feature&&s.feature.coordinates&&s.feature.coordinates.resizable){if(\"globe\"===this.projection)throw new Error(\"Globe is currently unsupported projection for resizable\");return e(!1),void this.dragCoordinateResizeFeature.drag(t,s.feature.coordinates.resizable,r)}if(this.dragCoordinate.isDragging()){var a;const e=null==(a=s.feature)||null==(a=a.coordinates)?void 0:a.snappable;let i={toCoordinate:!1};return!0===e?i={toCoordinate:!0}:\"object\"==typeof e&&(i=e),void this.dragCoordinate.drag(t,n,r,i)}this.dragFeature.isDragging()?this.dragFeature.drag(t,r):e(!0)}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&(this.setCursor(this.cursors.dragEnd),this.dragCoordinate.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:\"dragCoordinate\"}):this.dragFeature.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:\"dragFeature\"}):this.dragCoordinateResizeFeature.isDragging()&&this.onFinish(this.selected[0],{mode:this.mode,action:\"dragCoordinateResize\"}),this.dragCoordinate.stopDragging(),this.dragFeature.stopDragging(),this.dragCoordinateResizeFeature.stopDragging(),this.rotateFeature.reset(),this.scaleFeature.reset(),e(!0))}onMouseMove(t){if(!this.selected.length)return void this.setCursor(\"unset\");if(this.dragFeature.isDragging())return;let e=!1;this.midPoints.ids.forEach(i=>{if(e)return;const o=this.store.getGeometryCopy(i);this.pixelDistance.measure(t,o.coordinates)<this.pointerDistance&&(e=!0)});let i=!1;if(this.selectionPoints.ids.forEach(o=>{const s=this.store.getGeometryCopy(o);this.pixelDistance.measure(t,s.coordinates)<this.pointerDistance&&(e=!1,i=!0)}),e)return void this.setCursor(this.cursors.insertMidpoint);const{clickedFeature:o}=this.featuresAtMouseEvent.find(t,!0);this.setCursor(this.selected.length>0&&(o&&o.id===this.selected[0]||i)?this.cursors.pointerOver:\"unset\")}styleFeature(e){const o=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});if(e.properties.mode===this.mode&&\"Point\"===e.geometry.type){if(e.properties.selectionPoint)return o.pointColor=this.getHexColorStylingValue(this.styles.selectionPointColor,o.pointColor,e),o.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectionPointOutlineColor,o.pointOutlineColor,e),o.pointWidth=this.getNumericStylingValue(this.styles.selectionPointWidth,o.pointWidth,e),o.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectionPointOutlineWidth,2,e),o.zIndex=30,o;if(e.properties.midPoint)return o.pointColor=this.getHexColorStylingValue(this.styles.midPointColor,o.pointColor,e),o.pointOutlineColor=this.getHexColorStylingValue(this.styles.midPointOutlineColor,o.pointOutlineColor,e),o.pointWidth=this.getNumericStylingValue(this.styles.midPointWidth,4,e),o.pointOutlineWidth=this.getNumericStylingValue(this.styles.midPointOutlineWidth,2,e),o.zIndex=50,o}else if(e.properties[i.SELECTED]){if(\"Polygon\"===e.geometry.type)return o.polygonFillColor=this.getHexColorStylingValue(this.styles.selectedPolygonColor,o.polygonFillColor,e),o.polygonOutlineWidth=this.getNumericStylingValue(this.styles.selectedPolygonOutlineWidth,o.polygonOutlineWidth,e),o.polygonOutlineColor=this.getHexColorStylingValue(this.styles.selectedPolygonOutlineColor,o.polygonOutlineColor,e),o.polygonFillOpacity=this.getNumericStylingValue(this.styles.selectedPolygonFillOpacity,o.polygonFillOpacity,e),o.zIndex=s,o;if(\"LineString\"===e.geometry.type)return o.lineStringColor=this.getHexColorStylingValue(this.styles.selectedLineStringColor,o.lineStringColor,e),o.lineStringWidth=this.getNumericStylingValue(this.styles.selectedLineStringWidth,o.lineStringWidth,e),o.zIndex=s,o;if(\"Point\"===e.geometry.type)return o.pointWidth=this.getNumericStylingValue(this.styles.selectedPointWidth,o.pointWidth,e),o.pointColor=this.getHexColorStylingValue(this.styles.selectedPointColor,o.pointColor,e),o.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectedPointOutlineColor,o.pointOutlineColor,e),o.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectedPointOutlineWidth,o.pointOutlineWidth,e),o.zIndex=s,o}return o}afterFeatureUpdated(t){if(this.selected.length&&t.id===this.selected[0]){var e,i;const o=this.flags[t.properties.mode];if(null==o||null==(e=o.feature)||!e.coordinates)return;const s=t.geometry.type,n=t.id;let r;if(this.selectionPoints.delete(),this.midPoints.delete(),\"Polygon\"===s)r=t.geometry.coordinates[0];else{if(\"LineString\"!==s)return;r=t.geometry.coordinates}this.selectionPoints.create(r,s,n),null!=o&&null!=(i=o.feature)&&null!=(i=i.coordinates)&&i.midpoints&&this.midPoints.create(\"Polygon\"===s?t.geometry.coordinates[0]:t.geometry.coordinates,n,this.coordinatePrecision)}}}class ee extends u{constructor(...t){super(...t),this.type=l.Static,this.mode=\"static\"}start(){}stop(){}onKeyUp(){}onKeyDown(){}onClick(){}onDragStart(){}onDrag(){}onDragEnd(){}onMouseMove(){}cleanUp(){}styleFeature(){return t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0})}}function ie(t,e,i,o,s){for(;o>i;){if(o-i>600){const n=o-i+1,r=e-i+1,a=Math.log(n),d=.5*Math.exp(2*a/3),h=.5*Math.sqrt(a*d*(n-d)/n)*(r-n/2<0?-1:1);ie(t,e,Math.max(i,Math.floor(e-r*d/n+h)),Math.min(o,Math.floor(e+(n-r)*d/n+h)),s)}const n=t[e];let r=i,a=o;for(oe(t,i,e),s(t[o],n)>0&&oe(t,i,o);r<a;){for(oe(t,r,a),r++,a--;s(t[r],n)<0;)r++;for(;s(t[a],n)>0;)a--}0===s(t[i],n)?oe(t,i,a):(a++,oe(t,a,o)),a<=e&&(i=a+1),e<=a&&(o=a-1)}}function oe(t,e,i){const o=t[e];t[e]=t[i],t[i]=o}function se(t,e){ne(t,0,t.children.length,e,t)}function ne(t,e,i,o,s){s||(s=ge([])),s.minX=Infinity,s.minY=Infinity,s.maxX=-Infinity,s.maxY=-Infinity;for(let n=e;n<i;n++){const e=t.children[n];re(s,t.leaf?o(e):e)}return s}function re(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function ae(t,e){return t.minX-e.minX}function de(t,e){return t.minY-e.minY}function he(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function le(t){return t.maxX-t.minX+(t.maxY-t.minY)}function ce(t,e){const i=Math.max(t.minX,e.minX),o=Math.max(t.minY,e.minY),s=Math.min(t.maxX,e.maxX),n=Math.min(t.maxY,e.maxY);return Math.max(0,s-i)*Math.max(0,n-o)}function ue(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function pe(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function ge(t){return{children:t,height:1,leaf:!0,minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity}}function ye(t,e,i,o,s){const n=[e,i];for(;n.length;){if((i=n.pop())-(e=n.pop())<=o)continue;const r=e+Math.ceil((i-e)/o/2)*o;ie(t,r,e,i,s),n.push(e,r,r,i)}}class fe{constructor(t){this._maxEntries=void 0,this._minEntries=void 0,this.data=void 0,this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}search(t){let e=this.data;const i=[];if(!pe(t,e))return i;const o=this.toBBox,s=[];for(;e;){for(let n=0;n<e.children.length;n++){const r=e.children[n],a=e.leaf?o(r):r;pe(t,a)&&(e.leaf?i.push(r):ue(t,a)?this._all(r,i):s.push(r))}e=s.pop()}return i}collides(t){let e=this.data;if(pe(t,e)){const i=[];for(;e;){for(let o=0;o<e.children.length;o++){const s=e.children[o],n=e.leaf?this.toBBox(s):s;if(pe(t,n)){if(e.leaf||ue(t,n))return!0;i.push(s)}}e=i.pop()}}return!1}load(t){if(t.length<this._minEntries){for(let e=0;e<t.length;e++)this.insert(t[e]);return}let e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){const t=this.data;this.data=e,e=t}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e}insert(t){this._insert(t,this.data.height-1)}clear(){this.data=ge([])}remove(t){let e=this.data;const i=this.toBBox(t),o=[],s=[];let n,r,a=!1;for(;e||o.length;){if(e||(e=o.pop(),r=o[o.length-1],n=s.pop(),a=!0),e.leaf){const i=e.children.indexOf(t);-1!==i&&(e.children.splice(i,1),o.push(e),this._condense(o))}a||e.leaf||!ue(e,i)?r?(n++,e=r.children[n],a=!1):e=null:(o.push(e),s.push(n),n=0,r=e,e=e.children[0])}}toBBox(t){return t}compareMinX(t,e){return t.minX-e.minX}compareMinY(t,e){return t.minY-e.minY}_all(t,e){const i=[];for(;t;)t.leaf?e.push(...t.children):i.push(...t.children),t=i.pop();return e}_build(t,e,i,o){const s=i-e+1;let n,r=this._maxEntries;if(s<=r)return n=ge(t.slice(e,i+1)),se(n,this.toBBox),n;o||(o=Math.ceil(Math.log(s)/Math.log(r)),r=Math.ceil(s/Math.pow(r,o-1))),n=ge([]),n.leaf=!1,n.height=o;const a=Math.ceil(s/r),d=a*Math.ceil(Math.sqrt(r));ye(t,e,i,d,this.compareMinX);for(let s=e;s<=i;s+=d){const e=Math.min(s+d-1,i);ye(t,s,e,a,this.compareMinY);for(let i=s;i<=e;i+=a){const s=Math.min(i+a-1,e);n.children.push(this._build(t,i,s,o-1))}}return se(n,this.toBBox),n}_chooseSubtree(t,e,i,o){for(;o.push(e),!e.leaf&&o.length-1!==i;){let i,o=Infinity,r=Infinity;for(let a=0;a<e.children.length;a++){const d=e.children[a],h=he(d),l=(s=t,n=d,(Math.max(n.maxX,s.maxX)-Math.min(n.minX,s.minX))*(Math.max(n.maxY,s.maxY)-Math.min(n.minY,s.minY))-h);l<r?(r=l,o=h<o?h:o,i=d):l===r&&h<o&&(o=h,i=d)}e=i||e.children[0]}var s,n;return e}_insert(t,e,i){const o=i?t:this.toBBox(t),s=[],n=this._chooseSubtree(o,this.data,e,s);for(n.children.push(t),re(n,o);e>=0&&s[e].children.length>this._maxEntries;)this._split(s,e),e--;this._adjustParentBBoxes(o,s,e)}_split(t,e){const i=t[e],o=i.children.length,s=this._minEntries;this._chooseSplitAxis(i,s,o);const n=this._chooseSplitIndex(i,s,o),r=ge(i.children.splice(n,i.children.length-n));r.height=i.height,r.leaf=i.leaf,se(i,this.toBBox),se(r,this.toBBox),e?t[e-1].children.push(r):this._splitRoot(i,r)}_splitRoot(t,e){this.data=ge([t,e]),this.data.height=t.height+1,this.data.leaf=!1,se(this.data,this.toBBox)}_chooseSplitIndex(t,e,i){let o,s=Infinity,n=Infinity;for(let r=e;r<=i-e;r++){const e=ne(t,0,r,this.toBBox),a=ne(t,r,i,this.toBBox),d=ce(e,a),h=he(e)+he(a);d<s?(s=d,o=r,n=h<n?h:n):d===s&&h<n&&(n=h,o=r)}return o||i-e}_chooseSplitAxis(t,e,i){const o=t.leaf?this.compareMinX:ae,s=t.leaf?this.compareMinY:de;this._allDistMargin(t,e,i,o)<this._allDistMargin(t,e,i,s)&&t.children.sort(o)}_allDistMargin(t,e,i,o){t.children.sort(o);const s=this.toBBox,n=ne(t,0,e,s),r=ne(t,i-e,i,s);let a=le(n)+le(r);for(let o=e;o<i-e;o++){const e=t.children[o];re(n,t.leaf?s(e):e),a+=le(n)}for(let o=i-e-1;o>=e;o--){const e=t.children[o];re(r,t.leaf?s(e):e),a+=le(r)}return a}_adjustParentBBoxes(t,e,i){for(let o=i;o>=0;o--)re(e[o],t)}_condense(t){for(let e,i=t.length-1;i>=0;i--)0===t[i].children.length?i>0?(e=t[i-1].children,e.splice(e.indexOf(t[i]),1)):this.clear():se(t[i],this.toBBox)}}class me{constructor(t){this.tree=void 0,this.idToNode=void 0,this.nodeToId=void 0,this.tree=new fe(t&&t.maxEntries?t.maxEntries:9),this.idToNode=new Map,this.nodeToId=new Map}setMaps(t,e){this.idToNode.set(t.id,e),this.nodeToId.set(e,t.id)}toBBox(t){const e=[],i=[];let o;if(\"Polygon\"===t.geometry.type)o=t.geometry.coordinates[0];else if(\"LineString\"===t.geometry.type)o=t.geometry.coordinates;else{if(\"Point\"!==t.geometry.type)throw new Error(\"Not a valid feature to turn into a bounding box\");o=[t.geometry.coordinates]}for(let t=0;t<o.length;t++)i.push(o[t][1]),e.push(o[t][0]);const s=Math.min(...i),n=Math.max(...i);return{minX:Math.min(...e),minY:s,maxX:Math.max(...e),maxY:n}}insert(t){if(this.idToNode.get(String(t.id)))throw new Error(\"Feature already exists\");const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}load(t){const e=[],i=new Set;t.forEach(t=>{const o=this.toBBox(t);if(this.setMaps(t,o),i.has(String(t.id)))throw new Error(`Duplicate feature ID found ${t.id}`);i.add(String(t.id)),e.push(o)}),this.tree.load(e)}update(t){this.remove(t.id);const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}remove(t){const e=this.idToNode.get(t);if(!e)throw new Error(`${t} not inserted into the spatial index`);this.tree.remove(e)}clear(){this.tree.clear()}search(t){return this.tree.search(this.toBBox(t)).map(t=>this.nodeToId.get(t))}collides(t){return this.tree.collides(this.toBBox(t))}}const ve={getId:()=>\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(t){const e=16*Math.random()|0;return(\"x\"==t?e:3&e|8).toString(16)}),isValidId:t=>\"string\"==typeof t&&36===t.length};class Ce{constructor(t){this.idStrategy=void 0,this.tracked=void 0,this.spatialIndex=void 0,this.store=void 0,this._onChange=()=>{},this.store={},this.spatialIndex=new me,this.tracked=!t||!1!==t.tracked,this.idStrategy=t&&t.idStrategy?t.idStrategy:ve}clone(t){return JSON.parse(JSON.stringify(t))}getId(){return this.idStrategy.getId()}has(t){return Boolean(this.store[t])}load(t,e,i,o){if(0===t.length)return[];let s=this.clone(t);const n=[],r=[];s=s.filter(t=>{null==t.id&&(t.id=this.idStrategy.getId());const i=t.id;if(e){const o=e(t);if(!o.valid)return n.push({id:i,valid:!1,reason:o.reason}),!1}if(this.tracked){if(t.properties.createdAt){if(!a(t.properties.createdAt))return n.push({id:t.id,valid:!1,reason:\"createdAt is not a valid numeric timestamp\"}),!1}else t.properties.createdAt=+new Date;if(t.properties.updatedAt){if(!a(t.properties.updatedAt))return n.push({id:t.id,valid:!1,reason:\"updatedAt is not a valid numeric timestamp\"}),!1}else t.properties.updatedAt=+new Date}return this.has(i)?(n.push({id:i,valid:!1,reason:`Feature already exists with this id: ${i}`}),!1):(this.store[i]=t,r.push(t),n.push({id:i,valid:!0}),!0)}),this.spatialIndex.load(s);const d=r.map(({id:t})=>t);return d.length>0&&(this._onChange(d,\"create\",o),i&&r.forEach(t=>{i(t)})),n}search(t,e){const i=this.spatialIndex.search(t).map(t=>this.store[t]);return this.clone(e?i.filter(e):i)}registerOnChange(t){this._onChange=(e,i,o)=>{t(e,i,o)}}getGeometryCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get geometry copy`);return this.clone(e.geometry)}getPropertiesCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get properties copy`);return this.clone(e.properties)}updateProperty(t,e){const i=[];t.forEach(({id:t,property:e,value:o})=>{const s=this.store[t];if(!s)throw new Error(`No feature with this (${t}), can not update geometry`);i.push(t),void 0===o?delete s.properties[e]:s.properties[e]=o,this.tracked&&(s.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,\"update\",e)}updateGeometry(t,e){const i=[];t.forEach(({id:t,geometry:e})=>{i.push(t);const o=this.store[t];if(!o)throw new Error(`No feature with this (${t}), can not update geometry`);o.geometry=this.clone(e),this.spatialIndex.update(o),this.tracked&&(o.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,\"update\",e)}create(e,i){const o=[];return e.forEach(({geometry:e,properties:i})=>{let s,n=t({},i);this.tracked&&(s=+new Date,i?(n.createdAt=\"number\"==typeof i.createdAt?i.createdAt:s,n.updatedAt=\"number\"==typeof i.updatedAt?i.updatedAt:s):n={createdAt:s,updatedAt:s});const r=this.getId(),a={id:r,type:\"Feature\",geometry:e,properties:n};this.store[r]=a,this.spatialIndex.insert(a),o.push(r)}),this._onChange&&this._onChange([...o],\"create\",i),o}delete(t,e){t.forEach(t=>{if(!this.store[t])throw new Error(`No feature with id ${t}, can not delete`);delete this.store[t],this.spatialIndex.remove(t)}),this._onChange&&this._onChange([...t],\"delete\",e)}copy(t){return this.clone(this.store[t])}copyAll(){return this.clone(Object.keys(this.store).map(t=>this.store[t]))}copyAllWhere(t){return this.clone(Object.keys(this.store).map(t=>this.store[t]).filter(e=>e.properties&&t(e.properties)))}clear(){this.store={},this.spatialIndex.clear()}size(){return Object.keys(this.store).length}}function Pe(t){const e=t.coordinates;let i=0;if(e&&e.length>0){i+=Math.abs(Ee(e[0]));for(let t=1;t<e.length;t++)i-=Math.abs(Ee(e[t]))}return i}const Ie=20294876564838.72,xe=Math.PI/180;function Ee(t){const e=t.length;if(e<=2)return 0;let i=0,o=0;for(;o<e;)i+=(t[o+2>=e?(o+2)%e:o+2][0]*xe-t[o][0]*xe)*Math.sin(t[o+1===e?0:o+1][1]*xe),o++;return i*Ie}const Se=\"Feature is smaller than the minimum area\",Me=(t,e)=>\"Polygon\"!==t.geometry.type?{valid:!1,reason:d}:Pe(t.geometry)<e?{valid:!1,reason:Se}:{valid:!0},Fe=(t,e)=>\"Polygon\"!==t.geometry.type?{valid:!1,reason:d}:Pe(t.geometry)>e?{valid:!1,reason:\"Feature is larger than the maximum area\"}:{valid:!0},De=\"Feature is not a Polygon or LineString\",we=\"Feature intersects itself\",Oe=t=>\"Polygon\"!==t.geometry.type&&\"LineString\"!==t.geometry.type?{valid:!1,reason:De}:D(t)?{valid:!1,reason:we}:{valid:!0};function _e(t,e,i){const o=tt(t,e);let s=tt(e,i)-o;return s<0&&(s+=360),180-Math.abs(s-90-90)}const be={cancel:\"Escape\",finish:\"Enter\"},ke={start:\"crosshair\",close:\"pointer\"};class Ne extends u{constructor(t){super(t,!0),this.mode=\"angled-rectangle\",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=be,this.cursors=ke,this.mouseMove=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents))}close(){if(void 0===this.currentId)return;this.store.updateProperty([{id:this.currentId,property:o.CURRENTLY_DRAWING,value:void 0}]);const t=this.currentId;this.currentCoordinate=0,this.currentId=void 0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0===this.currentId||0===this.currentCoordinate)return;const i=this.store.getGeometryCopy(this.currentId).coordinates[0];let o;if(1===this.currentCoordinate){const e=1/Math.pow(10,this.coordinatePrecision-1),s=Math.max(1e-6,e);o=[i[0],[t.lng,t.lat],[t.lng,t.lat-s],i[0]]}else if(2===this.currentCoordinate){const e=i[0],s=i[1],n=jt(e,s,this.coordinatePrecision,this.project,this.unproject),r=E(e[0],e[1]),a=E(n[0],n[1]),d=E(s[0],s[1]),h=E(t.lng,t.lat),l=U(h,r)<U(h,d),c=_e(r,a,h),u=l?90-c:_e(r,a,h)-90,p=U(a,h),g=Math.cos(f(u))*p,y=tt(r,d)+(\"right\"===function(t,e,i){const o=(i.x-e.x)*(t.y-e.y)-(i.y-e.y)*(t.x-e.x);return o>1e-10?\"left\":o<-1e-10?\"right\":\"left\"}(r,d,h)?-90:90),m=J(r,g,y),v=J(d,g,y),C=S(m.x,m.y),P=S(v.x,v.y);o=[i[0],i[1],[P.lng,P.lat],[C.lng,C.lat],i[0]]}o&&this.updatePolygonGeometry(this.currentId,o,e.Provisional)}updatePolygonGeometry(t,e,i){const o={type:\"Polygon\",coordinates:[e]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){const[e]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0}}]);this.currentId=e,this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){const i=this.store.getGeometryCopy(this.currentId);if(rt([t.lng,t.lat],i.coordinates[0][0]))return;if(!this.updatePolygonGeometry(this.currentId,[i.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],i.coordinates[0][0]],e.Commit))return;this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentId&&this.close()}onKeyUp(t){if(t.key===this.keyEvents.cancel)this.cleanUp();else if(t.key===this.keyEvents.finish){if(this.currentCoordinate<2)return void this.cleanUp();this.close()}}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted()}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return e.properties.mode===this.mode&&\"Polygon\"===e.geometry.type&&(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=s),i}validateFeature(t){return this.validateModeFeature(t,t=>B(t,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted())}}function Te(t,e,i){return(e.x-t.x)*(i.y-t.y)-(e.y-t.y)*(i.x-t.x)<=0}const je={cancel:\"Escape\",finish:\"Enter\"},We={start:\"crosshair\",close:\"pointer\"};class Be extends u{constructor(t){super(t,!0),this.mode=\"sector\",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=je,this.direction=void 0,this.arcPoints=64,this.cursors=We,this.mouseMove=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.arcPoints&&(this.arcPoints=e.arcPoints)}close(){if(void 0===this.currentId)return;const t=A(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}]),this.store.updateProperty([{id:this.currentId,property:o.CURRENTLY_DRAWING,value:void 0}]);const e=this.currentId;this.currentCoordinate=0,this.currentId=void 0,this.direction=void 0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0===this.currentId||0===this.currentCoordinate)return;const i=this.store.getGeometryCopy(this.currentId).coordinates[0];let o;if(1===this.currentCoordinate){const e=1/Math.pow(10,this.coordinatePrecision-1),s=Math.max(1e-6,e);o=[i[0],[t.lng,t.lat],[t.lng,t.lat-s],i[0]]}else if(2===this.currentCoordinate){const e=i[0],s=i[1],n=[t.lng,t.lat],r=E(e[0],e[1]),a=E(s[0],s[1]),d=E(n[0],n[1]);if(void 0===this.direction){const t=Te(r,a,d);this.direction=t?\"clockwise\":\"anticlockwise\"}const h=U(r,a),l=tt(r,a),c=tt(r,d),u=this.arcPoints,p=[e],g=et(l),y=et(c);let f;\"anticlockwise\"===this.direction?(f=y-g,f<0&&(f+=360)):(f=g-y,f<0&&(f+=360));const m=(\"anticlockwise\"===this.direction?1:-1)*f/u;p.push(s);for(let t=0;t<=u;t++){const e=J(r,h,g+t*m),{lng:i,lat:o}=S(e.x,e.y),s=[C(i,this.coordinatePrecision),C(o,this.coordinatePrecision)];s[0]!==p[p.length-1][0]&&s[1]!==p[p.length-1][1]&&p.push(s)}p.push(e),o=[...p]}o&&this.updatePolygonGeometry(this.currentId,o,e.Provisional)}updatePolygonGeometry(t,e,i){const o={type:\"Polygon\",coordinates:[e]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){const[e]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0}}]);this.currentId=e,this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){const i=this.store.getGeometryCopy(this.currentId);if(rt([t.lng,t.lat],i.coordinates[0][0]))return;if(!this.updatePolygonGeometry(this.currentId,[i.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],i.coordinates[0][0]],e.Commit))return;this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentId&&this.close()}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentId=void 0,this.direction=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted()}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return e.properties.mode===this.mode&&\"Polygon\"===e.geometry.type&&(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=s),i}validateFeature(t){return this.validateModeFeature(t,t=>B(t,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.currentId=void 0,this.direction=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted())}}const Ge={cancel:\"Escape\",finish:\"Enter\"},Re={start:\"crosshair\",close:\"pointer\"};class Le extends u{constructor(t){super(t,!0),this.mode=\"sensor\",this.currentCoordinate=0,this.currentId=void 0,this.currentInitialArcId=void 0,this.currentStartingPointId=void 0,this.keyEvents=Ge,this.direction=void 0,this.arcPoints=64,this.cursors=Re,this.mouseMove=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.arcPoints&&(this.arcPoints=e.arcPoints)}close(){if(void 0===this.currentStartingPointId)return;const t=this.currentStartingPointId,e=this.currentInitialArcId,i=this.currentId;if(t&&this.store.delete([t]),e&&this.store.delete([e]),this.currentId){const t=A(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}]),this.store.updateProperty([{id:this.currentId,property:o.CURRENTLY_DRAWING,value:void 0}])}this.currentCoordinate=0,this.currentStartingPointId=void 0,this.currentInitialArcId=void 0,this.currentId=void 0,this.direction=void 0,\"drawing\"===this.state&&this.setStarted(),i&&this.onFinish(i,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0!==this.currentInitialArcId&&void 0!==this.currentStartingPointId&&0!==this.currentCoordinate)if(2===this.currentCoordinate){const i=this.store.getGeometryCopy(this.currentInitialArcId).coordinates,o=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,s=i[0],n=[t.lng,t.lat],r=E(s[0],s[1]),a=E(n[0],n[1]),d=E(o[0],o[1]),h=U(d,r);if(void 0===this.direction){const t=Te(d,r,a);this.direction=t?\"clockwise\":\"anticlockwise\"}const l=tt(d,r),c=tt(d,a),u=this.arcPoints,p=[s],g=et(l),y=et(c);let f;\"anticlockwise\"===this.direction?(f=y-g,f<0&&(f+=360)):(f=g-y,f<0&&(f+=360));const m=(\"anticlockwise\"===this.direction?1:-1)*f/u;for(let t=0;t<=u;t++){const e=J(d,h,g+t*m),{lng:i,lat:o}=S(e.x,e.y),s=[C(i,this.coordinatePrecision),C(o,this.coordinatePrecision)];s[0]!==p[p.length-1][0]&&s[1]!==p[p.length-1][1]&&p.push(s)}this.updateLineStringGeometry(this.currentInitialArcId,p,e.Provisional)}else if(3===this.currentCoordinate){const i=this.store.getGeometryCopy(this.currentInitialArcId).coordinates;if(i.length<2)return;if(!this.direction)return;const s=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,n=i[0],r=i[i.length-1],a=E(t.lng,t.lat),d=E(n[0],n[1]),h=E(r[0],r[1]),l=E(s[0],s[1]),c=U(l,d),u=U(l,a)<c?d:a,p=tt(l,a),g=tt(l,d),y=tt(l,h),f=et(g),m=et(y),v=et(p);if(this.notInSector({normalizedCursor:v,normalizedStart:f,normalizedEnd:m,direction:this.direction}))return;const P=this.getDeltaBearing(this.direction,f,m),I=this.arcPoints,x=(\"anticlockwise\"===this.direction?1:-1)*P/I,M=U(l,u),F=[];for(let t=0;t<=I;t++){const e=J(l,M,f+t*x),{lng:o,lat:s}=S(e.x,e.y),n=[C(o,this.coordinatePrecision),C(s,this.coordinatePrecision)];n[0]!==i[i.length-1][0]&&n[1]!==i[i.length-1][1]&&F.unshift(n)}i.push(...F),i.push(i[0]),this.currentId?this.updatePolygonGeometry(this.currentId,i,e.Provisional):[this.currentId]=this.store.create([{geometry:{type:\"Polygon\",coordinates:[i]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0}}])}}updateLineStringGeometry(t,e,i){const o={type:\"LineString\",coordinates:e};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}updatePolygonGeometry(t,e,i){const o={type:\"Polygon\",coordinates:[e]};return!(this.validate&&!this.validate({type:\"Feature\",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){const[e]=this.store.create([{geometry:{type:\"Point\",coordinates:[t.lng,t.lat]},properties:{mode:this.mode}}]);this.currentStartingPointId=e,this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentStartingPointId){const[e]=this.store.create([{geometry:{type:\"LineString\",coordinates:[[t.lng,t.lat],[t.lng,t.lat]]},properties:{mode:this.mode}}]);this.currentInitialArcId=e,this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentStartingPointId?this.currentCoordinate++:3===this.currentCoordinate&&this.currentStartingPointId&&this.close()}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentStartingPointId&&this.store.delete([this.currentStartingPointId]),this.currentInitialArcId&&this.store.delete([this.currentInitialArcId]),this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentStartingPointId=void 0,this.direction=void 0,this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted()}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return e.properties.mode===this.mode&&(\"Polygon\"===e.geometry.type?(i.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,i.polygonFillColor,e),i.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,i.polygonFillOpacity,e),i.zIndex=s):\"LineString\"===e.geometry.type?(i.lineStringColor=this.getHexColorStylingValue(this.styles.outlineColor,i.polygonOutlineColor,e),i.lineStringWidth=this.getNumericStylingValue(this.styles.outlineWidth,i.polygonOutlineWidth,e),i.zIndex=s):\"Point\"===e.geometry.type&&(i.pointColor=this.getHexColorStylingValue(this.styles.centerPointColor,i.pointColor,e),i.pointWidth=this.getNumericStylingValue(this.styles.centerPointWidth,i.pointWidth,e),i.pointOutlineColor=this.getHexColorStylingValue(this.styles.centerPointOutlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(this.styles.centerPointOutlineWidth,i.pointOutlineWidth,e),i.zIndex=20)),i}validateFeature(t){return this.validateModeFeature(t,t=>B(t,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.currentStartingPointId&&this.store.delete([this.currentStartingPointId]),this.currentInitialArcId&&this.store.delete([this.currentInitialArcId]),this.currentStartingPointId=void 0,this.direction=void 0,this.currentId=void 0,this.currentCoordinate=0,\"drawing\"===this.state&&this.setStarted())}getDeltaBearing(t,e,i){let o;return\"anticlockwise\"===t?(o=i-e,o<0&&(o+=360)):(o=e-i,o<0&&(o+=360)),o}notInSector({normalizedCursor:t,normalizedStart:e,normalizedEnd:i,direction:o}){return\"clockwise\"===o?e<=i?t>=e&&t<=i:t>=e||t<=i:e>=i?t<=e&&t>=i:t<=e||t>=i}}class Ue{constructor({name:t,callback:e,unregister:i,register:o}){this.name=void 0,this.callback=void 0,this.registered=!1,this.register=void 0,this.unregister=void 0,this.name=t,this.register=()=>{this.registered||(this.registered=!0,o(e))},this.unregister=()=>{this.register&&(this.registered=!1,i(e))},this.callback=e}}var Ae={__proto__:null,GeoJSONStore:Ce,TerraDrawBaseDrawMode:u,TerraDrawBaseSelectMode:p,TerraDrawBaseAdapter:class{constructor(t){this._nextKeyUpIsContextMenu=!1,this._minPixelDragDistance=void 0,this._minPixelDragDistanceDrawing=void 0,this._minPixelDragDistanceSelecting=void 0,this._lastDrawEvent=void 0,this._coordinatePrecision=void 0,this._heldKeys=new Set,this._listeners=[],this._dragState=\"not-dragging\",this._currentModeCallbacks=void 0,this._minPixelDragDistance=\"number\"==typeof t.minPixelDragDistance?t.minPixelDragDistance:1,this._minPixelDragDistanceSelecting=\"number\"==typeof t.minPixelDragDistanceSelecting?t.minPixelDragDistanceSelecting:1,this._minPixelDragDistanceDrawing=\"number\"==typeof t.minPixelDragDistanceDrawing?t.minPixelDragDistanceDrawing:8,this._coordinatePrecision=\"number\"==typeof t.coordinatePrecision?t.coordinatePrecision:9}getButton(t){return-1===t.button?\"neither\":0===t.button?\"left\":1===t.button?\"middle\":2===t.button?\"right\":\"neither\"}getMapElementXYPosition(t){const e=this.getMapEventElement(),{left:i,top:o}=e.getBoundingClientRect();return{containerX:t.clientX-i,containerY:t.clientY-o}}getDrawEventFromEvent(t,e=!1){const i=this.getLngLatFromEvent(t);if(!i)return null;const{lng:o,lat:s}=i,{containerX:n,containerY:r}=this.getMapElementXYPosition(t),a=this.getButton(t),d=Array.from(this._heldKeys);return{lng:C(o,this._coordinatePrecision),lat:C(s,this._coordinatePrecision),containerX:n,containerY:r,button:a,heldKeys:d,isContextMenu:e}}register(t){this._currentModeCallbacks=t,this._listeners=this.getAdapterListeners(),this._listeners.forEach(t=>{t.register()})}getCoordinatePrecision(){return this._coordinatePrecision}getAdapterListeners(){return[new Ue({name:\"pointerdown\",callback:t=>{if(!this._currentModeCallbacks)return;if(!t.isPrimary)return;const e=this.getDrawEventFromEvent(t);e&&(this._dragState=\"pre-dragging\",this._lastDrawEvent=e)},register:t=>{this.getMapEventElement().addEventListener(\"pointerdown\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"pointerdown\",t)}}),new Ue({name:\"pointermove\",callback:t=>{if(!this._currentModeCallbacks)return;if(!t.isPrimary)return;t.preventDefault();const e=this.getDrawEventFromEvent(t);if(e)if(\"not-dragging\"===this._dragState)this._currentModeCallbacks.onMouseMove(e),this._lastDrawEvent=e;else if(\"pre-dragging\"===this._dragState){if(!this._lastDrawEvent)return;const t={x:this._lastDrawEvent.containerX,y:this._lastDrawEvent.containerY},i={x:e.containerX,y:e.containerY},o=this._currentModeCallbacks.getState(),s=U(t,i);let n=!1;if(n=\"drawing\"===o?s<this._minPixelDragDistanceDrawing:\"selecting\"===o?s<this._minPixelDragDistanceSelecting:s<this._minPixelDragDistance,n)return;this._nextKeyUpIsContextMenu=!1,this._dragState=\"dragging\",this._currentModeCallbacks.onDragStart(e,t=>{this.setDraggability.bind(this)(t)})}else\"dragging\"===this._dragState&&this._currentModeCallbacks.onDrag(e,t=>{this.setDraggability.bind(this)(t)})},register:t=>{this.getMapEventElement().addEventListener(\"pointermove\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"pointermove\",t)}}),new Ue({name:\"contextmenu\",callback:t=>{this._currentModeCallbacks&&(t.preventDefault(),this._nextKeyUpIsContextMenu=!0)},register:t=>{this.getMapEventElement().addEventListener(\"contextmenu\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"contextmenu\",t)}}),new Ue({name:\"pointerup\",callback:t=>{if(!this._currentModeCallbacks)return;if(t.target!==this.getMapEventElement())return;if(!t.isPrimary)return;const e=this.getDrawEventFromEvent(t);e&&(\"dragging\"===this._dragState?this._currentModeCallbacks.onDragEnd(e,t=>{this.setDraggability.bind(this)(t)}):\"not-dragging\"!==this._dragState&&\"pre-dragging\"!==this._dragState||(this._nextKeyUpIsContextMenu&&(e.isContextMenu=!0,this._nextKeyUpIsContextMenu=!1),this._currentModeCallbacks.onClick(e)),this._dragState=\"not-dragging\",this.setDraggability(!0))},register:t=>{this.getMapEventElement().addEventListener(\"pointerup\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"pointerup\",t)}}),new Ue({name:\"keyup\",callback:t=>{this._currentModeCallbacks&&(this._heldKeys.delete(t.key),this._currentModeCallbacks.onKeyUp({key:t.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>t.preventDefault()}))},register:t=>{this.getMapEventElement().addEventListener(\"keyup\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"keyup\",t)}}),new Ue({name:\"keydown\",callback:t=>{this._currentModeCallbacks&&(this._heldKeys.add(t.key),this._currentModeCallbacks.onKeyDown({key:t.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>t.preventDefault()}))},register:t=>{this.getMapEventElement().addEventListener(\"keydown\",t)},unregister:t=>{this.getMapEventElement().removeEventListener(\"keydown\",t)}})]}unregister(){this._listeners.forEach(t=>{t.unregister()}),this.clear(),this._currentModeCallbacks=void 0}},getDefaultStyling:()=>({polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0}),SELECT_PROPERTIES:i};const Ve={ValidationReasonFeatureNotPoint:vt,ValidationReasonFeatureInvalidCoordinates:Ct,ValidationReasonFeatureInvalidCoordinatePrecision:Pt,ValidationReasonFeatureNotPolygon:d,ValidationReasonFeatureHasHoles:k,ValidationReasonFeatureLessThanFourCoordinates:N,ValidationReasonFeatureHasInvalidCoordinates:T,ValidationReasonFeatureCoordinatesNotClosed:j,ValidationReasonFeatureNotPolygonOrLineString:De,ValidationReasonFeatureSelfIntersects:we,ValidationReasonFeatureLessThanMinSize:Se,ValidationReasonModeMismatch:h},Ye={cancel:\"Escape\",finish:\"Enter\"},Ke={start:\"crosshair\",close:\"pointer\"};class ze extends u{constructor(t){super(t,!0),this.mode=\"freehand-linestring\",this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.minDistance=20,this.keyEvents=Ye,this.cursors=Ke,this.preventNewFeature=!1,this.updateOptions(t)}updateOptions(e){super.updateOptions(e),null!=e&&e.minDistance&&(this.minDistance=e.minDistance),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=t({},this.keyEvents,e.keyEvents)),null!=e&&e.cursors&&(this.cursors=t({},this.cursors,e.cursors))}close(){if(void 0===this.currentId)return;this.currentId&&this.store.updateProperty([{id:this.currentId,property:o.CURRENTLY_DRAWING,value:void 0}]);const t=this.currentId;if(this.validate&&t){const i=this.store.getGeometryCopy(t);if(!this.validate({type:\"Feature\",id:t,geometry:i,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,\"drawing\"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:\"draw\"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor(\"unset\")}onMouseMove(t){if(void 0===this.currentId||!1===this.startingClick)return void this.setCursor(this.cursors.start);const i=this.store.getGeometryCopy(this.currentId),o=i.coordinates.length-2,[s,n]=i.coordinates[o],{x:r,y:a}=this.project(s,n),d=U({x:r,y:a},{x:t.containerX,y:t.containerY}),[h,l]=i.coordinates[i.coordinates.length-1],{x:c,y:u}=this.project(h,l),p=U({x:c,y:u},{x:t.containerX,y:t.containerY});if(this.setCursor(p<this.pointerDistance?this.cursors.close:this.cursors.start),d<this.minDistance)return;const g={type:\"LineString\",coordinates:[...i.coordinates,[t.lng,t.lat]]};this.validate&&!this.validate({type:\"Feature\",id:this.currentId,geometry:g,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e.Provisional}).valid||(this.store.updateGeometry([{id:this.currentId,geometry:g}]),this.closingPointId&&this.store.updateGeometry([{id:this.closingPointId,geometry:{type:\"Point\",coordinates:[t.lng,t.lat]}}]))}onClick(t){if(\"right\"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||\"left\"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)){if(this.preventNewFeature)return;if(!1===this.startingClick){const[e,i]=this.store.create([{geometry:{type:\"LineString\",coordinates:[[t.lng,t.lat],[t.lng,t.lat]]},properties:{mode:this.mode,[o.CURRENTLY_DRAWING]:!0}},{geometry:{type:\"Point\",coordinates:[t.lng,t.lat]},properties:{mode:this.mode,[o.CLOSING_POINT]:!0}}]);return this.currentId=e,this.closingPointId=i,this.startingClick=!0,void(\"drawing\"!==this.state&&this.setDrawing())}this.close()}}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&!0===this.startingClick&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,\"drawing\"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==e&&this.store.delete([e])}catch(t){}}styleFeature(e){const i=t({},{polygonFillColor:\"#3f97e0\",polygonOutlineColor:\"#3f97e0\",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:\"#3f97e0\",pointOutlineColor:\"#ffffff\",pointOutlineWidth:0,pointWidth:6,lineStringColor:\"#3f97e0\",lineStringWidth:4,zIndex:0});return\"Feature\"===e.type&&\"LineString\"===e.geometry.type&&e.properties.mode===this.mode?(i.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,i.lineStringColor,e),i.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,i.lineStringWidth,e),i.zIndex=s,i):\"Feature\"===e.type&&\"Point\"===e.geometry.type&&e.properties.mode===this.mode?(i.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,i.pointWidth,e),i.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,i.pointColor,e),i.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,i.pointOutlineColor,e),i.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,e),i.zIndex=50,i):i}validateFeature(t){return this.validateModeFeature(t,t=>at(t,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0)}}function Xe(t){if(null===t)return!0;if(\"boolean\"==typeof t)return!0;if(\"string\"==typeof t)return!0;if(void 0===t)return!1;if(\"number\"==typeof t)return Number.isFinite(t);if(\"bigint\"==typeof t)return!1;if(\"symbol\"==typeof t)return!1;if(\"function\"==typeof t)return!1;if(t instanceof RegExp)return!1;if(t instanceof Map)return!1;if(t instanceof Set)return!1;if(t instanceof Date)return!1;if(\"object\"==typeof t&&null!==t&&!Array.isArray(t)){const e=Object.getPrototypeOf(t);if(e!==Object.prototype&&null!==e)return!1}if(ArrayBuffer.isView(t)&&!(t instanceof DataView))return!1;if(Array.isArray(t))for(const e of t)if(!Xe(e))return!1;return\"object\"==typeof t&&Object.keys(t).every(e=>\"string\"==typeof e&&Xe(t[e]))}class He{constructor(e){this._modes=void 0,this._mode=void 0,this._adapter=void 0,this._enabled=!1,this._store=void 0,this._eventListeners=void 0,this._instanceSelectMode=void 0,this._adapter=e.adapter,this._mode=new ee;const i=new Set,o=e.modes.reduce((t,e)=>{if(i.has(e.mode))throw new Error(`There is already a ${e.mode} mode provided`);return i.add(e.mode),t[e.mode]=e,t},{}),s=Object.keys(o);if(0===s.length)throw new Error(\"No modes provided\");s.forEach(t=>{if(o[t].type===l.Select){if(this._instanceSelectMode)throw new Error(\"only one type of select mode can be provided\");this._instanceSelectMode=t}}),this._modes=t({},o,{static:this._mode}),this._eventListeners={change:[],select:[],deselect:[],finish:[],ready:[]},this._store=new Ce({tracked:!!e.tracked,idStrategy:e.idStrategy?e.idStrategy:void 0});const n=t=>{const e=[],i=this._store.copyAll().filter(i=>!t.includes(i.id)||(e.push(i),!1));return{changed:e,unchanged:i}},r=(t,e)=>{this._enabled&&this._eventListeners.finish.forEach(i=>{i(t,e)})},a=(t,e,i)=>{if(!this._enabled)return;this._eventListeners.change.forEach(o=>{o(t,e,i)});const{changed:o,unchanged:s}=n(t);\"create\"===e?this._adapter.render({created:o,deletedIds:[],unchanged:s,updated:[]},this.getModeStyles()):\"update\"===e?this._adapter.render({created:[],deletedIds:[],unchanged:s,updated:o},this.getModeStyles()):\"delete\"===e?this._adapter.render({created:[],deletedIds:t,unchanged:s,updated:[]},this.getModeStyles()):\"styling\"===e&&this._adapter.render({created:[],deletedIds:[],unchanged:s,updated:[]},this.getModeStyles())},d=t=>{if(!this._enabled)return;this._eventListeners.select.forEach(e=>{e(t)});const{changed:e,unchanged:i}=n([t]);this._adapter.render({created:[],deletedIds:[],unchanged:i,updated:e},this.getModeStyles())},h=t=>{if(!this._enabled)return;this._eventListeners.deselect.forEach(t=>{t()});const{changed:e,unchanged:i}=n([t]);e&&this._adapter.render({created:[],deletedIds:[],unchanged:i,updated:e},this.getModeStyles())};Object.keys(this._modes).forEach(t=>{this._modes[t].register({mode:t,store:this._store,setCursor:this._adapter.setCursor.bind(this._adapter),project:this._adapter.project.bind(this._adapter),unproject:this._adapter.unproject.bind(this._adapter),setDoubleClickToZoom:this._adapter.setDoubleClickToZoom.bind(this._adapter),onChange:a,onSelect:d,onDeselect:h,onFinish:r,coordinatePrecision:this._adapter.getCoordinatePrecision()})})}checkEnabled(){if(!this._enabled)throw new Error(\"Terra Draw is not enabled\")}getModeStyles(){const t={};return Object.keys(this._modes).forEach(e=>{t[e]=t=>this._instanceSelectMode&&t.properties[i.SELECTED]?this._modes[this._instanceSelectMode].styleFeature.bind(this._modes[this._instanceSelectMode])(t):this._modes[e].styleFeature.bind(this._modes[e])(t)}),t}featuresAtLocation({lng:t,lat:e},s){const n=s&&void 0!==s.pointerDistance?s.pointerDistance:30,r=!s||void 0===s.ignoreSelectFeatures||s.ignoreSelectFeatures,a=!(!s||void 0===s.ignoreCoordinatePoints)&&s.ignoreCoordinatePoints,d=!(!s||void 0===s.ignoreCurrentlyDrawing)&&s.ignoreCurrentlyDrawing,h=!(!s||void 0===s.ignoreClosingPoints)&&s.ignoreClosingPoints,l=this._adapter.unproject.bind(this._adapter),c=this._adapter.project.bind(this._adapter),u=c(t,e),p=X({unproject:l,point:u,pointerDistance:n});return this._store.search(p).filter(l=>{if(r&&(l.properties[i.MID_POINT]||l.properties[i.SELECTION_POINT]))return!1;if(a&&l.properties[o.COORDINATE_POINT])return!1;if(h&&l.properties[o.CLOSING_POINT])return!1;if(d&&l.properties[o.CURRENTLY_DRAWING])return!1;if(\"Point\"===l.geometry.type){const t=l.geometry.coordinates,e=c(t[0],t[1]);return U(u,e)<n}if(\"LineString\"===l.geometry.type){const t=l.geometry.coordinates;for(let e=0;e<t.length-1;e++){const i=t[e],o=t[e+1];if(Ut(u,c(i[0],i[1]),c(o[0],o[1]))<n)return!0}return!1}if(Lt([t,e],l.geometry.coordinates))return!0;if(null!=s&&s.includePolygonsWithinPointerDistance){const t=l.geometry.coordinates;for(const e of t)for(let t=0;t<e.length-1;t++){const i=e[t],o=e[t+1],s=c(i[0],i[1]),r=c(o[0],o[1]);if(Ut(u,s,r)<n)return!0}}return!1}).map(i=>{if(null==s||!s.addClosestCoordinateInfoToProperties)return i;let o;if(\"Polygon\"===i.geometry.type)o=i.geometry.coordinates[0],o.pop();else{if(\"LineString\"!==i.geometry.type)return i;o=i.geometry.coordinates}let n,r=-1,a=Infinity;for(let t=0;t<o.length;t++){const e=o[t],i=U(c(e[0],e[1]),u);i<a&&(r=t,a=i,n=e)}return i.properties.closestCoordinateIndexToEvent=r,i.properties.closestCoordinatePixelDistanceToEvent=a,i.properties.closestCoordinateDistanceKmToEvent=g(n,[t,e]),i})}getSelectModeOrThrow(){const t=this.getSelectMode({switchToSelectMode:!0});if(!t)throw new Error(\"No select mode defined in instance\");return t}getSelectMode({switchToSelectMode:t}){if(this.checkEnabled(),!this._instanceSelectMode)return null;const e=this.getMode();return t&&e!==this._instanceSelectMode&&this.setMode(this._instanceSelectMode),this._modes[this._instanceSelectMode]}isGuidanceFeature(t){return Boolean(t.properties[i.MID_POINT]||t.properties[i.SELECTION_POINT]||t.properties[o.COORDINATE_POINT]||t.properties[o.SNAPPING_POINT])}setModeStyles(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error(\"No mode with this name present\");this._modes[t].styles=e}updateModeOptions(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error(\"No mode with this name present\");this._modes[t].updateOptions(e)}getSnapshot(){return this._store.copyAll()}getSnapshotFeature(t){if(this._store.has(t))return this._store.copy(t)}clear(){this.checkEnabled(),this._adapter.clear()}get enabled(){return this._enabled}set enabled(t){throw new Error(\"Enabled is read only\")}getMode(){return this._mode.mode}getModeState(){return this._mode.state}setMode(t){if(this.checkEnabled(),!this._modes[t])throw new Error(\"No mode with this name present\");this._mode.stop(),this._mode=this._modes[t],this._mode.start()}removeFeatures(t){this.checkEnabled();const e=[];t.forEach(t=>{if(!this._store.has(t))throw new Error(`No feature with id ${t}, can not delete`);const s=this._store.copy(t);s.properties[i.SELECTED]&&this.deselectFeature(t),s.properties[o.COORDINATE_POINT_IDS]&&e.push(...s.properties[o.COORDINATE_POINT_IDS])}),this._store.delete([...t,...e],{origin:\"api\"})}selectFeature(t){this.getSelectModeOrThrow().selectFeature(t)}deselectFeature(t){this.getSelectModeOrThrow().deselectFeature(t)}getFeatureId(){return this._store.getId()}hasFeature(t){return this._store.has(t)}checkIsReservedProperty(t){return![...Object.values(i),...Object.values(o)].includes(t)}updateFeatureProperties(t,e){if(!this._store.has(t))throw new Error(`No feature with id ${t} present in store`);const i=this._store.copy(t);if(this.isGuidanceFeature(i))throw new Error(\"Guidance features are not allowed to be updated directly.\");const o=i.properties.mode;if(!this._modes[o])throw new Error(`No mode with name ${o} present in instance`);const s=Object.entries(e);s.forEach(([t,e])=>{if(!this.checkIsReservedProperty(t))throw new Error(`You are trying to update a reserved property name: ${t}. Please choose another name.`);if(void 0!==e&&!Xe(e))throw new Error(`Invalid JSON value provided for property ${t}`)}),this._store.updateProperty(s.map(([t,e])=>({id:i.id,property:t,value:e})),{origin:\"api\"})}updateFeatureGeometry(e,o){if(!this._store.has(e))throw new Error(`No feature with id ${e} present in store`);const s=this._store.copy(e);if(this.isGuidanceFeature(s))throw new Error(\"Guidance features are not allowed to be updated directly.\");if(!(s&&o&&o.type&&o.coordinates))throw new Error(\"Invalid geometry provided\");if(o.type!==s.geometry.type)throw new Error(`Geometry type mismatch: expected ${s.geometry.type}, got ${o.type}`);const n=s.properties.mode,r=this._modes[n];if(!r)throw new Error(`No mode with name ${n} present in instance`);const a=t({},s,{geometry:o}),d=r.validateFeature(a);if(!d.valid)throw new Error(`Feature validation failed: ${d.reason||\"Unknown reason\"}`);if(this._store.updateGeometry([{id:s.id,geometry:o}],{origin:\"api\"}),r.afterFeatureUpdated){r.afterFeatureUpdated(a);const t=a.properties[i.SELECTED],e=this.getSelectMode({switchToSelectMode:!1});e&&t&&e.afterFeatureUpdated(a)}}transformFeatureGeometry(t,e){if(!this._store.has(t))throw new Error(`No feature with id ${t} present in store`);let o=this._store.copy(t);if(this.isGuidanceFeature(o))throw new Error(\"Guidance features are not allowed to be updated directly.\");const s=o.properties.mode,n=this._modes[s];if(!n)throw new Error(`No mode with name ${s} present in instance`);let r;if(\"Polygon\"===o.geometry.type)r=o.geometry.coordinates[0];else{if(\"LineString\"!==o.geometry.type)throw new Error(`Feature geometry type ${o.geometry.type} is not supported for transformation`);r=o.geometry.coordinates}if(\"web-mercator\"!=e.projection)throw new Error(`Projection ${e.projection} is not currently supported for transformation`);if(\"scale\"===e.type){const{x:t,y:i}=E(e.origin[0],e.origin[1]);qt({coordinates:r,originX:t,originY:i,xScale:e.options.xScale||1,yScale:e.options.yScale||1})}else\"rotate\"===e.type&&(o=zt(o,e.options.angle||0),r=\"Polygon\"===o.geometry.type?o.geometry.coordinates[0]:o.geometry.coordinates);if(r=r.map(t=>[C(t[0],this._adapter.getCoordinatePrecision()),C(t[1],this._adapter.getCoordinatePrecision())]),o.geometry.coordinates=\"Polygon\"===o.geometry.type?[r]:r,this._store.updateGeometry([{id:o.id,geometry:o.geometry}],{origin:\"api\"}),n.afterFeatureUpdated){n.afterFeatureUpdated(o);const t=o.properties[i.SELECTED],e=this.getSelectMode({switchToSelectMode:!1});e&&t&&e.afterFeatureUpdated(o)}}addFeatures(t){return this.checkEnabled(),0===t.length?[]:this._store.load(t,t=>{if(r(t)){const e=t.properties.mode,i=this._modes[e];if(!i)return{id:t.id,valid:!1,reason:`${e} mode is not in the list of instantiated modes`};const o=i.validateFeature.bind(i)(t);return{id:t.id,valid:o.valid,reason:o.reason?o.reason:o.valid?void 0:\"Feature is invalid\"}}return{id:t.id,valid:!1,reason:\"Mode property does not exist\"}},t=>{if(r(t)){const e=this._modes[t.properties.mode];e&&e.afterFeatureAdded&&e.afterFeatureAdded(t)}},{origin:\"api\"})}start(){this._enabled||(this._enabled=!0,this._adapter.register({onReady:()=>{this._eventListeners.ready.forEach(t=>{t()})},getState:()=>this._mode.state,onClick:t=>{this._mode.onClick(t)},onMouseMove:t=>{this._mode.onMouseMove(t)},onKeyDown:t=>{this._mode.onKeyDown(t)},onKeyUp:t=>{this._mode.onKeyUp(t)},onDragStart:(t,e)=>{this._mode.onDragStart(t,e)},onDrag:(t,e)=>{this._mode.onDrag(t,e)},onDragEnd:(t,e)=>{this._mode.onDragEnd(t,e)},onClear:()=>{this._mode.cleanUp(),this._store.clear()}}))}getFeaturesAtLngLat(t,e){const{lng:i,lat:o}=t;return this.featuresAtLocation({lng:i,lat:o},e)}getFeaturesAtPointerEvent(t,e){const i=this._adapter.getLngLatFromEvent.bind(this._adapter)(t);return null===i?[]:this.featuresAtLocation(i,e)}stop(){this._enabled&&(this._enabled=!1,this._adapter.unregister())}on(t,e){const i=this._eventListeners[t];i.includes(e)||i.push(e)}off(t,e){const i=this._eventListeners[t];i.includes(e)&&i.splice(i.indexOf(e),1)}}export{He as TerraDraw,Ne as TerraDrawAngledRectangleMode,L as TerraDrawCircleMode,Ae as TerraDrawExtend,ze as TerraDrawFreehandLineStringMode,K as TerraDrawFreehandMode,mt as TerraDrawLineStringMode,Et as TerraDrawPointMode,wt as TerraDrawPolygonMode,bt as TerraDrawRectangleMode,kt as TerraDrawRenderMode,Be as TerraDrawSectorMode,te as TerraDrawSelectMode,Le as TerraDrawSensorMode,Fe as ValidateMaxAreaSquareMeters,Me as ValidateMinAreaSquareMeters,Oe as ValidateNotSelfIntersecting,Ve as ValidationReasons};\n//# sourceMappingURL=terra-draw.modern.js.map\n","import{TerraDrawExtend as e}from\"terra-draw\";class t extends e.TerraDrawBaseAdapter{constructor(e){super(e),this._renderBeforeLayerId=void 0,this._prefixId=void 0,this._initialDragPan=void 0,this._initialDragRotate=void 0,this._nextRender=void 0,this._map=void 0,this._container=void 0,this.changedIds={deletion:!1,points:!1,linestrings:!1,polygons:!1,styling:!1},this._map=e.map,this._container=this._map.getContainer(),this._initialDragRotate=this._map.dragRotate.isEnabled(),this._initialDragPan=this._map.dragPan.isEnabled(),this._renderBeforeLayerId=e.renderBelowLayerId,this._prefixId=e.prefixId||\"td\"}_addGeoJSONSource(e,t){this._map.addSource(e,{type:\"geojson\",data:{type:\"FeatureCollection\",features:t},tolerance:0})}_addFillLayer(e){return this._map.addLayer({id:e,source:e,type:\"fill\",layout:{\"fill-sort-key\":[\"get\",\"zIndex\"]},paint:{\"fill-color\":[\"get\",\"polygonFillColor\"],\"fill-opacity\":[\"get\",\"polygonFillOpacity\"]}})}_addFillOutlineLayer(e){return this._map.addLayer({id:e+\"-outline\",source:e,type:\"line\",layout:{\"line-sort-key\":[\"get\",\"zIndex\"]},paint:{\"line-width\":[\"get\",\"polygonOutlineWidth\"],\"line-color\":[\"get\",\"polygonOutlineColor\"]}})}_addLineLayer(e){return this._map.addLayer({id:e,source:e,type:\"line\",layout:{\"line-sort-key\":[\"get\",\"zIndex\"]},paint:{\"line-width\":[\"get\",\"lineStringWidth\"],\"line-color\":[\"get\",\"lineStringColor\"]}})}_addPointLayer(e){return this._map.addLayer({id:e,source:e,type:\"circle\",layout:{\"circle-sort-key\":[\"get\",\"zIndex\"]},paint:{\"circle-stroke-color\":[\"get\",\"pointOutlineColor\"],\"circle-stroke-width\":[\"get\",\"pointOutlineWidth\"],\"circle-radius\":[\"get\",\"pointWidth\"],\"circle-color\":[\"get\",\"pointColor\"]}})}_addLayer(e,t){\"Point\"===t&&this._addPointLayer(e),\"LineString\"===t&&this._addLineLayer(e),\"Polygon\"===t&&(this._addFillLayer(e),this._addFillOutlineLayer(e))}_addGeoJSONLayer(e,t){const i=`${this._prefixId}-${e.toLowerCase()}`;return this._addGeoJSONSource(i,t),this._addLayer(i,e),i}_setGeoJSONLayerData(e,t){const i=`${this._prefixId}-${e.toLowerCase()}`;return this._map.getSource(i).setData({type:\"FeatureCollection\",features:t}),i}updateChangedIds(e){[...e.updated,...e.created].forEach(e=>{\"Point\"===e.geometry.type?this.changedIds.points=!0:\"LineString\"===e.geometry.type?this.changedIds.linestrings=!0:\"Polygon\"===e.geometry.type&&(this.changedIds.polygons=!0)}),e.deletedIds.length>0&&(this.changedIds.deletion=!0),0===e.created.length&&0===e.updated.length&&0===e.deletedIds.length&&(this.changedIds.styling=!0)}getLngLatFromEvent(e){const{left:t,top:i}=this._container.getBoundingClientRect();return this.unproject(e.clientX-t,e.clientY-i)}getMapEventElement(){return this._map.getCanvas()}setDraggability(e){e?(this._initialDragRotate&&this._map.dragRotate.enable(),this._initialDragPan&&this._map.dragPan.enable()):(this._initialDragRotate&&this._map.dragRotate.disable(),this._initialDragPan&&this._map.dragPan.disable())}project(e,t){const{x:i,y:n}=this._map.project({lng:e,lat:t});return{x:i,y:n}}unproject(e,t){const{lng:i,lat:n}=this._map.unproject({x:e,y:t});return{lng:i,lat:n}}setCursor(e){const t=this._map.getCanvas();\"unset\"===e?t.style.removeProperty(\"cursor\"):t.style.cursor=e}setDoubleClickToZoom(e){e?this._map.doubleClickZoom.enable():this._map.doubleClickZoom.disable()}render(e,t){this.updateChangedIds(e),this._nextRender&&cancelAnimationFrame(this._nextRender),this._nextRender=requestAnimationFrame(()=>{if(!this._currentModeCallbacks)return;const i=[...e.created,...e.updated,...e.unchanged],n=[],o=[],r=[];for(let e=0;e<i.length;e++){const a=i[e],{properties:s}=a,l=t[s.mode](a);\"Point\"===a.geometry.type?(s.pointColor=l.pointColor,s.pointOutlineColor=l.pointOutlineColor,s.pointOutlineWidth=l.pointOutlineWidth,s.pointWidth=l.pointWidth,s.zIndex=l.zIndex,n.push(a)):\"LineString\"===a.geometry.type?(s.lineStringColor=l.lineStringColor,s.lineStringWidth=l.lineStringWidth,o.push(a)):\"Polygon\"===a.geometry.type&&(s.polygonFillColor=l.polygonFillColor,s.polygonFillOpacity=l.polygonFillOpacity,s.polygonOutlineColor=l.polygonOutlineColor,s.polygonOutlineWidth=l.polygonOutlineWidth,r.push(a))}const a=this.changedIds.deletion||this.changedIds.styling,s=a||this.changedIds.linestrings,l=a||this.changedIds.polygons;(a||this.changedIds.points)&&this._setGeoJSONLayerData(\"Point\",n),s&&this._setGeoJSONLayerData(\"LineString\",o),l&&this._setGeoJSONLayerData(\"Polygon\",r),this.changedIds={points:!1,linestrings:!1,polygons:!1,deletion:!1,styling:!1}})}clear(){this._currentModeCallbacks&&(this._currentModeCallbacks.onClear(),this._nextRender&&(cancelAnimationFrame(this._nextRender),this._nextRender=void 0),this._setGeoJSONLayerData(\"Point\",[]),this._setGeoJSONLayerData(\"LineString\",[]),this._setGeoJSONLayerData(\"Polygon\",[]))}getCoordinatePrecision(){return super.getCoordinatePrecision()}unregister(){super.unregister(),this.changedIds={points:!1,linestrings:!1,polygons:!1,deletion:!1,styling:!1},this._map.removeLayer(`${this._prefixId}-point`),this._map.removeSource(`${this._prefixId}-point`),this._map.removeLayer(`${this._prefixId}-linestring`),this._map.removeSource(`${this._prefixId}-linestring`),this._map.removeLayer(`${this._prefixId}-polygon`),this._map.removeLayer(`${this._prefixId}-polygon-outline`),this._map.removeSource(`${this._prefixId}-polygon`)}register(e){var t;super.register(e);const i=this._addGeoJSONLayer(\"Polygon\",[]),n=this._addGeoJSONLayer(\"LineString\",[]),o=this._addGeoJSONLayer(\"Point\",[]);this._renderBeforeLayerId&&(this._map.moveLayer(o,this._renderBeforeLayerId),this._map.moveLayer(n,o),this._map.moveLayer(i+\"-outline\",n),this._map.moveLayer(i,n)),null!=(t=this._currentModeCallbacks)&&t.onReady&&this._currentModeCallbacks.onReady()}}export{t as TerraDrawMapLibreGLAdapter};\n//# sourceMappingURL=terra-draw-maplibre-gl-adapter.modern.js.map\n","/**\n * The list of available Terra Draw drawing modes for MaplibreTerraDrawControl\n *\n * `render` is a special mode and this is appeared as toggle button to expand/collapse the tool.\n * If you always want the tool to be visible, `render` can be removed and set `open` property of the constructor as true.\n *\n * `delete-selection` button is only appeared, when the select button is active.\n *\n * If no drawing feature is in TerraDraw, `delete` and `download` are disabled.\n */\nexport const AvailableModes = [\n\t'render',\n\t'point',\n\t'linestring',\n\t'polygon',\n\t'rectangle',\n\t'circle',\n\t'freehand',\n\t'freehand-linestring',\n\t'angled-rectangle',\n\t'sensor',\n\t'sector',\n\t'select',\n\t'delete-selection',\n\t'delete',\n\t'download'\n] as const;\n\n/**\n * The list of available Terra Draw drawing modes for MaplibreValhallaControl\n *\n * - point mode is used to compute isochrone polygons.\n * - linestring mode is used to calculate routes.\n *\n * `render` is a special mode and this is appeared as toggle button to expand/collapse the tool.\n * If you always want the tool to be visible, `render` can be removed and set `open` property of the constructor as true.\n *\n * `delete-selection` button is only appeared, when the select button is active.\n *\n * If no drawing feature is in TerraDraw, `delete` and `download` are disabled.\n */\nexport const AvailableValhallaModes = [\n\t'render',\n\t'linestring',\n\t'point',\n\t'select',\n\t'delete-selection',\n\t'delete',\n\t'download',\n\t'settings'\n] as const;\n","import type { TerradrawControlOptions } from '../interfaces/TerradrawControlOptions';\n\n/**\n * Default control options\n */\nexport const defaultControlOptions: TerradrawControlOptions = {\n\tmodes: [\n\t\t'render',\n\t\t'point',\n\t\t'linestring',\n\t\t'polygon',\n\t\t'rectangle',\n\t\t'angled-rectangle',\n\t\t'sensor',\n\t\t'sector',\n\t\t'circle',\n\t\t'freehand',\n\t\t'freehand-linestring',\n\t\t'select',\n\t\t'delete-selection',\n\t\t'delete',\n\t\t'download'\n\t],\n\topen: false\n};\n","import {\n\tTerraDrawAngledRectangleMode,\n\tTerraDrawCircleMode,\n\tTerraDrawFreehandLineStringMode,\n\tTerraDrawFreehandMode,\n\tTerraDrawLineStringMode,\n\tTerraDrawPointMode,\n\tTerraDrawPolygonMode,\n\tTerraDrawRectangleMode,\n\tTerraDrawSectorMode,\n\tTerraDrawSelectMode,\n\tTerraDrawSensorMode\n} from 'terra-draw';\nimport type { MeasureControlOptions } from '../interfaces/MeasureControlOptions';\n\n/**\n * Default MeasureControl options\n */\nexport const defaultMeasureControlOptions: MeasureControlOptions = {\n\tmodes: [\n\t\t'render',\n\t\t'point',\n\t\t'linestring',\n\t\t'polygon',\n\t\t'rectangle',\n\t\t'angled-rectangle',\n\t\t'sensor',\n\t\t'sector',\n\t\t'circle',\n\t\t'freehand',\n\t\t'freehand-linestring',\n\t\t'select',\n\t\t'delete-selection',\n\t\t'delete',\n\t\t'download'\n\t],\n\topen: false,\n\t// see styling parameters of Terra Draw at https://github.com/JamesLMilner/terra-draw/blob/main/guides/5.STYLING.md\n\tmodeOptions: {\n\t\tpoint: new TerraDrawPointMode({\n\t\t\teditable: true,\n\t\t\tstyles: {\n\t\t\t\tpointColor: '#FFFFFF',\n\t\t\t\tpointWidth: 5,\n\t\t\t\tpointOutlineColor: '#666666',\n\t\t\t\tpointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tlinestring: new TerraDrawLineStringMode({\n\t\t\teditable: true,\n\t\t\tstyles: {\n\t\t\t\tlineStringColor: '#666666',\n\t\t\t\tlineStringWidth: 2,\n\t\t\t\tclosingPointColor: '#FFFFFF',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tpolygon: new TerraDrawPolygonMode({\n\t\t\teditable: true,\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2,\n\t\t\t\tclosingPointColor: '#FAFAFA',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\trectangle: new TerraDrawRectangleMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\t'angled-rectangle': new TerraDrawAngledRectangleMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\tcircle: new TerraDrawCircleMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\tfreehand: new TerraDrawFreehandMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2,\n\t\t\t\tclosingPointColor: '#FAFAFA',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\t'freehand-linestring': new TerraDrawFreehandLineStringMode({\n\t\t\tstyles: {\n\t\t\t\tlineStringColor: '#666666',\n\t\t\t\tlineStringWidth: 2,\n\t\t\t\tclosingPointColor: '#FFFFFF',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tsensor: new TerraDrawSensorMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2,\n\t\t\t\tcenterPointColor: '#FAFAFA',\n\t\t\t\tcenterPointWidth: 3,\n\t\t\t\tcenterPointOutlineColor: '#666666',\n\t\t\t\tcenterPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tsector: new TerraDrawSectorMode({\n\t\t\tstyles: {\n\t\t\t\tfillColor: '#EDEFF0',\n\t\t\t\tfillOpacity: 0.7,\n\t\t\t\toutlineColor: '#666666',\n\t\t\t\toutlineWidth: 2\n\t\t\t}\n\t\t}),\n\t\tselect: new TerraDrawSelectMode({\n\t\t\tflags: {\n\t\t\t\tpoint: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpolygon: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlinestring: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfreehand: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'freehand-linestring': {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcircle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trectangle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'angled-rectangle': {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsensor: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsector: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tpointLayerLabelSpec: {\n\t\tid: '{prefix}-point-label',\n\t\ttype: 'symbol',\n\t\tsource: '{prefix}-point-source',\n\t\tfilter: ['all', ['==', '$type', 'Point'], ['==', 'mode', 'point']],\n\t\tlayout: {\n\t\t\t'text-field': [\n\t\t\t\t'case',\n\t\t\t\t['all', ['has', 'elevation'], ['>', ['get', 'elevation'], 0]],\n\t\t\t\t['concat', 'Alt. ', ['to-string', ['floor', ['get', 'elevation']]], ' m'],\n\t\t\t\t''\n\t\t\t],\n\t\t\t'symbol-placement': 'point',\n\t\t\t'text-size': [\n\t\t\t\t'interpolate',\n\t\t\t\t['linear'],\n\t\t\t\t['zoom'],\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t12.0,\n\t\t\t\t13,\n\t\t\t\t14.0,\n\t\t\t\t14,\n\t\t\t\t16.0,\n\t\t\t\t18,\n\t\t\t\t18.0\n\t\t\t],\n\t\t\t'text-overlap': 'always',\n\t\t\t'text-variable-anchor': ['left', 'right', 'top', 'bottom'],\n\t\t\t'text-radial-offset': 0.5,\n\t\t\t'text-justify': 'center',\n\t\t\t'text-letter-spacing': 0.05\n\t\t},\n\t\tpaint: {\n\t\t\t'text-halo-color': '#F7F7F7',\n\t\t\t'text-halo-width': 2,\n\t\t\t'text-color': '#232E3D'\n\t\t}\n\t},\n\tlineLayerLabelSpec: {\n\t\tid: '{prefix}-line-label',\n\t\ttype: 'symbol',\n\t\tsource: '{prefix}-line-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {\n\t\t\t'text-field': [\n\t\t\t\t'concat',\n\t\t\t\t['to-string', ['get', 'distance']],\n\t\t\t\t' ',\n\t\t\t\t['get', 'unit'],\n\t\t\t\t[\n\t\t\t\t\t'case',\n\t\t\t\t\t['==', ['get', 'total'], 0],\n\t\t\t\t\t'',\n\t\t\t\t\t['concat', '\\n(', ['to-string', ['get', 'total']], ' ', ['get', 'totalUnit'], ')']\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'case',\n\t\t\t\t\t['all', ['has', 'elevation'], ['>', ['get', 'elevation'], 0]],\n\t\t\t\t\t['concat', '\\nAlt. ', ['to-string', ['floor', ['get', 'elevation']]], ' m'],\n\t\t\t\t\t''\n\t\t\t\t]\n\t\t\t],\n\t\t\t'symbol-placement': 'point',\n\t\t\t'text-size': [\n\t\t\t\t'interpolate',\n\t\t\t\t['linear'],\n\t\t\t\t['zoom'],\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t12.0,\n\t\t\t\t13,\n\t\t\t\t14.0,\n\t\t\t\t14,\n\t\t\t\t16.0,\n\t\t\t\t18,\n\t\t\t\t18.0\n\t\t\t],\n\t\t\t'text-overlap': 'always',\n\t\t\t'text-variable-anchor': ['left', 'right', 'top', 'bottom'],\n\t\t\t'text-radial-offset': 0.5,\n\t\t\t'text-justify': 'center',\n\t\t\t'text-letter-spacing': 0.05\n\t\t},\n\t\tpaint: {\n\t\t\t'text-halo-color': '#F7F7F7',\n\t\t\t'text-halo-width': 2,\n\t\t\t'text-color': '#232E3D'\n\t\t}\n\t},\n\troutingLineLayerNodeSpec: {\n\t\tid: '{prefix}-line-node',\n\t\ttype: 'circle',\n\t\tsource: '{prefix}-line-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {},\n\t\tpaint: {\n\t\t\t'circle-radius': 3,\n\t\t\t'circle-color': '#FFFFFF',\n\t\t\t'circle-stroke-color': '#000000',\n\t\t\t'circle-stroke-width': 1\n\t\t}\n\t},\n\tpolygonLayerSpec: {\n\t\tid: '{prefix}-polygon-label',\n\t\ttype: 'symbol',\n\t\tsource: '{prefix}-polygon-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {\n\t\t\t'text-field': ['concat', ['to-string', ['get', 'area']], ' ', ['get', 'unit']],\n\t\t\t'symbol-placement': 'point',\n\t\t\t'text-size': [\n\t\t\t\t'interpolate',\n\t\t\t\t['linear'],\n\t\t\t\t['zoom'],\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t12.0,\n\t\t\t\t13,\n\t\t\t\t14.0,\n\t\t\t\t14,\n\t\t\t\t16.0,\n\t\t\t\t18,\n\t\t\t\t18.0\n\t\t\t],\n\t\t\t'text-overlap': 'always',\n\t\t\t'text-letter-spacing': 0.05\n\t\t},\n\t\tpaint: {\n\t\t\t'text-halo-color': '#F7F7F7',\n\t\t\t'text-halo-width': 2,\n\t\t\t'text-color': '#232E3D'\n\t\t}\n\t},\n\tcomputeElevation: false,\n\tterrainSource: {\n\t\turl: 'https://s3.amazonaws.com/elevation-tiles-prod/terrarium/{z}/{x}/{y}.png',\n\t\tencoding: 'terrarium',\n\t\ttileSize: 256,\n\t\tminzoom: 5,\n\t\tmaxzoom: 15,\n\t\ttms: false\n\t},\n\tdistanceUnit: 'kilometers',\n\tdistancePrecision: 2,\n\tforceDistanceUnit: 'auto',\n\tareaUnit: 'metric',\n\tareaPrecision: 2,\n\tforceAreaUnit: 'auto',\n\televationCacheConfig: {\n\t\tenabled: true,\n\t\tmaxSize: 1000,\n\t\tttl: 60 * 60 * 1000, // 1 hour\n\t\tprecision: 9 // 9 is default precision of terra-draw adapter setting\n\t},\n\tadapterOptions: {\n\t\tprefixId: 'td-measure'\n\t}\n};\n","import {\n\tTerraDrawLineStringMode,\n\tTerraDrawPointMode,\n\tTerraDrawRenderMode,\n\tTerraDrawSelectMode\n} from 'terra-draw';\nimport type { ValhallaControlOptions } from '../interfaces/ValhallaControlOptions';\n\n/**\n * Default ValhallaControl options\n */\nexport const defaultValhallaControlOptions: ValhallaControlOptions = {\n\tmodes: [\n\t\t'render',\n\t\t'linestring',\n\t\t'point',\n\t\t'select',\n\t\t'delete-selection',\n\t\t'delete',\n\t\t'download',\n\t\t'settings'\n\t],\n\topen: false,\n\t// see styling parameters of Terra Draw at https://github.com/JamesLMilner/terra-draw/blob/main/guides/5.STYLING.md\n\tmodeOptions: {\n\t\tpoint: new TerraDrawPointMode({\n\t\t\teditable: false,\n\t\t\tstyles: {\n\t\t\t\tpointColor: '#FFFFFF',\n\t\t\t\tpointWidth: 5,\n\t\t\t\tpointOutlineColor: '#666666',\n\t\t\t\tpointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tlinestring: new TerraDrawLineStringMode({\n\t\t\teditable: false,\n\t\t\tstyles: {\n\t\t\t\tlineStringColor: '#FF0000',\n\t\t\t\tlineStringWidth: 2,\n\t\t\t\tclosingPointColor: '#FF0000',\n\t\t\t\tclosingPointWidth: 3,\n\t\t\t\tclosingPointOutlineColor: '#666666',\n\t\t\t\tclosingPointOutlineWidth: 1\n\t\t\t}\n\t\t}),\n\t\tselect: new TerraDrawSelectMode({\n\t\t\tflags: {\n\t\t\t\tpoint: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlinestring: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: false,\n\t\t\t\t\t\trotateable: false,\n\t\t\t\t\t\tscaleable: false,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: false,\n\t\t\t\t\t\t\tdraggable: false,\n\t\t\t\t\t\t\tdeletable: false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tsettings: new TerraDrawRenderMode({\n\t\t\tmodeName: 'settings',\n\t\t\tstyles: {}\n\t\t})\n\t},\n\tvalhallaOptions: {\n\t\turl: '',\n\t\troutingOptions: {\n\t\t\tcostingModel: 'auto',\n\t\t\tdistanceUnit: 'kilometers'\n\t\t},\n\t\tisochroneOptions: {\n\t\t\tcontourType: 'time',\n\t\t\tcostingModel: 'auto',\n\t\t\tcontours: [\n\t\t\t\t{\n\t\t\t\t\ttime: 3,\n\t\t\t\t\tdistance: 1,\n\t\t\t\t\tcolor: '#ff0000'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttime: 5,\n\t\t\t\t\tdistance: 2,\n\t\t\t\t\tcolor: '#ffff00'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttime: 10,\n\t\t\t\t\tdistance: 3,\n\t\t\t\t\tcolor: '#0000ff'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttime: 15,\n\t\t\t\t\tdistance: 4,\n\t\t\t\t\tcolor: '#ff00ff'\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\tadapterOptions: {\n\t\tprefixId: 'td-valhalla'\n\t},\n\troutingLineLayerNodeLabelSpec: {\n\t\tid: '{prefix}-routing-node-label',\n\t\ttype: 'symbol',\n\t\tsource: '{prefix}-routing-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {\n\t\t\t'text-field': [\n\t\t\t\t'case',\n\t\t\t\t['all', ['has', 'distance'], ['has', 'distance_unit'], ['has', 'time']],\n\t\t\t\t[\n\t\t\t\t\t'concat',\n\t\t\t\t\t['to-string', ['get', 'text']],\n\t\t\t\t\t'\\n',\n\t\t\t\t\t['to-string', ['/', ['round', ['*', ['get', 'distance'], 10]], 10]],\n\t\t\t\t\t['to-string', ['get', 'distance_unit']],\n\t\t\t\t\t'\\n',\n\t\t\t\t\t['to-string', ['get', 'time']],\n\t\t\t\t\t'min'\n\t\t\t\t],\n\t\t\t\t['all', ['has', 'costingModel']],\n\t\t\t\t[\n\t\t\t\t\t'concat',\n\t\t\t\t\t['to-string', ['get', 'text']],\n\t\t\t\t\t'\\n(',\n\t\t\t\t\t['to-string', ['get', 'costingModel']],\n\t\t\t\t\t')'\n\t\t\t\t],\n\t\t\t\t['concat', ['to-string', ['get', 'text']]]\n\t\t\t],\n\t\t\t'symbol-placement': 'point',\n\t\t\t'text-size': [\n\t\t\t\t'interpolate',\n\t\t\t\t['linear'],\n\t\t\t\t['zoom'],\n\t\t\t\t5,\n\t\t\t\t10,\n\t\t\t\t10,\n\t\t\t\t12.0,\n\t\t\t\t13,\n\t\t\t\t14.0,\n\t\t\t\t14,\n\t\t\t\t16.0,\n\t\t\t\t18,\n\t\t\t\t18.0\n\t\t\t],\n\t\t\t'text-overlap': 'always',\n\t\t\t'text-variable-anchor': ['left', 'right', 'top', 'bottom'],\n\t\t\t'text-radial-offset': 0.5,\n\t\t\t'text-justify': 'left',\n\t\t\t'text-letter-spacing': 0.05\n\t\t},\n\t\tpaint: {\n\t\t\t'text-halo-color': '#F7F7F7',\n\t\t\t'text-halo-width': 2,\n\t\t\t'text-color': '#232E3D'\n\t\t}\n\t},\n\troutingLineLayerNodeSpec: {\n\t\tid: '{prefix}-routing-node',\n\t\ttype: 'circle',\n\t\tsource: '{prefix}-routing-source',\n\t\tfilter: ['==', '$type', 'Point'],\n\t\tlayout: {},\n\t\tpaint: {\n\t\t\t'circle-radius': 3,\n\t\t\t'circle-color': [\n\t\t\t\t'case',\n\t\t\t\t['==', ['get', 'text'], 'Start'],\n\t\t\t\t'#0000FF',\n\t\t\t\t['==', ['get', 'text'], 'Goal'],\n\t\t\t\t'#FFFF00',\n\t\t\t\t'#FFFFFF'\n\t\t\t],\n\t\t\t'circle-stroke-color': '#000000',\n\t\t\t'circle-stroke-width': 1\n\t\t}\n\t},\n\tisochronePolygonLayerSpec: {\n\t\tid: '{prefix}-isochrone-polygon',\n\t\ttype: 'fill',\n\t\tsource: '{prefix}-isochrone-source',\n\t\tlayout: {},\n\t\tpaint: {\n\t\t\t'fill-color': ['get', 'fillColor'],\n\t\t\t'fill-opacity': ['get', 'fillOpacity']\n\t\t}\n\t},\n\tisochroneLineLayerSpec: {\n\t\tid: '{prefix}-isochrone-line',\n\t\ttype: 'line',\n\t\tsource: '{prefix}-isochrone-source',\n\t\tlayout: {\n\t\t\t'line-join': 'round',\n\t\t\t'line-cap': 'round'\n\t\t},\n\t\tpaint: {\n\t\t\t'line-color': ['get', 'fillColor'],\n\t\t\t'line-width': 3\n\t\t}\n\t},\n\tisochroneLabelLayerSpec: {\n\t\tid: '{prefix}-isochrone-label',\n\t\ttype: 'symbol',\n\t\tsource: '{prefix}-isochrone-source',\n\t\tlayout: {\n\t\t\t'symbol-placement': 'line',\n\t\t\t'text-pitch-alignment': 'viewport',\n\t\t\t'text-field': [\n\t\t\t\t'concat',\n\t\t\t\t['get', 'contour'],\n\t\t\t\t' ',\n\t\t\t\t[\n\t\t\t\t\t'case',\n\t\t\t\t\t['==', ['get', 'metric'], 'time'],\n\t\t\t\t\t'min',\n\t\t\t\t\t['==', ['get', 'metric'], 'distance'],\n\t\t\t\t\t'km',\n\t\t\t\t\t''\n\t\t\t\t]\n\t\t\t],\n\t\t\t'text-size': 12,\n\t\t\t'symbol-spacing': 100,\n\t\t\t'text-max-angle': 45\n\t\t},\n\t\tpaint: {\n\t\t\t'text-color': 'rgb(0, 0, 0)',\n\t\t\t'text-halo-width': 1,\n\t\t\t'text-halo-color': 'rgb(255, 255, 255)'\n\t\t}\n\t}\n};\n","import type { MapGeoJSONFeature } from 'maplibre-gl';\nimport type { ModeOptions } from '../interfaces/ModeOptions';\nimport {\n\tTerraDrawAngledRectangleMode,\n\tTerraDrawCircleMode,\n\tTerraDrawFreehandLineStringMode,\n\tTerraDrawFreehandMode,\n\tTerraDrawLineStringMode,\n\tTerraDrawPointMode,\n\tTerraDrawPolygonMode,\n\tTerraDrawRectangleMode,\n\tTerraDrawRenderMode,\n\tTerraDrawSectorMode,\n\tTerraDrawSelectMode,\n\tTerraDrawSensorMode,\n\tValidateNotSelfIntersecting\n} from 'terra-draw';\n\n/**\n * get default Terra Draw mode instances.\n * @returns default TerraDrawMode objects. Key is TerraDraw mode name, and value is Terra Draw mode object instance\n */\nexport const getDefaultModeOptions = () => {\n\tconst modeOptions: ModeOptions = {\n\t\trender: new TerraDrawRenderMode({\n\t\t\tmodeName: 'render',\n\t\t\tstyles: {}\n\t\t}),\n\t\tpoint: new TerraDrawPointMode({\n\t\t\teditable: true\n\t\t}),\n\t\tlinestring: new TerraDrawLineStringMode({\n\t\t\teditable: true\n\t\t}),\n\t\tpolygon: new TerraDrawPolygonMode({\n\t\t\teditable: true,\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tvalidation: (feature: MapGeoJSONFeature, e: { updateType: string }) => {\n\t\t\t\tconst updateType = e.updateType;\n\t\t\t\tif (updateType === 'finish' || updateType === 'commit') {\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn ValidateNotSelfIntersecting(feature);\n\t\t\t\t}\n\t\t\t\treturn { valid: true };\n\t\t\t}\n\t\t}),\n\t\trectangle: new TerraDrawRectangleMode(),\n\t\t'angled-rectangle': new TerraDrawAngledRectangleMode(),\n\t\tcircle: new TerraDrawCircleMode(),\n\t\tfreehand: new TerraDrawFreehandMode(),\n\t\t'freehand-linestring': new TerraDrawFreehandLineStringMode(),\n\t\tsensor: new TerraDrawSensorMode(),\n\t\tsector: new TerraDrawSectorMode(),\n\t\tselect: new TerraDrawSelectMode({\n\t\t\tflags: {\n\t\t\t\tpoint: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tpolygon: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlinestring: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfreehand: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'freehand-linestring': {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcircle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\trectangle: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'angled-rectangle': {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsensor: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsector: {\n\t\t\t\t\tfeature: {\n\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\trotateable: true,\n\t\t\t\t\t\tscaleable: true,\n\t\t\t\t\t\tcoordinates: {\n\t\t\t\t\t\t\tmidpoints: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tdeletable: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tdelete: new TerraDrawRenderMode({\n\t\t\tmodeName: 'delete',\n\t\t\tstyles: {}\n\t\t}),\n\t\t'delete-selection': new TerraDrawRenderMode({\n\t\t\tmodeName: 'delete-selection',\n\t\t\tstyles: {}\n\t\t}),\n\t\tdownload: new TerraDrawRenderMode({\n\t\t\tmodeName: 'download',\n\t\t\tstyles: {}\n\t\t})\n\t};\n\treturn modeOptions;\n};\n","// index.ts\nvar earthRadius = 63710088e-1;\nvar factors = {\n  centimeters: earthRadius * 100,\n  centimetres: earthRadius * 100,\n  degrees: 360 / (2 * Math.PI),\n  feet: earthRadius * 3.28084,\n  inches: earthRadius * 39.37,\n  kilometers: earthRadius / 1e3,\n  kilometres: earthRadius / 1e3,\n  meters: earthRadius,\n  metres: earthRadius,\n  miles: earthRadius / 1609.344,\n  millimeters: earthRadius * 1e3,\n  millimetres: earthRadius * 1e3,\n  nauticalmiles: earthRadius / 1852,\n  radians: 1,\n  yards: earthRadius * 1.0936\n};\nvar areaFactors = {\n  acres: 247105e-9,\n  centimeters: 1e4,\n  centimetres: 1e4,\n  feet: 10.763910417,\n  hectares: 1e-4,\n  inches: 1550.003100006,\n  kilometers: 1e-6,\n  kilometres: 1e-6,\n  meters: 1,\n  metres: 1,\n  miles: 386e-9,\n  nauticalmiles: 29155334959812285e-23,\n  millimeters: 1e6,\n  millimetres: 1e6,\n  yards: 1.195990046\n};\nfunction feature(geom, properties, options = {}) {\n  const feat = { type: \"Feature\" };\n  if (options.id === 0 || options.id) {\n    feat.id = options.id;\n  }\n  if (options.bbox) {\n    feat.bbox = options.bbox;\n  }\n  feat.properties = properties || {};\n  feat.geometry = geom;\n  return feat;\n}\nfunction geometry(type, coordinates, _options = {}) {\n  switch (type) {\n    case \"Point\":\n      return point(coordinates).geometry;\n    case \"LineString\":\n      return lineString(coordinates).geometry;\n    case \"Polygon\":\n      return polygon(coordinates).geometry;\n    case \"MultiPoint\":\n      return multiPoint(coordinates).geometry;\n    case \"MultiLineString\":\n      return multiLineString(coordinates).geometry;\n    case \"MultiPolygon\":\n      return multiPolygon(coordinates).geometry;\n    default:\n      throw new Error(type + \" is invalid\");\n  }\n}\nfunction point(coordinates, properties, options = {}) {\n  if (!coordinates) {\n    throw new Error(\"coordinates is required\");\n  }\n  if (!Array.isArray(coordinates)) {\n    throw new Error(\"coordinates must be an Array\");\n  }\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be at least 2 numbers long\");\n  }\n  if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) {\n    throw new Error(\"coordinates must contain numbers\");\n  }\n  const geom = {\n    type: \"Point\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction points(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return point(coords, properties);\n    }),\n    options\n  );\n}\nfunction polygon(coordinates, properties, options = {}) {\n  for (const ring of coordinates) {\n    if (ring.length < 4) {\n      throw new Error(\n        \"Each LinearRing of a Polygon must have 4 or more Positions.\"\n      );\n    }\n    if (ring[ring.length - 1].length !== ring[0].length) {\n      throw new Error(\"First and last Position are not equivalent.\");\n    }\n    for (let j = 0; j < ring[ring.length - 1].length; j++) {\n      if (ring[ring.length - 1][j] !== ring[0][j]) {\n        throw new Error(\"First and last Position are not equivalent.\");\n      }\n    }\n  }\n  const geom = {\n    type: \"Polygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction polygons(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return polygon(coords, properties);\n    }),\n    options\n  );\n}\nfunction lineString(coordinates, properties, options = {}) {\n  if (coordinates.length < 2) {\n    throw new Error(\"coordinates must be an array of two or more positions\");\n  }\n  const geom = {\n    type: \"LineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction lineStrings(coordinates, properties, options = {}) {\n  return featureCollection(\n    coordinates.map((coords) => {\n      return lineString(coords, properties);\n    }),\n    options\n  );\n}\nfunction featureCollection(features, options = {}) {\n  const fc = { type: \"FeatureCollection\" };\n  if (options.id) {\n    fc.id = options.id;\n  }\n  if (options.bbox) {\n    fc.bbox = options.bbox;\n  }\n  fc.features = features;\n  return fc;\n}\nfunction multiLineString(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiLineString\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPoint(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPoint\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction multiPolygon(coordinates, properties, options = {}) {\n  const geom = {\n    type: \"MultiPolygon\",\n    coordinates\n  };\n  return feature(geom, properties, options);\n}\nfunction geometryCollection(geometries, properties, options = {}) {\n  const geom = {\n    type: \"GeometryCollection\",\n    geometries\n  };\n  return feature(geom, properties, options);\n}\nfunction round(num, precision = 0) {\n  if (precision && !(precision >= 0)) {\n    throw new Error(\"precision must be a positive number\");\n  }\n  const multiplier = Math.pow(10, precision || 0);\n  return Math.round(num * multiplier) / multiplier;\n}\nfunction radiansToLength(radians, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return radians * factor;\n}\nfunction lengthToRadians(distance, units = \"kilometers\") {\n  const factor = factors[units];\n  if (!factor) {\n    throw new Error(units + \" units is invalid\");\n  }\n  return distance / factor;\n}\nfunction lengthToDegrees(distance, units) {\n  return radiansToDegrees(lengthToRadians(distance, units));\n}\nfunction bearingToAzimuth(bearing) {\n  let angle = bearing % 360;\n  if (angle < 0) {\n    angle += 360;\n  }\n  return angle;\n}\nfunction azimuthToBearing(angle) {\n  angle = angle % 360;\n  if (angle > 180) {\n    return angle - 360;\n  } else if (angle < -180) {\n    return angle + 360;\n  }\n  return angle;\n}\nfunction radiansToDegrees(radians) {\n  const normalisedRadians = radians % (2 * Math.PI);\n  return normalisedRadians * 180 / Math.PI;\n}\nfunction degreesToRadians(degrees) {\n  const normalisedDegrees = degrees % 360;\n  return normalisedDegrees * Math.PI / 180;\n}\nfunction convertLength(length, originalUnit = \"kilometers\", finalUnit = \"kilometers\") {\n  if (!(length >= 0)) {\n    throw new Error(\"length must be a positive number\");\n  }\n  return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nfunction convertArea(area, originalUnit = \"meters\", finalUnit = \"kilometers\") {\n  if (!(area >= 0)) {\n    throw new Error(\"area must be a positive number\");\n  }\n  const startFactor = areaFactors[originalUnit];\n  if (!startFactor) {\n    throw new Error(\"invalid original units\");\n  }\n  const finalFactor = areaFactors[finalUnit];\n  if (!finalFactor) {\n    throw new Error(\"invalid final units\");\n  }\n  return area / startFactor * finalFactor;\n}\nfunction isNumber(num) {\n  return !isNaN(num) && num !== null && !Array.isArray(num);\n}\nfunction isObject(input) {\n  return input !== null && typeof input === \"object\" && !Array.isArray(input);\n}\nfunction validateBBox(bbox) {\n  if (!bbox) {\n    throw new Error(\"bbox is required\");\n  }\n  if (!Array.isArray(bbox)) {\n    throw new Error(\"bbox must be an Array\");\n  }\n  if (bbox.length !== 4 && bbox.length !== 6) {\n    throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n  }\n  bbox.forEach((num) => {\n    if (!isNumber(num)) {\n      throw new Error(\"bbox must only contain numbers\");\n    }\n  });\n}\nfunction validateId(id) {\n  if (!id) {\n    throw new Error(\"id is required\");\n  }\n  if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n    throw new Error(\"id must be a number or a string\");\n  }\n}\nexport {\n  areaFactors,\n  azimuthToBearing,\n  bearingToAzimuth,\n  convertArea,\n  convertLength,\n  degreesToRadians,\n  earthRadius,\n  factors,\n  feature,\n  featureCollection,\n  geometry,\n  geometryCollection,\n  isNumber,\n  isObject,\n  lengthToDegrees,\n  lengthToRadians,\n  lineString,\n  lineStrings,\n  multiLineString,\n  multiPoint,\n  multiPolygon,\n  point,\n  points,\n  polygon,\n  polygons,\n  radiansToDegrees,\n  radiansToLength,\n  round,\n  validateBBox,\n  validateId\n};\n//# sourceMappingURL=index.js.map","// index.js\nimport { feature, point, lineString, isObject } from \"@turf/helpers\";\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n  if (geojson === null) return;\n  var j, k, l, geometry, stopG, coords, geometryMaybeCollection, wrapShrink = 0, coordIndex = 0, isGeometryCollection, type = geojson.type, isFeatureCollection = type === \"FeatureCollection\", isFeature = type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[featureIndex].geometry : isFeature ? geojson.geometry : geojson;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n      var multiFeatureIndex = 0;\n      var geometryIndex = 0;\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n      if (geometry === null) continue;\n      coords = geometry.coordinates;\n      var geomType = geometry.type;\n      wrapShrink = excludeWrapCoord && (geomType === \"Polygon\" || geomType === \"MultiPolygon\") ? 1 : 0;\n      switch (geomType) {\n        case null:\n          break;\n        case \"Point\":\n          if (callback(\n            coords,\n            coordIndex,\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n          coordIndex++;\n          multiFeatureIndex++;\n          break;\n        case \"LineString\":\n        case \"MultiPoint\":\n          for (j = 0; j < coords.length; j++) {\n            if (callback(\n              coords[j],\n              coordIndex,\n              featureIndex,\n              multiFeatureIndex,\n              geometryIndex\n            ) === false)\n              return false;\n            coordIndex++;\n            if (geomType === \"MultiPoint\") multiFeatureIndex++;\n          }\n          if (geomType === \"LineString\") multiFeatureIndex++;\n          break;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          for (j = 0; j < coords.length; j++) {\n            for (k = 0; k < coords[j].length - wrapShrink; k++) {\n              if (callback(\n                coords[j][k],\n                coordIndex,\n                featureIndex,\n                multiFeatureIndex,\n                geometryIndex\n              ) === false)\n                return false;\n              coordIndex++;\n            }\n            if (geomType === \"MultiLineString\") multiFeatureIndex++;\n            if (geomType === \"Polygon\") geometryIndex++;\n          }\n          if (geomType === \"Polygon\") multiFeatureIndex++;\n          break;\n        case \"MultiPolygon\":\n          for (j = 0; j < coords.length; j++) {\n            geometryIndex = 0;\n            for (k = 0; k < coords[j].length; k++) {\n              for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                if (callback(\n                  coords[j][k][l],\n                  coordIndex,\n                  featureIndex,\n                  multiFeatureIndex,\n                  geometryIndex\n                ) === false)\n                  return false;\n                coordIndex++;\n              }\n              geometryIndex++;\n            }\n            multiFeatureIndex++;\n          }\n          break;\n        case \"GeometryCollection\":\n          for (j = 0; j < geometry.geometries.length; j++)\n            if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false)\n              return false;\n          break;\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n  }\n}\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n  var previousValue = initialValue;\n  coordEach(\n    geojson,\n    function(currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (coordIndex === 0 && initialValue === void 0)\n        previousValue = currentCoord;\n      else\n        previousValue = callback(\n          previousValue,\n          currentCoord,\n          coordIndex,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    },\n    excludeWrapCoord\n  );\n  return previousValue;\n}\nfunction propEach(geojson, callback) {\n  var i;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      for (i = 0; i < geojson.features.length; i++) {\n        if (callback(geojson.features[i].properties, i) === false) break;\n      }\n      break;\n    case \"Feature\":\n      callback(geojson.properties, 0);\n      break;\n  }\n}\nfunction propReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  propEach(geojson, function(currentProperties, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentProperties;\n    else\n      previousValue = callback(previousValue, currentProperties, featureIndex);\n  });\n  return previousValue;\n}\nfunction featureEach(geojson, callback) {\n  if (geojson.type === \"Feature\") {\n    callback(geojson, 0);\n  } else if (geojson.type === \"FeatureCollection\") {\n    for (var i = 0; i < geojson.features.length; i++) {\n      if (callback(geojson.features[i], i) === false) break;\n    }\n  }\n}\nfunction featureReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  featureEach(geojson, function(currentFeature, featureIndex) {\n    if (featureIndex === 0 && initialValue === void 0)\n      previousValue = currentFeature;\n    else previousValue = callback(previousValue, currentFeature, featureIndex);\n  });\n  return previousValue;\n}\nfunction coordAll(geojson) {\n  var coords = [];\n  coordEach(geojson, function(coord) {\n    coords.push(coord);\n  });\n  return coords;\n}\nfunction geomEach(geojson, callback) {\n  var i, j, g, geometry, stopG, geometryMaybeCollection, isGeometryCollection, featureProperties, featureBBox, featureId, featureIndex = 0, isFeatureCollection = geojson.type === \"FeatureCollection\", isFeature = geojson.type === \"Feature\", stop = isFeatureCollection ? geojson.features.length : 1;\n  for (i = 0; i < stop; i++) {\n    geometryMaybeCollection = isFeatureCollection ? geojson.features[i].geometry : isFeature ? geojson.geometry : geojson;\n    featureProperties = isFeatureCollection ? geojson.features[i].properties : isFeature ? geojson.properties : {};\n    featureBBox = isFeatureCollection ? geojson.features[i].bbox : isFeature ? geojson.bbox : void 0;\n    featureId = isFeatureCollection ? geojson.features[i].id : isFeature ? geojson.id : void 0;\n    isGeometryCollection = geometryMaybeCollection ? geometryMaybeCollection.type === \"GeometryCollection\" : false;\n    stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n    for (g = 0; g < stopG; g++) {\n      geometry = isGeometryCollection ? geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n      if (geometry === null) {\n        if (callback(\n          null,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        ) === false)\n          return false;\n        continue;\n      }\n      switch (geometry.type) {\n        case \"Point\":\n        case \"LineString\":\n        case \"MultiPoint\":\n        case \"Polygon\":\n        case \"MultiLineString\":\n        case \"MultiPolygon\": {\n          if (callback(\n            geometry,\n            featureIndex,\n            featureProperties,\n            featureBBox,\n            featureId\n          ) === false)\n            return false;\n          break;\n        }\n        case \"GeometryCollection\": {\n          for (j = 0; j < geometry.geometries.length; j++) {\n            if (callback(\n              geometry.geometries[j],\n              featureIndex,\n              featureProperties,\n              featureBBox,\n              featureId\n            ) === false)\n              return false;\n          }\n          break;\n        }\n        default:\n          throw new Error(\"Unknown Geometry Type\");\n      }\n    }\n    featureIndex++;\n  }\n}\nfunction geomReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  geomEach(\n    geojson,\n    function(currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentGeometry;\n      else\n        previousValue = callback(\n          previousValue,\n          currentGeometry,\n          featureIndex,\n          featureProperties,\n          featureBBox,\n          featureId\n        );\n    }\n  );\n  return previousValue;\n}\nfunction flattenEach(geojson, callback) {\n  geomEach(geojson, function(geometry, featureIndex, properties, bbox, id) {\n    var type = geometry === null ? null : geometry.type;\n    switch (type) {\n      case null:\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n        if (callback(\n          feature(geometry, properties, { bbox, id }),\n          featureIndex,\n          0\n        ) === false)\n          return false;\n        return;\n    }\n    var geomType;\n    switch (type) {\n      case \"MultiPoint\":\n        geomType = \"Point\";\n        break;\n      case \"MultiLineString\":\n        geomType = \"LineString\";\n        break;\n      case \"MultiPolygon\":\n        geomType = \"Polygon\";\n        break;\n    }\n    for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n      var coordinate = geometry.coordinates[multiFeatureIndex];\n      var geom = {\n        type: geomType,\n        coordinates: coordinate\n      };\n      if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false)\n        return false;\n    }\n  });\n}\nfunction flattenReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  flattenEach(\n    geojson,\n    function(currentFeature, featureIndex, multiFeatureIndex) {\n      if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === void 0)\n        previousValue = currentFeature;\n      else\n        previousValue = callback(\n          previousValue,\n          currentFeature,\n          featureIndex,\n          multiFeatureIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction segmentEach(geojson, callback) {\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    var segmentIndex = 0;\n    if (!feature2.geometry) return;\n    var type = feature2.geometry.type;\n    if (type === \"Point\" || type === \"MultiPoint\") return;\n    var previousCoords;\n    var previousFeatureIndex = 0;\n    var previousMultiIndex = 0;\n    var prevGeomIndex = 0;\n    if (coordEach(\n      feature2,\n      function(currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n        if (previousCoords === void 0 || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n          previousCoords = currentCoord;\n          previousFeatureIndex = featureIndex;\n          previousMultiIndex = multiPartIndexCoord;\n          prevGeomIndex = geometryIndex;\n          segmentIndex = 0;\n          return;\n        }\n        var currentSegment = lineString(\n          [previousCoords, currentCoord],\n          feature2.properties\n        );\n        if (callback(\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        ) === false)\n          return false;\n        segmentIndex++;\n        previousCoords = currentCoord;\n      }\n    ) === false)\n      return false;\n  });\n}\nfunction segmentReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  var started = false;\n  segmentEach(\n    geojson,\n    function(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n      if (started === false && initialValue === void 0)\n        previousValue = currentSegment;\n      else\n        previousValue = callback(\n          previousValue,\n          currentSegment,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex,\n          segmentIndex\n        );\n      started = true;\n    }\n  );\n  return previousValue;\n}\nfunction lineEach(geojson, callback) {\n  if (!geojson) throw new Error(\"geojson is required\");\n  flattenEach(geojson, function(feature2, featureIndex, multiFeatureIndex) {\n    if (feature2.geometry === null) return;\n    var type = feature2.geometry.type;\n    var coords = feature2.geometry.coordinates;\n    switch (type) {\n      case \"LineString\":\n        if (callback(feature2, featureIndex, multiFeatureIndex, 0, 0) === false)\n          return false;\n        break;\n      case \"Polygon\":\n        for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n          if (callback(\n            lineString(coords[geometryIndex], feature2.properties),\n            featureIndex,\n            multiFeatureIndex,\n            geometryIndex\n          ) === false)\n            return false;\n        }\n        break;\n    }\n  });\n}\nfunction lineReduce(geojson, callback, initialValue) {\n  var previousValue = initialValue;\n  lineEach(\n    geojson,\n    function(currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n      if (featureIndex === 0 && initialValue === void 0)\n        previousValue = currentLine;\n      else\n        previousValue = callback(\n          previousValue,\n          currentLine,\n          featureIndex,\n          multiFeatureIndex,\n          geometryIndex\n        );\n    }\n  );\n  return previousValue;\n}\nfunction findSegment(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var segmentIndex = options.segmentIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n      if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n      return lineString(\n        [coords[segmentIndex], coords[segmentIndex + 1]],\n        properties,\n        options\n      );\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[geometryIndex][segmentIndex],\n          coords[geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][segmentIndex],\n          coords[multiFeatureIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (segmentIndex < 0)\n        segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n      return lineString(\n        [\n          coords[multiFeatureIndex][geometryIndex][segmentIndex],\n          coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]\n        ],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nfunction findPoint(geojson, options) {\n  options = options || {};\n  if (!isObject(options)) throw new Error(\"options is invalid\");\n  var featureIndex = options.featureIndex || 0;\n  var multiFeatureIndex = options.multiFeatureIndex || 0;\n  var geometryIndex = options.geometryIndex || 0;\n  var coordIndex = options.coordIndex || 0;\n  var properties = options.properties;\n  var geometry;\n  switch (geojson.type) {\n    case \"FeatureCollection\":\n      if (featureIndex < 0)\n        featureIndex = geojson.features.length + featureIndex;\n      properties = properties || geojson.features[featureIndex].properties;\n      geometry = geojson.features[featureIndex].geometry;\n      break;\n    case \"Feature\":\n      properties = properties || geojson.properties;\n      geometry = geojson.geometry;\n      break;\n    case \"Point\":\n    case \"MultiPoint\":\n      return null;\n    case \"LineString\":\n    case \"Polygon\":\n    case \"MultiLineString\":\n    case \"MultiPolygon\":\n      geometry = geojson;\n      break;\n    default:\n      throw new Error(\"geojson is invalid\");\n  }\n  if (geometry === null) return null;\n  var coords = geometry.coordinates;\n  switch (geometry.type) {\n    case \"Point\":\n      return point(coords, properties, options);\n    case \"MultiPoint\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      return point(coords[multiFeatureIndex], properties, options);\n    case \"LineString\":\n      if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n      return point(coords[coordIndex], properties, options);\n    case \"Polygon\":\n      if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[geometryIndex].length + coordIndex;\n      return point(coords[geometryIndex][coordIndex], properties, options);\n    case \"MultiLineString\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex].length + coordIndex;\n      return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case \"MultiPolygon\":\n      if (multiFeatureIndex < 0)\n        multiFeatureIndex = coords.length + multiFeatureIndex;\n      if (geometryIndex < 0)\n        geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n      if (coordIndex < 0)\n        coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n      return point(\n        coords[multiFeatureIndex][geometryIndex][coordIndex],\n        properties,\n        options\n      );\n  }\n  throw new Error(\"geojson is invalid\");\n}\nexport {\n  coordAll,\n  coordEach,\n  coordReduce,\n  featureEach,\n  featureReduce,\n  findPoint,\n  findSegment,\n  flattenEach,\n  flattenReduce,\n  geomEach,\n  geomReduce,\n  lineEach,\n  lineReduce,\n  propEach,\n  propReduce,\n  segmentEach,\n  segmentReduce\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { earthRadius } from \"@turf/helpers\";\nimport { geomReduce } from \"@turf/meta\";\nfunction area(geojson) {\n  return geomReduce(\n    geojson,\n    (value, geom) => {\n      return value + calculateArea(geom);\n    },\n    0\n  );\n}\nfunction calculateArea(geom) {\n  let total = 0;\n  let i;\n  switch (geom.type) {\n    case \"Polygon\":\n      return polygonArea(geom.coordinates);\n    case \"MultiPolygon\":\n      for (i = 0; i < geom.coordinates.length; i++) {\n        total += polygonArea(geom.coordinates[i]);\n      }\n      return total;\n    case \"Point\":\n    case \"MultiPoint\":\n    case \"LineString\":\n    case \"MultiLineString\":\n      return 0;\n  }\n  return 0;\n}\nfunction polygonArea(coords) {\n  let total = 0;\n  if (coords && coords.length > 0) {\n    total += Math.abs(ringArea(coords[0]));\n    for (let i = 1; i < coords.length; i++) {\n      total -= Math.abs(ringArea(coords[i]));\n    }\n  }\n  return total;\n}\nvar FACTOR = earthRadius * earthRadius / 2;\nvar PI_OVER_180 = Math.PI / 180;\nfunction ringArea(coords) {\n  const coordsLength = coords.length - 1;\n  if (coordsLength <= 2) return 0;\n  let total = 0;\n  let i = 0;\n  while (i < coordsLength) {\n    const lower = coords[i];\n    const middle = coords[i + 1 === coordsLength ? 0 : i + 1];\n    const upper = coords[i + 2 >= coordsLength ? (i + 2) % coordsLength : i + 2];\n    const lowerX = lower[0] * PI_OVER_180;\n    const middleY = middle[1] * PI_OVER_180;\n    const upperX = upper[0] * PI_OVER_180;\n    total += (upperX - lowerX) * Math.sin(middleY);\n    i++;\n  }\n  return total * FACTOR;\n}\nvar turf_area_default = area;\nexport {\n  area,\n  turf_area_default as default\n};\n//# sourceMappingURL=index.js.map","import type { AreaUnit, forceAreaUnitType, imperialAreaUnit, metricAreaUnit } from '../interfaces';\n\n/**\n * convert area unit to metric or imperial\n * @param value area value in m2\n * @param unit area unit either metric or imperial\n * @param forceUnit Default is `auto`. If `auto` is set, unit is converted depending on the value and selection of area unit. If a specific unit is specified, it returns the value always the same. If a selected unit is not the same type of unit either metric of imperial, it will be ignored, and `auto` will be applied.\n * @returns result object with area and unit properties adter unit conversion\n */\nexport const convertAreaUnit = (\n\tvalue: number,\n\tunit: AreaUnit,\n\tforceUnit: forceAreaUnitType = 'auto'\n) => {\n\t// Define metric and imperial units\n\tconst metricUnits = ['m2', 'km2', 'a', 'ha'];\n\tconst imperialUnits = ['ft2', 'yd2', 'acre', 'mi2'];\n\n\t// Check if forceUnit matches the selected unit type, otherwise treat as 'auto'\n\tlet effectiveForceUnit = forceUnit;\n\tif (forceUnit !== 'auto') {\n\t\tconst isMetricForceUnit = metricUnits.includes(forceUnit);\n\t\tconst isImperialForceUnit = imperialUnits.includes(forceUnit);\n\n\t\tif (\n\t\t\t(unit === 'metric' && !isMetricForceUnit) ||\n\t\t\t(unit === 'imperial' && !isImperialForceUnit)\n\t\t) {\n\t\t\teffectiveForceUnit = 'auto';\n\t\t}\n\t}\n\n\tif (unit === 'metric') {\n\t\tif (effectiveForceUnit !== 'auto') {\n\t\t\treturn convertMetricUnit(value, effectiveForceUnit as metricAreaUnit);\n\t\t} else {\n\t\t\tif (value >= 1000000) {\n\t\t\t\treturn convertMetricUnit(value, 'km2');\n\t\t\t} else if (value >= 10000) {\n\t\t\t\treturn convertMetricUnit(value, 'ha');\n\t\t\t} else if (value >= 100) {\n\t\t\t\treturn convertMetricUnit(value, 'a');\n\t\t\t} else {\n\t\t\t\treturn convertMetricUnit(value, 'm2');\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (effectiveForceUnit !== 'auto') {\n\t\t\treturn convertImperialUnit(value, effectiveForceUnit as imperialAreaUnit);\n\t\t} else {\n\t\t\tif (value >= 2589988.11) {\n\t\t\t\treturn convertImperialUnit(value, 'mi2');\n\t\t\t} else if (value >= 4046.856) {\n\t\t\t\treturn convertImperialUnit(value, 'acre');\n\t\t\t} else if (value >= 0.83612736) {\n\t\t\t\treturn convertImperialUnit(value, 'yd2');\n\t\t\t} else {\n\t\t\t\treturn convertImperialUnit(value, 'ft2');\n\t\t\t}\n\t\t}\n\t}\n};\n\nconst convertMetricUnit = (value: number, unit: metricAreaUnit) => {\n\tlet outputArea = value;\n\tlet outputUnit = 'm²';\n\tswitch (unit) {\n\t\tcase 'm2':\n\t\t\toutputArea = value;\n\t\t\toutputUnit = 'm²';\n\t\t\tbreak;\n\t\tcase 'a':\n\t\t\t// 1a = 100 m²\n\t\t\toutputArea = value / 100;\n\t\t\toutputUnit = 'a';\n\t\t\tbreak;\n\t\tcase 'ha':\n\t\t\t// 1 ha = 10,000 m²\n\t\t\toutputArea = value / 10000;\n\t\t\toutputUnit = 'ha';\n\t\t\tbreak;\n\t\tcase 'km2':\n\t\t\t// 1 km² = 1,000,000 m²\n\t\t\toutputArea = value / 1000000;\n\t\t\toutputUnit = 'km²';\n\t\t\tbreak;\n\t}\n\treturn {\n\t\tarea: outputArea,\n\t\tunit: outputUnit\n\t};\n};\n\nconst convertImperialUnit = (value: number, unit: imperialAreaUnit) => {\n\tlet outputArea = value / 2589988.11;\n\tlet outputUnit = 'm²';\n\tswitch (unit) {\n\t\tcase 'ft2':\n\t\t\t// 1 ft² = 0.09290304 m²\n\t\t\toutputArea = value / 0.09290304;\n\t\t\toutputUnit = 'ft²';\n\t\t\tbreak;\n\t\tcase 'yd2':\n\t\t\t// 1 yd² = 0.83612736 m²\n\t\t\toutputArea = value / 0.83612736;\n\t\t\toutputUnit = 'yd²';\n\t\t\tbreak;\n\t\tcase 'acre':\n\t\t\t// 1 acre = 4,046.856 m²\n\t\t\toutputArea = value / 4046.856;\n\t\t\toutputUnit = 'acre';\n\t\t\tbreak;\n\t\tcase 'mi2':\n\t\t\t// 1 mi² = 2,589,988.11 m²\n\t\t\toutputArea = value / 2589988.11;\n\t\t\toutputUnit = 'mi²';\n\t\t\tbreak;\n\t}\n\treturn {\n\t\tarea: outputArea,\n\t\tunit: outputUnit\n\t};\n};\n","import type { AreaUnit, forceAreaUnitType } from '../interfaces/AreaUnit';\nimport area from '@turf/area';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\nimport { convertAreaUnit } from './convertAreaUnit';\n\n/**\n * Calculate area from polygon feature\n * @param feature Polygon GeoJSON feature\n * @param areaUnit Area unit\n * @param areaPrecision Precision of area value\n * @param forceUnit Default is `auto`. If `auto` is set, unit is converted depending on the value and selection of area unit. If a specific unit is specified, it returns the value always the same. If a selected unit is not the same type of unit either metric of imperial, it will be ignored, and `auto` will be applied.\n * @returns  The returning feature will contain `area`,`unit` properties.\n */\nexport const calcArea = (\n\tfeature: GeoJSONStoreFeatures,\n\tareaUnit: AreaUnit,\n\tareaPrecision: number,\n\tforceUnit?: forceAreaUnitType\n) => {\n\tif (feature.geometry.type !== 'Polygon') return feature;\n\t// caculate area in m2 by using turf/area\n\tconst result = area(feature.geometry);\n\n\tconst converted = convertAreaUnit(result, areaUnit, forceUnit);\n\tconverted.area = parseFloat(converted.area.toFixed(areaPrecision));\n\n\tfeature.properties.area = converted.area;\n\tfeature.properties.unit = converted.unit;\n\n\treturn feature;\n};\n","// index.ts\nimport { isNumber } from \"@turf/helpers\";\nfunction getCoord(coord) {\n  if (!coord) {\n    throw new Error(\"coord is required\");\n  }\n  if (!Array.isArray(coord)) {\n    if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\n      return [...coord.geometry.coordinates];\n    }\n    if (coord.type === \"Point\") {\n      return [...coord.coordinates];\n    }\n  }\n  if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\n    return [...coord];\n  }\n  throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\nfunction getCoords(coords) {\n  if (Array.isArray(coords)) {\n    return coords;\n  }\n  if (coords.type === \"Feature\") {\n    if (coords.geometry !== null) {\n      return coords.geometry.coordinates;\n    }\n  } else {\n    if (coords.coordinates) {\n      return coords.coordinates;\n    }\n  }\n  throw new Error(\n    \"coords must be GeoJSON Feature, Geometry Object or an Array\"\n  );\n}\nfunction containsNumber(coordinates) {\n  if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n    return true;\n  }\n  if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n    return containsNumber(coordinates[0]);\n  }\n  throw new Error(\"coordinates must only contain numbers\");\n}\nfunction geojsonType(value, type, name) {\n  if (!type || !name) {\n    throw new Error(\"type and name required\");\n  }\n  if (!value || value.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type\n    );\n  }\n}\nfunction featureOf(feature, type, name) {\n  if (!feature) {\n    throw new Error(\"No feature passed\");\n  }\n  if (!name) {\n    throw new Error(\".featureOf() requires a name\");\n  }\n  if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n    throw new Error(\n      \"Invalid input to \" + name + \", Feature with geometry required\"\n    );\n  }\n  if (!feature.geometry || feature.geometry.type !== type) {\n    throw new Error(\n      \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n    );\n  }\n}\nfunction collectionOf(featureCollection, type, name) {\n  if (!featureCollection) {\n    throw new Error(\"No featureCollection passed\");\n  }\n  if (!name) {\n    throw new Error(\".collectionOf() requires a name\");\n  }\n  if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n    throw new Error(\n      \"Invalid input to \" + name + \", FeatureCollection required\"\n    );\n  }\n  for (const feature of featureCollection.features) {\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n      throw new Error(\n        \"Invalid input to \" + name + \", Feature with geometry required\"\n      );\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n      throw new Error(\n        \"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type\n      );\n    }\n  }\n}\nfunction getGeom(geojson) {\n  if (geojson.type === \"Feature\") {\n    return geojson.geometry;\n  }\n  return geojson;\n}\nfunction getType(geojson, _name) {\n  if (geojson.type === \"FeatureCollection\") {\n    return \"FeatureCollection\";\n  }\n  if (geojson.type === \"GeometryCollection\") {\n    return \"GeometryCollection\";\n  }\n  if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n    return geojson.geometry.type;\n  }\n  return geojson.type;\n}\nexport {\n  collectionOf,\n  containsNumber,\n  featureOf,\n  geojsonType,\n  getCoord,\n  getCoords,\n  getGeom,\n  getType\n};\n//# sourceMappingURL=index.js.map","// index.ts\nimport { getCoord } from \"@turf/invariant\";\nimport { radiansToLength, degreesToRadians } from \"@turf/helpers\";\nfunction distance(from, to, options = {}) {\n  var coordinates1 = getCoord(from);\n  var coordinates2 = getCoord(to);\n  var dLat = degreesToRadians(coordinates2[1] - coordinates1[1]);\n  var dLon = degreesToRadians(coordinates2[0] - coordinates1[0]);\n  var lat1 = degreesToRadians(coordinates1[1]);\n  var lat2 = degreesToRadians(coordinates2[1]);\n  var a = Math.pow(Math.sin(dLat / 2), 2) + Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n  return radiansToLength(\n    2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n    options.units\n  );\n}\nvar turf_distance_default = distance;\nexport {\n  turf_distance_default as default,\n  distance\n};\n//# sourceMappingURL=index.js.map","import type { DistanceUnit, DistanceUnitShortName, forceDistanceUnitType } from '../interfaces';\n\n/**\n * Convert distance according to the distance unit given.\n *\n * Converts a distance in kilometers or miles to the appropriate unit based on the `unit` and `forceUnit` parameters.\n * - For `kilometers`, it converts to km, m, or cm depending on the value and `forceUnit`.\n * - For `miles`, it converts to mi, ft, or in depending on the value and `forceUnit`.\n * - For `degrees` or `radians`, it returns the value unchanged with the corresponding unit symbol.\n *\n * @param value - The distance in the unit specified by the `unit` parameter.\n * @param unit - The unit of the input distance type: \"degrees\", \"radians\", \"miles\", or \"kilometers\" (default is 'kilometers').\n * @param forceUnit - Default is `auto`. If `auto` is set, the unit is converted automatically based on the value. If a specific unit is set, the value is converted to that unit.\n * @returns The converted value and unit.\n */\nexport const convertDistance = (\n\tvalue: number,\n\tunit: DistanceUnit = 'kilometers',\n\tforceUnit: forceDistanceUnitType = 'auto'\n): { distance: number; unit: DistanceUnitShortName } => {\n\t// Define metric and imperial units\n\tconst metricUnits = ['cm', 'm', 'km'];\n\tconst imperialUnits = ['in', 'ft', 'mi'];\n\n\t// Check if forceUnit matches the selected unit type, otherwise treat as 'auto'\n\tlet effectiveForceUnit = forceUnit;\n\tif (forceUnit !== 'auto') {\n\t\tconst isMetricForceUnit = metricUnits.includes(forceUnit);\n\t\tconst isImperialForceUnit = imperialUnits.includes(forceUnit);\n\n\t\tif (\n\t\t\t(unit === 'kilometers' && !isMetricForceUnit) ||\n\t\t\t(unit === 'miles' && !isImperialForceUnit)\n\t\t) {\n\t\t\teffectiveForceUnit = 'auto';\n\t\t}\n\t}\n\n\tlet result: { distance: number; unit: DistanceUnitShortName } = {\n\t\tdistance: value,\n\t\tunit: 'km'\n\t};\n\n\tif (unit === 'kilometers') {\n\t\tresult = convertMetricUnit(value, effectiveForceUnit);\n\t} else if (unit === 'degrees') {\n\t\tresult.unit = '°';\n\t} else if (unit === 'miles') {\n\t\tresult = convertImperialUnit(value, effectiveForceUnit);\n\t} else if (unit === 'radians') {\n\t\tresult.unit = 'rad';\n\t}\n\t// Default case: return kilometers if unit is not recognized\n\treturn result;\n};\n\nconst convertMetricUnit = (value: number, unit: forceDistanceUnitType) => {\n\tlet result: { distance: number; unit: DistanceUnitShortName } = {\n\t\tdistance: value,\n\t\tunit: 'km'\n\t};\n\t// Convert based on the specified or auto-detected unit\n\tswitch (unit) {\n\t\tcase 'km':\n\t\t\tresult.distance = value;\n\t\t\tresult.unit = 'km';\n\t\t\tbreak;\n\t\tcase 'm':\n\t\t\tresult.distance = value * 1000;\n\t\t\tresult.unit = 'm';\n\t\t\tbreak;\n\t\tcase 'cm':\n\t\t\tresult.distance = value * 100000;\n\t\t\tresult.unit = 'cm';\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\t\t// if auto, determine the best unit based on the value\n\t\t\tif (value >= 1) {\n\t\t\t\tresult = convertMetricUnit(value, 'km');\n\t\t\t} else if (value * 1000 >= 1) {\n\t\t\t\tresult = convertMetricUnit(value, 'm');\n\t\t\t} else {\n\t\t\t\tresult = convertMetricUnit(value, 'cm');\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// km as a fallback\n\t\t\tresult.distance = value;\n\t\t\tresult.unit = 'km';\n\t\t\tbreak;\n\t}\n\treturn result;\n};\n\nconst convertImperialUnit = (value: number, unit: forceDistanceUnitType) => {\n\tlet result: { distance: number; unit: DistanceUnitShortName } = {\n\t\tdistance: value,\n\t\tunit: 'mi'\n\t};\n\t// Convert based on the specified or auto-detected unit\n\tswitch (unit) {\n\t\tcase 'mi':\n\t\t\tresult.distance = value;\n\t\t\tresult.unit = 'mi';\n\t\t\tbreak;\n\t\tcase 'ft':\n\t\t\tresult.distance = value * 5280;\n\t\t\tresult.unit = 'ft';\n\t\t\tbreak;\n\t\tcase 'in':\n\t\t\tresult.distance = value * 63360;\n\t\t\tresult.unit = 'in';\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\t\t// if auto, determine the best unit based on the value\n\t\t\tif (value >= 1) {\n\t\t\t\tresult = convertImperialUnit(value, 'mi');\n\t\t\t} else if (value * 5280 >= 1) {\n\t\t\t\tresult = convertImperialUnit(value, 'ft');\n\t\t\t} else {\n\t\t\t\tresult = convertImperialUnit(value, 'in');\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t// mi as a fallback\n\t\t\tresult.distance = value;\n\t\t\tresult.unit = 'mi';\n\t\t\tbreak;\n\t}\n\treturn result;\n};\n","import distance from '@turf/distance';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\nimport type { LngLatLike, Map } from 'maplibre-gl';\nimport type { DistanceUnit, forceDistanceUnitType, TerrainSource } from '../interfaces';\nimport { convertDistance } from './convertDistance';\n\n/**\n * Caclulate distance for each segment on a given feature\n * @param feature LineString GeoJSON feature\n * @param distanceUnit Distance unit\n * @param distancePrecision Precision of distance\n * @param forceUnit Default is `auto`. If `auto` is set, unit is converted depending on the value in metric.\n * @param map Maplibre map instance\n * @param computeElevation Compute elevation for each segment\n * @param terrainSource Terrain source for elevation calculation. If terrainSource is undefined, going to to query elevation from maplibre terrain.\n * @returns The returning feature will contain `segments`, `distance`, `unit` properties. `segments` will have multiple point features.\n */\nexport const calcDistance = (\n\tfeature: GeoJSONStoreFeatures,\n\tdistanceUnit: DistanceUnit,\n\tdistancePrecision: number,\n\tforceUnit?: forceDistanceUnitType,\n\tmap?: Map,\n\tcomputeElevation?: boolean,\n\tterrainSource?: TerrainSource\n) => {\n\tif (feature.geometry.type !== 'LineString') return feature;\n\tconst coordinates: number[][] = (feature as GeoJSONStoreFeatures).geometry\n\t\t.coordinates as number[][];\n\n\t// calculate distance for each segment of LineString feature\n\tlet totalDistance = 0;\n\tconst segments: GeoJSONStoreFeatures[] = [];\n\tfor (let i = 0; i < coordinates.length - 1; i++) {\n\t\tconst start = coordinates[i];\n\t\tconst end = coordinates[i + 1];\n\t\tconst result = distance(start, end, { units: distanceUnit });\n\t\ttotalDistance += result;\n\n\t\t// segment\n\t\tconst segment = JSON.parse(JSON.stringify(feature));\n\t\tsegment.id = `${segment.id}-${i}`;\n\t\tsegment.geometry.coordinates = [start, end];\n\t\tsegment.properties.originalId = feature.id;\n\t\tsegment.properties.distance = result;\n\t\tsegment.properties.total = totalDistance;\n\n\t\tif (computeElevation === true && terrainSource === undefined) {\n\t\t\tconst elevation_start = map?.queryTerrainElevation(start as LngLatLike);\n\t\t\tif (elevation_start) {\n\t\t\t\tsegment.properties.elevation_start = elevation_start;\n\t\t\t}\n\n\t\t\tconst elevation_end = map?.queryTerrainElevation(end as LngLatLike);\n\t\t\tif (elevation_end) {\n\t\t\t\tsegment.properties.elevation_end = elevation_end;\n\t\t\t}\n\t\t}\n\n\t\tsegments.push(segment);\n\t}\n\n\tfeature.properties.distance = segments[segments.length - 1].properties.total;\n\tfeature.properties.segments = JSON.parse(JSON.stringify(segments));\n\n\t// convert distance unit\n\tconst convertedDistance = convertDistance(\n\t\tfeature.properties.distance as number,\n\t\tdistanceUnit,\n\t\tforceUnit\n\t);\n\tfeature.properties.distance = convertedDistance.distance;\n\tfeature.properties.unit = convertedDistance.unit;\n\n\t(feature.properties.segments as unknown as GeoJSONStoreFeatures[]).forEach(\n\t\t(segment: GeoJSONStoreFeatures) => {\n\t\t\tconst segmentDistance = convertDistance(\n\t\t\t\tsegment.properties.distance as number,\n\t\t\t\tdistanceUnit,\n\t\t\t\tforceUnit\n\t\t\t);\n\t\t\tsegment.properties.distance = segmentDistance.distance;\n\t\t\tsegment.properties.unit = segmentDistance.unit;\n\n\t\t\tconst segmentTotalDistance = convertDistance(\n\t\t\t\tsegment.properties.total as number,\n\t\t\t\tdistanceUnit,\n\t\t\t\tforceUnit\n\t\t\t);\n\t\t\tsegment.properties.total = segmentTotalDistance.distance;\n\t\t\tsegment.properties.totalUnit = segmentTotalDistance.unit;\n\t\t}\n\t);\n\n\t//  round distance precision according to the config.\n\tfeature.properties.distance = parseFloat(\n\t\t(feature.properties.distance as number).toFixed(distancePrecision)\n\t);\n\n\t(feature.properties.segments as unknown as GeoJSONStoreFeatures[]).forEach(\n\t\t(segment: GeoJSONStoreFeatures) => {\n\t\t\tsegment.properties.distance = parseFloat(\n\t\t\t\t(segment.properties.distance as number).toFixed(distancePrecision)\n\t\t\t);\n\t\t\tsegment.properties.total = parseFloat(\n\t\t\t\t(segment.properties.total as number).toFixed(distancePrecision)\n\t\t\t);\n\t\t}\n\t);\n\n\treturn feature;\n};\n","/**\n * Capitalzie string value\n * @param value string value\n * @returns string\n */\nexport const capitalize = (value: string) => {\n\treturn value.charAt(0).toUpperCase() + value.slice(1);\n};\n","import { defaultMeasureControlOptions, defaultValhallaControlOptions } from '../constants';\nimport type { StyleSpecification } from 'maplibre-gl';\n\nexport const TERRADRAW_SOURCE_IDS = [\n\t'{prefix}-point',\n\t'{prefix}-point-lower',\n\t'{prefix}-linestring',\n\t'{prefix}-polygon',\n\t'{prefix}-polygon-outline'\n];\nexport const TERRADRAW_MEASURE_SOURCE_IDS = [\n\t...TERRADRAW_SOURCE_IDS,\n\tdefaultMeasureControlOptions.polygonLayerSpec?.source as string,\n\tdefaultMeasureControlOptions.lineLayerLabelSpec?.source as string,\n\tdefaultMeasureControlOptions.pointLayerLabelSpec?.source as string\n];\nexport const TERRADRAW_VALHALLA_SOURCE_IDS = [\n\t...TERRADRAW_SOURCE_IDS,\n\tdefaultValhallaControlOptions.routingLineLayerNodeLabelSpec?.source as string,\n\tdefaultValhallaControlOptions.routingLineLayerNodeSpec?.source as string,\n\tdefaultValhallaControlOptions.isochronePolygonLayerSpec?.source as string,\n\tdefaultValhallaControlOptions.isochroneLineLayerSpec?.source as string,\n\tdefaultValhallaControlOptions.isochroneLabelLayerSpec?.source as string\n];\n\n/**\n * clean maplibre style to filter only for terradraw related layers or without them.\n * If options are not set, returns original style given to the function.\n *\n * This can be useful incase users only want to get terradraw related layers or without it.\n *\n * Usage:\n * `cleanMaplibreStyle(map.getStyle, { excludeTerraDrawLayers: true})`\n * `cleanMaplibreStyle(map.getStyle, { onlyTerraDrawLayers: true})`\n *\n * @param style maplibre style spec\n * @param options.excludeTerraDrawLayers return maplibre style without terradraw layers and sources\n * @param options.onlyTerraDrawLayers return maplibre style with only terradraw layers and sources\n * @param sourceIds terradraw related source IDs (internally used). Use TERRADRAW_SOURCE_IDS or TERRADRAW_MEASURE_SOURCE_IDS\n * @param prefixId prefix to use for source IDs, default is 'td'. {prefix} will be replaced with this prefixId\n * @returns maplibre style spec\n */\nexport const cleanMaplibreStyle = (\n\tstyle: StyleSpecification,\n\toptions?: { excludeTerraDrawLayers?: boolean; onlyTerraDrawLayers?: boolean },\n\tsourceIds = TERRADRAW_SOURCE_IDS,\n\tprefixId = 'td'\n) => {\n\tsourceIds = sourceIds.map((id) => id.replace('{prefix}', prefixId));\n\n\tconst cloned: StyleSpecification = JSON.parse(JSON.stringify(style));\n\tif (options) {\n\t\tif (options.onlyTerraDrawLayers === true) {\n\t\t\tcloned.layers = cloned.layers.filter((l) => {\n\t\t\t\treturn 'source' in l && sourceIds.includes(l.source);\n\t\t\t});\n\t\t\tObject.keys(cloned.sources).forEach((key) => {\n\t\t\t\tif (!sourceIds.includes(key)) {\n\t\t\t\t\tdelete cloned.sources[key];\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (options.excludeTerraDrawLayers === true) {\n\t\t\tcloned.layers = cloned.layers.filter((l) => {\n\t\t\t\treturn ('source' in l && !sourceIds.includes(l.source)) || l.type === 'background';\n\t\t\t});\n\t\t\tObject.keys(cloned.sources).forEach((key) => {\n\t\t\t\tif (sourceIds.includes(key)) {\n\t\t\t\t\tdelete cloned.sources[key];\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\treturn cloned;\n};\n","/**\n * debounce\n * @param callback callback function\n * @param delay millisecond to delay\n */\nexport const debounce = <T extends (...args: Parameters<T>) => unknown>(\n\tcallback: T,\n\tdelay = 250\n): ((...args: Parameters<T>) => void) => {\n\tlet timeoutId: number;\n\treturn (...args) => {\n\t\tclearTimeout(timeoutId);\n\t\ttimeoutId = setTimeout(() => callback(...args), delay) as unknown as number;\n\t};\n};\n","/**\n * Cache interface\n */\nexport interface CacheInterface<T> {\n\t/**\n\t * Get a value from the cache. If the item has expired, it will be removed from the cache.\n\t */\n\tget(key: string): T | undefined;\n\t/**\n\t * set a value in the cache.\n\t * If the cache size exceeds maxSize, the oldest item will be removed (FIFO).\n\t * If ttl is set, the item will expire after ttl milliseconds.\n\t */\n\tset(key: string, value: T): void;\n\t/**\n\t * Check if a key exists in the cache.\n\t */\n\thas(key: string): boolean;\n\t/**\n\t * Delete a key from the cache.\n\t */\n\tdelete(key: string): boolean;\n\t/**\n\t * Clear the cache.\n\t */\n\tclear(): void;\n\t/**\n\t * Get the current size of the cache.\n\t */\n\tsize: number;\n}\n\n/**\n * Memory cache class\n */\nexport class MemoryCache<T> implements CacheInterface<T> {\n\tprivate cache = new Map<string, { value: T; expiry?: number }>();\n\tprivate maxSize: number;\n\tprivate ttl?: number;\n\n\tconstructor(maxSize = 1000, ttl?: number) {\n\t\tthis.maxSize = maxSize;\n\t\tthis.ttl = ttl;\n\t}\n\n\t/**\n\t * Get a value from the cache. If the item has expired, it will be removed from the cache.\n\t */\n\tget(key: string): T | undefined {\n\t\tconst item = this.cache.get(key);\n\t\tif (!item) return undefined;\n\n\t\tif (item.expiry && Date.now() > item.expiry) {\n\t\t\tthis.cache.delete(key);\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn item.value;\n\t}\n\n\t/**\n\t * set a value in the cache.\n\t * If the cache size exceeds maxSize, the oldest item will be removed (FIFO).\n\t * If ttl is set, the item will expire after ttl milliseconds.\n\t */\n\tset(key: string, value: T): void {\n\t\tif (this.maxSize === 0) return;\n\t\tif (this.cache.size >= this.maxSize) {\n\t\t\tconst firstKey = this.cache.keys().next().value;\n\t\t\tif (firstKey) this.cache.delete(firstKey);\n\t\t}\n\n\t\tconst expiry = this.ttl ? Date.now() + this.ttl : undefined;\n\t\tthis.cache.set(key, { value, expiry });\n\t}\n\n\t/**\n\t * Check if a key exists in the cache.\n\t */\n\thas(key: string): boolean {\n\t\treturn this.get(key) !== undefined;\n\t}\n\n\t/**\n\t * Delete a key from the cache.\n\t */\n\tdelete(key: string): boolean {\n\t\treturn this.cache.delete(key);\n\t}\n\n\t/**\n\t * Clear the cache.\n\t */\n\tclear(): void {\n\t\tthis.cache.clear();\n\t}\n\n\t/**\n\t * Get the current size of the cache.\n\t */\n\tget size(): number {\n\t\treturn this.cache.size;\n\t}\n\n\t/**\n\t * Cleanup expired items from the cache.\n\t */\n\tcleanupExpired(): void {\n\t\tif (!this.ttl) return;\n\n\t\tconst now = Date.now();\n\t\tfor (const [key, item] of this.cache.entries()) {\n\t\t\tif (item.expiry && now > item.expiry) {\n\t\t\t\tthis.cache.delete(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get cache statistics.\n\t */\n\tgetStats(): {\n\t\tsize: number;\n\t\tmaxSize: number;\n\t\tttl?: number;\n\t\thitRate?: number;\n\t} {\n\t\treturn {\n\t\t\tsize: this.size,\n\t\t\tmaxSize: this.maxSize,\n\t\t\tttl: this.ttl\n\t\t};\n\t}\n}\n","/**\n * Create a modal dialog for displaying titile, close button and content.\n */\nexport class ModalDialog {\n\tprivate className: string;\n\tprivate dialog: HTMLDialogElement | undefined;\n\tprivate title: string;\n\n\t/**\n\t * Constructor\n\t * @param className top level CSS class name for the dialog\n\t * @param title titile of the dialog\n\t */\n\tconstructor(className: string, title: string) {\n\t\tthis.className = className;\n\t\tthis.title = title;\n\t}\n\n\t/**\n\t * Create a modal dialog content and return content element.\n\t * @param parentElement parent element to append the dialog\n\t * @param addConttent callback function to add content to the dialog. The callback receives a content element as an argument and must return the modified content element.\n\t * @example\n\t * ```ts\n\t * const dialog = new ModalDialog('my-dialog', 'My Dialog');\n\t * dialog.create(document.body, (content) => {\n\t *   const p = document.createElement('p');\n\t *   p.textContent = 'This is my dialog content.';\n\t *   content.appendChild(p);\n\t *   return content;\n\t * });\n\t * dialog.open();\n\t * ```\n\t * @returns HTMLDialogElement\n\t */\n\tpublic create(\n\t\tparentElement: HTMLElement,\n\t\taddConttent: (contentElement: HTMLDivElement) => HTMLDivElement\n\t) {\n\t\tconst existingDialog = document.getElementsByClassName(this.className);\n\t\tif (existingDialog.length > 0) {\n\t\t\tArray.from(existingDialog).forEach((dialog) => {\n\t\t\t\tdialog.remove();\n\t\t\t});\n\t\t}\n\n\t\tthis.dialog = document.createElement('dialog');\n\t\tthis.dialog.classList.add(this.className);\n\n\t\tconst header = document.createElement('div');\n\t\theader.classList.add('dialog-header');\n\n\t\tconst title = document.createElement('h3');\n\t\ttitle.textContent = this.title;\n\t\ttitle.classList.add('dialog-title');\n\t\theader.appendChild(title);\n\n\t\tconst btnClose = document.createElement('button');\n\t\tbtnClose.type = 'button';\n\t\tbtnClose.classList.add('close-button');\n\t\tbtnClose.innerHTML = '×';\n\t\tbtnClose.setAttribute('aria-label', 'Close dialog');\n\t\tbtnClose.addEventListener('click', () => {\n\t\t\tthis.close();\n\t\t});\n\t\theader.appendChild(btnClose);\n\n\t\tthis.dialog.appendChild(header);\n\n\t\tconst content = document.createElement('div');\n\t\tcontent.classList.add(`content`);\n\n\t\tthis.dialog.appendChild(addConttent(content));\n\n\t\tthis.dialog.addEventListener('click', (event) => {\n\t\t\tconst target = event.target as Element | null;\n\t\t\tif (!target) return;\n\t\t\tconst rect = target.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\trect.left > event.clientX ||\n\t\t\t\trect.right < event.clientX ||\n\t\t\t\trect.top > event.clientY ||\n\t\t\t\trect.bottom < event.clientY\n\t\t\t) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t});\n\n\t\tparentElement.appendChild(this.dialog);\n\t}\n\n\t/**\n\t * Open the modal dialog.\n\t */\n\tpublic open() {\n\t\tthis.dialog?.showModal();\n\t}\n\n\t/**\n\t * Close the modal dialog.\n\t */\n\tpublic close() {\n\t\tthis.dialog?.close();\n\t}\n\n\t/**\n\t * Create segment buttons element for the dialog.\n\t * @param options options for creating segment buttons\n\t * @param defaultValue default value for the segment buttons\n\t * @param onClick a callback function to handle click events on the segment buttons\n\t * @example\n\t * ```ts\n\t * const segmentButtons = createSegmentButtons(\n\t *   [{ value: 'option1', label: 'Option 1' }, { value: 'option2', label: 'Option 2' }],\n\t *   'option1',\n\t *   (value) => console.log(`Selected: ${value}`)\n\t * );\n\t * document.body.appendChild(segmentButtons);\n\t * ```\n\t * @returns\n\t */\n\tpublic createSegmentButtons(\n\t\toptions: { value: string; label: string }[],\n\t\tdefaultValue: string,\n\t\tonClick: (value: string) => void = () => {}\n\t): HTMLDivElement {\n\t\tconst segmentButtons = document.createElement('div');\n\t\tsegmentButtons.classList.add('segment-buttons');\n\n\t\toptions.forEach((option) => {\n\t\t\tconst button = document.createElement('button');\n\t\t\tbutton.type = 'button';\n\t\t\tbutton.classList.add('segment-button');\n\t\t\tbutton.value = option.value;\n\t\t\tbutton.textContent = option.label;\n\n\t\t\tif (option.value === defaultValue) {\n\t\t\t\tbutton.classList.add('active');\n\t\t\t}\n\n\t\t\tbutton.addEventListener('click', () => {\n\t\t\t\tsegmentButtons\n\t\t\t\t\t.querySelectorAll('.segment-button')\n\t\t\t\t\t.forEach((btn) => btn.classList.remove('active'));\n\t\t\t\tbutton.classList.add('active');\n\t\t\t\tonClick(button.value);\n\t\t\t});\n\n\t\t\tsegmentButtons.appendChild(button);\n\t\t});\n\n\t\treturn segmentButtons;\n\t}\n}\n","import type { TerrainSource } from '../interfaces';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\nimport { Map, type LngLatLike } from 'maplibre-gl';\n\n/**\n * query elevation by point feature.\n * @param feature point geojson feature\n * @param map Maplibre map instance\n * @param computeElevation compute elevation or not\n * @param terrainSource terrain source for computing elevation from raster DEM. If terrainSource is undefined, going to to query elevation from maplibre terrain.\n * @returns geojson feature after computing\n */\nexport const queryElevationByPoint = (\n\tfeature: GeoJSONStoreFeatures,\n\tmap?: Map,\n\tcomputeElevation?: boolean,\n\tterrainSource?: TerrainSource\n) => {\n\tif (feature.geometry.type !== 'Point') return feature;\n\n\tconst coordinates: number[] = (feature as GeoJSONStoreFeatures).geometry.coordinates as number[];\n\n\tif (computeElevation === true && terrainSource === undefined) {\n\t\tconst elevation = map?.queryTerrainElevation(coordinates as LngLatLike);\n\t\tif (elevation) {\n\t\t\tfeature.properties.elevation = elevation;\n\t\t}\n\t}\n\treturn feature;\n};\n","var b = Object.defineProperty;\nvar T = (t, e, r) => e in t ? b(t, e, { enumerable: !0, configurable: !0, writable: !0, value: r }) : t[e] = r;\nvar d = (t, e, r) => T(t, typeof e != \"symbol\" ? e + \"\" : e, r);\nvar v = 2 * Math.PI * 6378137 / 2;\nfunction E(t) {\n  return t = t || 256, 2 * Math.PI * 6378137 / t;\n}\nfunction y(t, e, r = { enable: !0, decimal: 1 }) {\n  t = x(t);\n  var n = t[0], i = t[1], o = n * v / 180, a = Math.log(Math.tan((90 + i) * Math.PI / 360)) / (Math.PI / 180);\n  return a = a * v / 180, r.enable && (o = Number(o.toFixed(r.decimal)), a = Number(a.toFixed(r.decimal))), [o, a];\n}\nfunction I(t, e, r) {\n  var n = t[0], i = t[1], o = R(e, r), a = (n + v) / o, s = (i + v) / o;\n  return [a, s, e];\n}\nfunction g(t, e, r) {\n  t = x(t);\n  var n = y(t), i = I(n, e);\n  return F(i);\n}\nfunction z(t, e, r) {\n  if (t = x(t), e === 0)\n    return [0, 0, 0];\n  var n = g(t, e);\n  return L(n);\n}\nfunction F(t, e, r) {\n  e = e || 256;\n  var n = t[0], i = t[1], o = t[2];\n  if (o === 0) return [0, 0, 0];\n  p(o);\n  var a = Math.ceil(n / e) - 1, s = Math.ceil(i / e) - 1;\n  return a < 0 && (a = 0), s < 0 && (s = 0), [a, s, o];\n}\nfunction L(t, e) {\n  q(t);\n  var r = t[0], n = t[1], i = t[2];\n  if (i === 0)\n    return [0, 0, 0];\n  var o = r, a = Math.pow(2, i) - 1 - n;\n  return [o, a, i];\n}\nfunction q(t, e) {\n  var r = t[0], n = t[1], i = t[2];\n  if (i == null) throw new Error(\"<zoom> is required\");\n  if (r == null) throw new Error(\"<x> is required\");\n  if (n == null) throw new Error(\"<y> is required\");\n  return i = p(i), t = B(t), t;\n}\nfunction B(t) {\n  var e = t[0], r = t[1], n = t[2], i = Math.pow(2, n);\n  return e = e % i, e < 0 && (e = e + i), [e, r, n];\n}\nfunction p(t) {\n  if (t === !1) return t;\n  if (t == null)\n    throw new Error(\"<zoom> is required\");\n  if (t < 0)\n    throw new Error(\"<zoom> cannot be less than 0\");\n  if (t > 32)\n    throw new Error(\"<zoom> cannot be greater than 32\");\n  return t;\n}\nfunction x(t, e) {\n  var r = V(t[0]), n = U(t[1]);\n  return n > 85 && (n = 85), n < -85 && (n = -85), [r, n];\n}\nfunction R(t, e) {\n  return E(e) / Math.pow(2, t);\n}\nfunction U(t) {\n  if (t == null) throw new Error(\"lat is required\");\n  return (t > 90 || t < -90) && (t = t % 180, t > 90 && (t = -180 + t), t < -90 && (t = 180 + t), t === 0 && (t = 0)), t;\n}\nfunction V(t) {\n  if (t == null) throw new Error(\"lng is required\");\n  return (t > 180 || t < -180) && (t = t % 360, t > 180 && (t = -360 + t), t < -180 && (t = 360 + t), t === 0 && (t = 0)), t;\n}\nclass M {\n  /**\n   * Constructor\n   * @param url URL for terrain RGB raster tilesets\n   * @param tileSize size of tile. 256 or 512\n   * @param tms whether it is Tile Map Service\n   * @param minzoom minzoom for terrain RGB raster tilesets\n   * @param maxzoom maxzoom for terrain RGB raster tilesets\n   * @param tms whether it is Tile Map Service\n   */\n  constructor(e, r, n, i, o) {\n    d(this, \"url\");\n    d(this, \"tileSize\");\n    d(this, \"tms\");\n    d(this, \"minzoom\");\n    d(this, \"maxzoom\");\n    this.url = e, this.tileSize = r, this.tms = o, this.minzoom = n, this.maxzoom = i, this.tms = o;\n  }\n  /**\n   * Get the value from target coordinates and zoom level by using certain formula.\n   * @param lnglat coordinates\n   * @param z  zoom level\n   * @returns the value calculated by certain formula\n   */\n  getValue(e, r) {\n    return new Promise(\n      (n, i) => {\n        const o = e[0], a = e[1];\n        let s = r;\n        r > this.maxzoom ? s = this.maxzoom : r < this.minzoom && (s = this.minzoom);\n        const u = this.tms ? g([o, a], s) : z([o, a], s), h = this.url.replace(/{x}/g, u[0].toString()).replace(/{y}/g, u[1].toString()).replace(/{z}/g, u[2].toString());\n        let c = this.getUrlExtension(h);\n        switch (c || (c = \"png\"), c) {\n          case \"png\":\n          case \"webp\":\n            this.getValueFromRaster(h, u, o, a).then((f) => {\n              n(f);\n            });\n            break;\n          default:\n            i(new Error(`Invalid file extension: ${c}`));\n            break;\n        }\n      }\n    );\n  }\n  /**\n   * Get the value calculated from coordinates on WEBP raster tileset\n   * @param url tile URL\n   * @param tile tile index info\n   * @param lng longitude\n   * @param lat latitude\n   * @returns the value calculated from coordinates. If tile does not exist returns undefined\n   */\n  async getValueFromRaster(e, r, n, i) {\n    const o = await fetch(e);\n    if (!o.ok) {\n      if (o.status === 404)\n        return;\n      throw new Error(`Failed to fetch tile: ${o.statusText}`);\n    }\n    const a = await o.blob();\n    return new Promise((s, u) => {\n      const h = new Image();\n      h.onload = () => {\n        const c = document.createElement(\"canvas\");\n        c.width = h.width, c.height = h.height;\n        const f = c.getContext(\"2d\");\n        if (!f) return u(new Error(\"Failed to create canvas context\"));\n        f.drawImage(h, 0, 0);\n        const w = f.getImageData(0, 0, h.width, h.height).data, l = this.pixels2rgba(new Uint8Array(w), r, n, i), m = this.calc(l[0], l[1], l[2], l[3]);\n        s(m);\n      }, h.onerror = () => s(void 0), h.src = URL.createObjectURL(a);\n    });\n  }\n  /**\n   * Get RGBA values from coordinates information\n   * @param pixels pixels info\n   * @param tile tile index info\n   * @param lng longitude\n   * @param lat latitude\n   * @returns RGBA values\n   */\n  pixels2rgba(e, r, n, i) {\n    const o = [];\n    for (let c = 0; c < e.length; c += 4) {\n      const f = e[c], w = e[c + 1], l = e[c + 2], m = e[c + 3], P = [f, w, l, m];\n      o.push(P);\n    }\n    const a = this.tileToBBOX(r), s = this.getPixelPosition(n, i, a), u = s[0] + s[1] * this.tileSize;\n    return o[u];\n  }\n  /**\n   * Get the position in pixel from the coordinates\n   * @param lng longitude\n   * @param lat latitude\n   * @param bbox bbox (minx, miny, maxx, maxy)\n   * @returns The position in pixel\n   */\n  getPixelPosition(e, r, n) {\n    const i = this.tileSize, o = this.tileSize, a = n[2] - n[0], s = n[3] - n[1], u = (e - n[0]) / a, h = (r - n[1]) / s, c = Math.floor(i * u), f = Math.floor(o * (1 - h));\n    return [c, f];\n  }\n  /**\n   * Get file extenstion name from the URL\n   * @param url URL for tilesets\n   * @returns file extenstion either png or webp\n   */\n  getUrlExtension(e) {\n    let r = e.split(/[#?]/)[0].split(\".\").pop();\n    return r && (r = r.trim()), r;\n  }\n  /**\n   * Get the bbox of a tile\n   * @param {Array<number>} tile\n   * @returns {Array<number>} bbox\n   * @example\n   * var bbox = tileToBBOX([5, 10, 10])\n   * //=bbox\n   */\n  tileToBBOX(e) {\n    const r = this.tile2lon(e[0] + 1, e[2]), n = this.tile2lon(e[0], e[2]), i = this.tile2lat(e[1] + 1, e[2]), o = this.tile2lat(e[1], e[2]);\n    return [n, i, r, o];\n  }\n  tile2lon(e, r) {\n    return e / Math.pow(2, r) * 360 - 180;\n  }\n  tile2lat(e, r) {\n    const n = 180 / Math.PI, i = Math.PI - 2 * Math.PI * e / Math.pow(2, r);\n    return n * Math.atan(0.5 * (Math.exp(i) - Math.exp(-i)));\n  }\n}\nclass k extends M {\n  /**\n   * Constructor\n   * @param url URL for terrain RGB raster tilesets\n   * @param tileSize size of tile. 256 or 512\n   * @param tms whether it is Tile Map Service\n   * @param minzoom minzoom for terrain RGB raster tilesets. default is 5\n   * @param maxzoom maxzoom for terrain RGB raster tilesets. default is 15\n   */\n  constructor(e, r, n = 5, i = 15, o = !1) {\n    super(e, r, n, i, o);\n  }\n  /**\n   * Get an altitude calculated from terrain RGB information\n   * @param lnglat coordinates\n   * @param z zoom level\n   * @returns an altitude calculated from terrain RGB information\n   */\n  async getElevation(e, r) {\n    return await this.getValue(e, r);\n  }\n  /**\n   * Formula for calculating an elevation from RGB\n   * @param r red\n   * @param g green\n   * @param b blue\n   * @returns an elevation calculated\n   */\n  calc(e, r, n) {\n    return -1e4 + (e * 256 * 256 + r * 256 + n) * 0.1;\n  }\n}\nclass G extends M {\n  /**\n   * Constructor\n   * @param url URL for terrarium raster tilesets\n   * @param tileSize size of tile. 256 or 512\n   * @param tms whether it is Tile Map Service\n   * @param minzoom minzoom for terrain RGB raster tilesets. default is 5\n   * @param maxzoom maxzoom for terrain RGB raster tilesets. default is 15\n   */\n  constructor(e, r, n = 5, i = 15, o = !1) {\n    super(e, r, n, i, o);\n  }\n  /**\n   * Get an altitude calculated from terrain RGB information\n   * @param lnglat coordinates\n   * @param z zoom level\n   * @returns an altitude calculated from terrain RGB information\n   */\n  async getElevation(e, r) {\n    return await this.getValue(e, r);\n  }\n  /**\n   * Formula for calculating an elevation from RGB\n   * https://github.com/tilezen/joerd/blob/master/docs/formats.md#terrarium\n   * @param r red\n   * @param g green\n   * @param b blue\n   * @returns an elevation calculated\n   */\n  calc(e, r, n) {\n    const i = e * 256 + r + n / 256 - 32768;\n    return parseInt(i.toFixed(0));\n  }\n}\nexport {\n  k as TerrainRGB,\n  G as Terrarium\n};\n//# sourceMappingURL=terrain-rgb.es.js.map\n","import type { ElevationCacheConfig, TerrainSource } from '../interfaces';\nimport { TerrainRGB, Terrarium } from '@watergis/terrain-rgb';\nimport type { GeoJSONStoreFeatures } from 'terra-draw';\nimport { MemoryCache, type CacheInterface } from './memoryCache';\n\n/**\n * Convert coordinates to string key\n */\nconst coordinateToKey = (coordinates: number[], precision = 8): string => {\n\tconst [lng, lat] = coordinates;\n\tconst factor = Math.pow(10, precision);\n\tconst roundedLng = Math.round(lng * factor) / factor;\n\tconst roundedLat = Math.round(lat * factor) / factor;\n\treturn `${roundedLng},${roundedLat}`;\n};\n\n/**\n * Query elvation for point features from Raster DEM\n * @param points Point GeoJSON features\n * @returns points features after adding elevation property\n */\nexport const queryElevationFromRasterDEM = async (\n\tpoints: GeoJSONStoreFeatures[],\n\tterrainDource?: TerrainSource,\n\tcacheConfig?: ElevationCacheConfig,\n\tcacheInstance?: CacheInterface<number>\n) => {\n\tconst promises: Promise<GeoJSONStoreFeatures>[] = [];\n\n\t// Default values for cache configuration\n\tconst config: ElevationCacheConfig = {\n\t\tenabled: true,\n\t\tmaxSize: 1000,\n\t\tttl: 60 * 60 * 1000, // 1 hour\n\t\tprecision: 6,\n\t\t...cacheConfig\n\t};\n\n\t// Initialize cache instance\n\tlet cache: CacheInterface<number> | undefined;\n\tif (config.enabled) {\n\t\tcache = cacheInstance || new MemoryCache<number>(config.maxSize, config.ttl);\n\t}\n\n\tlet terrainInstance: TerrainRGB | Terrarium | undefined = undefined;\n\tlet maxzoom = 15;\n\tif (terrainDource) {\n\t\tconst url = terrainDource.url;\n\t\tconst encoding = terrainDource.encoding ?? 'mapbox';\n\t\tconst tileSize = terrainDource.tileSize ?? 512;\n\t\tconst minzoom = terrainDource.minzoom ?? 5;\n\t\tmaxzoom = terrainDource.maxzoom ?? 15;\n\t\tconst tms = terrainDource.tms ?? false;\n\t\tterrainInstance =\n\t\t\tencoding === 'mapbox'\n\t\t\t\t? new TerrainRGB(url, tileSize, minzoom, maxzoom, tms)\n\t\t\t\t: new Terrarium(url, tileSize, minzoom, maxzoom, tms);\n\t}\n\n\tfor (const point of points) {\n\t\tpromises.push(\n\t\t\tnew Promise((resolve: (feature: GeoJSONStoreFeatures) => void) => {\n\t\t\t\tif (point.geometry.type !== 'Point') resolve(point);\n\n\t\t\t\tconst coordinates = point.geometry.coordinates as number[];\n\t\t\t\tconst cacheKey = coordinateToKey(coordinates, config.precision);\n\t\t\t\tif (cache) {\n\t\t\t\t\tconst cachedElevation = cache.get(cacheKey);\n\t\t\t\t\tif (cachedElevation !== undefined) {\n\t\t\t\t\t\tif (!isNaN(cachedElevation)) {\n\t\t\t\t\t\t\tpoint.properties.elevation = cachedElevation;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(point);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (terrainInstance) {\n\t\t\t\t\tterrainInstance\n\t\t\t\t\t\t.getElevation(point.geometry.coordinates as number[], maxzoom)\n\t\t\t\t\t\t.then((elevation) => {\n\t\t\t\t\t\t\tif (elevation !== undefined && elevation !== null && typeof elevation === 'number') {\n\t\t\t\t\t\t\t\tif (cache) {\n\t\t\t\t\t\t\t\t\tcache.set(cacheKey, elevation);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpoint.properties.elevation = elevation;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(point);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tif (cache && cache.has(cacheKey)) {\n\t\t\t\t\t\t\t\tcache.delete(cacheKey);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve(point);\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresolve(point);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\treturn await Promise.all(promises);\n};\n","import type { GeoJSONStoreFeatures } from 'terra-draw';\nimport type { Position } from 'geojson';\n\n/**\n * Round coordinates to given coordinate precision\n *\n * If you want to add geojson with excessive coordinate precision to TerraDraw by using addFeatures,\n * TerraDraw raise a validation error if you add GeoJSON with excessive precision.\n *\n * use this function to make sure geojson coordinates to meet terradraw setting before adding features.\n *\n * The below is a sample usage of the function\n *\n * ```js\n * const drawControl = new MaplibreTerraDrawControl({\n *   adapterOptions: {\n *     coordinatePrecision: 6\n *   }\n * })\n * map.addControl(drawControl)\n *\n * map.once('load', ()=>{\n *   const features = [] // add your geojson features here\n *   const draw = drawControl.getTerradrawInstance()\n *   draw.addFeatures(roundFeatureCoordinates(features), 6)\n * })\n * ```\n * @param features GeoJSON feature\n * @param decimalPlaces decimal places to 9 (default of terradraw)\n * @returns GeoJSON feature after rounding coordinates\n */\nexport const roundFeatureCoordinates = (\n\tfeatures: GeoJSONStoreFeatures[],\n\tdecimalPlaces: number = 9\n) => {\n\t// Helper function to round a single coordinate\n\tfunction roundCoord(coord: Position) {\n\t\treturn [Number(coord[0].toFixed(decimalPlaces)), Number(coord[1].toFixed(decimalPlaces))];\n\t}\n\n\t// Process coordinates based on geometry type\n\tfunction processGeometry(geometry: GeoJSONStoreFeatures['geometry']) {\n\t\tconst type = geometry.type as\n\t\t\t| 'Polygon'\n\t\t\t| 'LineString'\n\t\t\t| 'Point'\n\t\t\t| 'MultiPoint'\n\t\t\t| 'MultiLineString'\n\t\t\t| 'MultiPolygon';\n\t\tlet coordinates = geometry.coordinates as Position | Position[] | Position[][] | Position[][][];\n\n\t\tswitch (type) {\n\t\t\tcase 'Point':\n\t\t\t\tcoordinates = roundCoord(coordinates as [number, number]);\n\t\t\t\tbreak;\n\t\t\tcase 'LineString':\n\t\t\tcase 'MultiPoint':\n\t\t\t\tcoordinates = (coordinates as Position[]).map(roundCoord);\n\t\t\t\tbreak;\n\t\t\tcase 'Polygon':\n\t\t\tcase 'MultiLineString':\n\t\t\t\tcoordinates = (coordinates as Position[][]).map((ring: Position[]) => ring.map(roundCoord));\n\t\t\t\tbreak;\n\t\t\tcase 'MultiPolygon':\n\t\t\t\tcoordinates = (coordinates as unknown as Position[][][]).map((polygon: Position[][]) =>\n\t\t\t\t\tpolygon.map((ring: Position[]) => ring.map(roundCoord))\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t\treturn {\n\t\t\t...geometry,\n\t\t\tcoordinates: coordinates\n\t\t};\n\t}\n\n\t// Process each feature\n\treturn features.map((feature) => ({\n\t\t...feature,\n\t\tgeometry: processGeometry(feature.geometry) as GeoJSONStoreFeatures['geometry']\n\t}));\n};\n","import type { GeoJSONStoreFeatures } from 'terra-draw';\nimport type { costingModelType } from './valhallaRouting';\n\n/**\n * Contour type options\n */\nexport const contourTypeOptions = [\n\t{ value: 'time', label: 'Time' },\n\t{ value: 'distance', label: 'Distance' }\n] as const;\n\n/**\n * ContourType definition either time or distance\n */\nexport type ContourType = (typeof contourTypeOptions)[number]['value'];\n\n/**\n * Contour definition.\n * When it is passing to valhalla, both time and distance cannot be passed.\n * If time exists, valhalla compute time isochrone.\n * If distance exists, valhalla compute distance isochrone.\n * If both parameters are passed to API, it throws error.\n */\nexport interface Contour {\n\t/**\n\t * Time in minutes\n\t */\n\ttime?: number;\n\t/**\n\t * Distance in kilometers\n\t */\n\tdistance?: number;\n\t/**\n\t * HEX color with hash (#). However, hash needs to be eliminated when it is passed to valhalla API.\n\t */\n\tcolor: string;\n}\n\n/**\n * Valhalla Isochrone engine class\n */\nexport class ValhallaIsochrone {\n\tprivate url: string;\n\n\t/**\n\t * Constructor\n\t * @param url URL for terrain RGB raster tilesets\n\t */\n\tconstructor(url: string) {\n\t\tthis.url = url;\n\t}\n\n\t/**\n\t * Calculate isochrone by given parameters from Valhalla API\n\t * @param lon Longitude\n\t * @param lat Latitude\n\t * @param contourType the type of contour either time or distance\n\t * @param costingModel costing model either auto, bicycle or pedestrian\n\t * @param contours Optional. the list of contour. If skipped, default value is used.\n\t * @returns GeoJSON Feature Collection object\n\t */\n\tpublic async calcIsochrone(\n\t\tlon: number,\n\t\tlat: number,\n\t\tcontourType: ContourType,\n\t\tcostingModel: costingModelType,\n\t\tcontours: Contour[]\n\t) {\n\t\tconst contourList: Contour[] = JSON.parse(JSON.stringify(contours));\n\t\tcontourList.forEach((c) => {\n\t\t\tif (contourType === 'time') {\n\t\t\t\tdelete c.distance;\n\t\t\t} else {\n\t\t\t\tdelete c.time;\n\t\t\t}\n\t\t});\n\n\t\t// http://localhost:8002/isochrone?json={%22locations%22:[{%22lat%22:-1.946357,%22lon%22:30.059753}],%22costing%22:%22pedestrian%22,%22contours%22:[{%22time%22:15,%22color%22:%22ff0000%22},{%22time%22:30,%22color%22:%22ffff00%22},{%22time%22:60,%22color%22:%220000ff%22}]}\n\t\tconst jsonOption = {\n\t\t\tlocations: [{ lat, lon }],\n\t\t\tcosting: costingModel,\n\t\t\tcontours: contourList.map((c) => {\n\t\t\t\tc.color = c.color.replace('#', '');\n\t\t\t\treturn c;\n\t\t\t}),\n\t\t\tpolygons: true\n\t\t};\n\t\tconst url = `${this.url}/isochrone?json=${JSON.stringify(jsonOption)}`;\n\n\t\tconst res = await fetch(url);\n\t\tconst geojson = await res.json();\n\t\treturn geojson as { type: 'FeatureCollection'; features: GeoJSONStoreFeatures[] };\n\t}\n}\n","import { GeoJSONFeature, LngLat } from 'maplibre-gl';\n\n/**\n * ValhallaTripSummary interface for the summary of the trip.\n */\nexport interface ValhallaTripSummary {\n\thas_time_restrictions: boolean;\n\tmin_lat: number;\n\tmin_lon: number;\n\tmax_lat: number;\n\tmax_lon: number;\n\ttime: number;\n\tlength: number;\n\tcost: number;\n}\n\n/**\n * ValhallaRoutingLocation interface for the locations in the trip.\n */\nexport interface ValhallaRoutingLocation {\n\ttype: string;\n\tlat: number;\n\tlon: number;\n\tcity: string;\n\toriginal_index: number;\n}\n\n/**\n * ValhallaRoutingLeg interface for the legs of the trip.\n */\nexport interface ValhallaRoutingLeg {\n\tmaneuvers: {\n\t\ttype: number;\n\t\tinstruction: string;\n\t\tverbal_pre_transition_instruction: string;\n\t\tverbal_post_transition_instruction: string;\n\t\ttime: number;\n\t\tlength: number;\n\t\tcost: number;\n\t\tbegin_shape_index: number;\n\t\tend_shape_index: number;\n\t\trough: boolean;\n\t\ttravel_mode: string;\n\t\ttravel_type: string;\n\t}[];\n\tsummary: ValhallaTripSummary;\n\tshape: string;\n}\n\n/**\n * ValhallaTripResult interface for the response from Valhalla routing API.\n */\nexport interface ValhallaTripResult {\n\ttrip: {\n\t\tlocations: ValhallaRoutingLocation[];\n\t\tlegs: ValhallaRoutingLeg[];\n\t\tsummary: ValhallaTripSummary;\n\t\tstatus_message: string;\n\t\tstatus: number;\n\t\tunits: string;\n\t\tlanguage: string;\n\t};\n\tid: string;\n}\n\n/**\n * ValhallaError interface for error response from Valhalla API.\n */\nexport interface ValhallaError {\n\terror: string;\n\terror_code: number;\n\tstatus: string;\n\tstatus_code: number;\n}\n\n/**\n * Options of means of transport for Valhalla routing API.\n */\nexport const costingModelOptions = [\n\t{ value: 'pedestrian', label: 'Pedestrian' },\n\t{ value: 'bicycle', label: 'Bicycle' },\n\t{ value: 'auto', label: 'Car' }\n] as const;\n\n/**\n * costingModelType is the type for means of transport in Valhalla routing API.\n */\nexport type costingModelType = (typeof costingModelOptions)[number]['value'];\n\n/**\n * Options of distance unit for Valhalla routing API.\n */\nexport const routingDistanceUnitOptions = [\n\t{ value: 'kilometers', label: 'km' },\n\t{ value: 'miles', label: 'mile' }\n] as const;\n\n/**\n * routingDistanceUnitType is the type for distance unit in Valhalla routing API.\n */\nexport type routingDistanceUnitType = (typeof routingDistanceUnitOptions)[number]['value'];\n\n/**\n * Valhalla routing API class\n */\nexport class ValhallaRouting {\n\tprivate tripData: LngLat[] = [];\n\n\t/**\n\t * get the raw trip data from the valhalla routing API.\n\t * @returns tripData\n\t */\n\tpublic getTripData(): LngLat[] {\n\t\treturn this.tripData;\n\t}\n\n\t/**\n\t * Valhalla API URL\n\t */\n\tprivate url: string;\n\n\t/**\n\t * Trip summary from routing API.\n\t */\n\tprivate tripSummary: ValhallaTripSummary | undefined;\n\n\t/**\n\t * Get the trip summary from the routing API.\n\t * @returns tripSummary\n\t */\n\tpublic getTripSummary(): ValhallaTripSummary | undefined {\n\t\treturn this.tripSummary;\n\t}\n\n\t/**\n\t * Constructor\n\t * @param url URL for terrain RGB raster tilesets\n\t */\n\tconstructor(url: string) {\n\t\tthis.url = url;\n\t}\n\n\t/**\n\t * Clear the trip data and summary.\n\t */\n\tpublic clearFeatures() {\n\t\tthis.tripData = [];\n\t\tthis.tripSummary = undefined;\n\t}\n\n\t/**\n\t * Calculate the route using Valhalla routing API.\n\t * @param tripData array of LngLat coordinates for the trip\n\t * @param costingModel means of transport for Valhalla routing API.\n\t * @param distanceUnit distance unit for Valhalla routing API.\n\t * @returns returns a feature with LineString geometry and point features for the trip data\n\t * @throws Error if the trip data is invalid or if the Valhalla API returns\n\t */\n\tpublic async calcRoute(\n\t\ttripData: LngLat[],\n\t\tcostingModel: costingModelType,\n\t\tdistanceUnit: routingDistanceUnitType\n\t) {\n\t\tthis.tripData = tripData;\n\t\tif (!this.tripData || (this.tripData && this.tripData.length < 2)) {\n\t\t\tthis.tripSummary = undefined;\n\t\t\treturn;\n\t\t}\n\t\t// errorMessage = '';\n\t\tconst baseAPI = `${this.url}/route`;\n\t\tconst params = {\n\t\t\tlocations: this.tripData.map((pt) => {\n\t\t\t\treturn { lon: pt.lng, lat: pt.lat };\n\t\t\t}),\n\t\t\tcosting: costingModel,\n\t\t\tcosting_options: { auto: { country_crossing_penalty: 2000.0 } },\n\t\t\tunits: distanceUnit,\n\t\t\tid: 'my_work_route'\n\t\t};\n\t\tconst apiUrl = `${baseAPI}?json=${JSON.stringify(params)}`;\n\n\t\tconst res = await fetch(apiUrl);\n\t\tconst json: ValhallaTripResult | ValhallaError = await res.json();\n\t\tif ('error' in json) {\n\t\t\tthis.tripData.pop(); //remove the last coordinates which cause error\n\t\t\tthrow new Error(`${json.status} (${json.status_code}): ${json.error} (${json.error_code})`);\n\t\t}\n\t\tconst shapes = json.trip.legs.map((s) => this.decodeShape(s.shape));\n\t\tlet shape: number[][] = [];\n\t\tshapes.forEach((shp) => {\n\t\t\tshape = [...shape, ...shp];\n\t\t});\n\t\tthis.tripSummary = json.trip.summary;\n\t\tthis.tripSummary.length = Number(this.tripSummary.length.toFixed(2));\n\t\tthis.tripSummary.time = Number((this.tripSummary.time / 60).toFixed());\n\n\t\tconst combinedShape: number[][] = [];\n\t\tlet sumLength = 0;\n\t\tlet sumTime = 0;\n\t\tconst combinedManeuvers: ValhallaRoutingLeg['maneuvers'] = [];\n\n\t\tconst pointFeatures = this.geoPoint(this.tripData.map((pt) => [pt.lng, pt.lat]));\n\n\t\tjson.trip.legs.forEach((leg, index) => {\n\t\t\tconst shape = this.decodeShape(leg.shape);\n\t\t\tcombinedShape.push(...shape);\n\t\t\tsumLength += Number(leg.summary.length.toFixed(2));\n\t\t\tsumTime += Number((leg.summary.time / 60).toFixed());\n\t\t\tcombinedManeuvers.push(...leg.maneuvers);\n\n\t\t\tconst pointFeature = pointFeatures.features[index + 1];\n\t\t\tpointFeature.properties = {\n\t\t\t\t...pointFeature.properties,\n\t\t\t\tdistance: sumLength,\n\t\t\t\tdistance_unit: distanceUnit === 'kilometers' ? 'km' : 'mi',\n\t\t\t\ttime: sumTime,\n\t\t\t\tmaneuvers: leg.maneuvers\n\t\t\t};\n\t\t});\n\n\t\tconst transportLabel = costingModelOptions.find((opt) => opt.value === costingModel)\n\t\t\t?.label as string;\n\n\t\tconst feature = this.geoLineString(combinedShape, {\n\t\t\tcostingModel: transportLabel,\n\t\t\tdistance: sumLength,\n\t\t\tdistance_unit: distanceUnit === 'kilometers' ? 'km' : 'mi',\n\t\t\ttime: sumTime,\n\t\t\tmaneuvers: combinedManeuvers as unknown as string\n\t\t});\n\n\t\tconst firstFeature = pointFeatures.features[0];\n\t\tfirstFeature.properties = {\n\t\t\t...firstFeature.properties,\n\t\t\tcostingModel: transportLabel\n\t\t};\n\t\treturn { feature, pointFeatures };\n\t}\n\n\t/**\n\t * create a GeoJSON Feature with LineString geometry.\n\t * @param coordinates array of coordinates\n\t * @param props properties to set for the feature\n\t * @returns GeoJSON Feature with LineString geometry\n\t */\n\tprivate geoLineString(\n\t\tcoordinates: number[][] = [],\n\t\tprops: { [key: string]: string | number } = {}\n\t): GeoJSONFeature {\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t// @ts-ignore\n\t\treturn {\n\t\t\ttype: 'Feature',\n\t\t\tproperties: props,\n\t\t\tgeometry: {\n\t\t\t\ttype: 'LineString',\n\t\t\t\tcoordinates\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Create a GeoJSON FeatureCollection with Point features.\n\t * @param coordinates array of coordinates\n\t * @returns GeoJSON FeatureCollection\n\t */\n\tprivate geoPoint(coordinates: number[][] = []) {\n\t\treturn {\n\t\t\ttype: 'FeatureCollection',\n\t\t\tfeatures: coordinates.map((c, i) => {\n\t\t\t\tlet text = (i + 1).toString();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\ttext = 'Start';\n\t\t\t\t} else if (i === coordinates.length - 1) {\n\t\t\t\t\ttext = 'Goal';\n\t\t\t\t} else {\n\t\t\t\t\ttext = `No.${text}`;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'Feature',\n\t\t\t\t\tid: `node-${i}`,\n\t\t\t\t\tproperties: {\n\t\t\t\t\t\tsequence: i,\n\t\t\t\t\t\ttext\n\t\t\t\t\t},\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\ttype: 'Point',\n\t\t\t\t\t\tcoordinates: c\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}) as unknown as GeoJSONFeature[]\n\t\t};\n\t}\n\n\t/**\n\t * decode a shape string from Valhalla routing API to convert it to an array of coordinates.\n\t * @param value encoded shape object from Valhalla routing API\n\t * @param precision coordinate precision, default is 6\n\t * @returns the list of coordinates as [lng, lat] pairs\n\t */\n\tprivate decodeShape(value: string, precision = 6) {\n\t\tlet index = 0,\n\t\t\tlat = 0,\n\t\t\tlng = 0,\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tcoordinates: number[][] = [],\n\t\t\tshift = 0,\n\t\t\tresult = 0,\n\t\t\tbyte = null,\n\t\t\tlatitude_change,\n\t\t\tlongitude_change,\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tfactor = Math.pow(10, precision || 6);\n\n\t\t// Coordinates have variable length when encoded, so just keep\n\t\t// track of whether we've hit the end of the string. In each\n\t\t// loop iteration, a single coordinate is decoded.\n\t\twhile (index < value.length) {\n\t\t\t// Reset shift, result, and byte\n\t\t\tbyte = null;\n\t\t\tshift = 0;\n\t\t\tresult = 0;\n\n\t\t\tdo {\n\t\t\t\tbyte = value.charCodeAt(index++) - 63;\n\t\t\t\tresult |= (byte & 0x1f) << shift;\n\t\t\t\tshift += 5;\n\t\t\t} while (byte >= 0x20);\n\n\t\t\tlatitude_change = result & 1 ? ~(result >> 1) : result >> 1;\n\n\t\t\tshift = result = 0;\n\n\t\t\tdo {\n\t\t\t\tbyte = value.charCodeAt(index++) - 63;\n\t\t\t\tresult |= (byte & 0x1f) << shift;\n\t\t\t\tshift += 5;\n\t\t\t} while (byte >= 0x20);\n\n\t\t\tlongitude_change = result & 1 ? ~(result >> 1) : result >> 1;\n\n\t\t\tlat += latitude_change;\n\t\t\tlng += longitude_change;\n\n\t\t\tcoordinates.push([lng / factor, lat / factor]);\n\t\t}\n\n\t\treturn coordinates;\n\t}\n}\n","import type {\n\tControlPosition,\n\tGeoJSONSource,\n\tGeoJSONSourceSpecification,\n\tIControl,\n\tMap,\n\tStyleSpecification\n} from 'maplibre-gl';\nimport { TerraDraw, TerraDrawExtend, TerraDrawRenderMode } from 'terra-draw';\nimport { TerraDrawMapLibreGLAdapter } from 'terra-draw-maplibre-gl-adapter';\nimport type {\n\tTerradrawControlOptions,\n\tEventType,\n\tTerradrawMode,\n\tTerradrawModeClass,\n\tEventArgs\n} from '../interfaces';\nimport { defaultControlOptions, getDefaultModeOptions } from '../constants';\nimport { capitalize, cleanMaplibreStyle, TERRADRAW_SOURCE_IDS } from '../helpers';\n\n/**\n * Maplibre GL Terra Draw Control\n */\nexport class MaplibreTerradrawControl implements IControl {\n\tprotected controlContainer?: HTMLElement;\n\tprotected map?: Map;\n\tprotected modeButtons: { [key: string]: HTMLButtonElement } = {};\n\tprotected _isExpanded = false;\n\tprotected _cssPrefix = '';\n\n\t/**\n\t * get the state of whether the control is expanded or collapsed\n\t */\n\tpublic get isExpanded(): boolean {\n\t\treturn this._isExpanded;\n\t}\n\n\t/**\n\t * CSS prefix for the control buttons.\n\t * Default is empty string\n\t */\n\tprotected get cssPrefix(): string {\n\t\treturn this._cssPrefix;\n\t}\n\n\t/**\n\t * set the state of the control either expanded or collapsed.\n\t * terradraw mode will be reset if the state is changed.\n\t * either `expanded` or `collapsed` event is dispatched when changed\n\t */\n\tpublic set isExpanded(value: boolean) {\n\t\tthis._isExpanded = value;\n\t\tconst controls = document.getElementsByClassName(\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}add-control`\n\t\t);\n\t\tfor (let i = 0; i < controls.length; i++) {\n\t\t\tconst item = controls.item(i);\n\t\t\tif (!item) continue;\n\t\t\tif (this.isExpanded) {\n\t\t\t\titem.classList.remove('hidden');\n\t\t\t} else {\n\t\t\t\titem.classList.add('hidden');\n\t\t\t}\n\t\t}\n\t\tconst addButton = document.getElementsByClassName(\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}render-button`\n\t\t);\n\t\tif (addButton && addButton.length > 0) {\n\t\t\tif (this.isExpanded) {\n\t\t\t\taddButton.item(0)?.classList.add('enabled');\n\t\t\t} else {\n\t\t\t\taddButton.item(0)?.classList.remove('enabled');\n\t\t\t\tthis.resetActiveMode();\n\t\t\t}\n\t\t}\n\t\tthis.toggleDeleteSelectionButton();\n\t\tthis.toggleButtonsWhenNoFeature();\n\t\tif (this.isExpanded) {\n\t\t\tthis.dispatchEvent('expanded');\n\t\t} else {\n\t\t\tthis.dispatchEvent('collapsed');\n\t\t}\n\t}\n\n\tprotected terradraw?: TerraDraw;\n\tprotected options: TerradrawControlOptions = defaultControlOptions;\n\tprotected events: {\n\t\t[key: string]: [(event: EventArgs) => void];\n\t} = {};\n\n\tprotected defaultMode = 'render';\n\n\t/**\n\t * Constructor\n\t * @param options Plugin control options\n\t */\n\tconstructor(options?: TerradrawControlOptions) {\n\t\tthis.modeButtons = {};\n\n\t\tif (options) {\n\t\t\tthis.options = Object.assign(this.options, options);\n\t\t}\n\t\tconst prefixId = this.options.adapterOptions?.prefixId ?? 'td';\n\t\tif (!this.options.adapterOptions) {\n\t\t\tthis.options.adapterOptions = {};\n\t\t}\n\t\tif (!this.options.adapterOptions?.prefixId) {\n\t\t\tthis.options.adapterOptions.prefixId = prefixId;\n\t\t}\n\t}\n\n\t/**\n\t * Get the default control position\n\t * @returns default control position. Default is 'top-right'\n\t */\n\tpublic getDefaultPosition(): ControlPosition {\n\t\tconst defaultPosition = 'top-right';\n\t\treturn defaultPosition;\n\t}\n\n\t/**\n\t * add the plugin control to maplibre\n\t * @param map Maplibre Map object\n\t * @returns HTML Element\n\t */\n\tpublic onAdd(map: Map): HTMLElement {\n\t\tif (this.options && this.options.modes && this.options.modes.length === 0) {\n\t\t\tthrow new Error('At least a mode must be enabled.');\n\t\t}\n\t\tthis.map = map;\n\n\t\tconst defaultOptions = getDefaultModeOptions();\n\t\tconst modes: TerradrawModeClass[] = [];\n\n\t\tthis.options?.modes?.forEach((m) => {\n\t\t\tif (this.options.modeOptions && this.options.modeOptions[m]) {\n\t\t\t\tconst newOption = this.options.modeOptions[m];\n\n\t\t\t\tif (m === 'select') {\n\t\t\t\t\t// overwrite other select mode settings if new option does not contain.\n\t\t\t\t\tconst defaultOption = defaultOptions[m];\n\t\t\t\t\tif (defaultOption) {\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tconst flags = defaultOption.flags;\n\t\t\t\t\t\tObject.keys(flags).forEach((key) => {\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tif (newOption.flags[key]) return;\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\tnewOption.flags[key] = flags[key];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmodes.push(newOption);\n\t\t\t} else if (defaultOptions[m]) {\n\t\t\t\tmodes.push(defaultOptions[m]);\n\t\t\t}\n\t\t});\n\n\t\t// sometimes, an error of 'Can not register unless mode is unregistered' is thrown by terradraw,\n\t\t// thus, force reset mode state as unregistered\n\t\tmodes.forEach((m) => {\n\t\t\tif (m.state !== 'unregistered') {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\tm._state = 'unregistered';\n\t\t\t}\n\t\t});\n\n\t\t// if no render button is specified, it add hidden render mode\n\t\tif (!this.options?.modes?.includes('render')) {\n\t\t\tmodes.push(\n\t\t\t\tnew TerraDrawRenderMode({\n\t\t\t\t\tmodeName: 'default',\n\t\t\t\t\tstyles: {}\n\t\t\t\t})\n\t\t\t);\n\t\t\tthis.defaultMode = 'default';\n\t\t}\n\n\t\tthis.isExpanded = this.options.open === true;\n\n\t\tthis.terradraw = new TerraDraw({\n\t\t\tadapter: new TerraDrawMapLibreGLAdapter({ map, ...this.options.adapterOptions }),\n\t\t\tmodes: modes\n\t\t});\n\n\t\tif (this.map?.loaded()) {\n\t\t\tthis.terradraw.start();\n\t\t} else {\n\t\t\tthis.map?.once('load', () => {\n\t\t\t\tthis.terradraw?.start();\n\t\t\t});\n\t\t}\n\n\t\tthis.controlContainer = document.createElement('div');\n\t\tthis.controlContainer.classList.add(`maplibregl-ctrl`);\n\t\tthis.controlContainer.classList.add(`maplibregl-ctrl-group`);\n\n\t\tmodes.forEach((m: TerradrawModeClass) => {\n\t\t\tif (m.mode === 'default') return;\n\t\t\tthis.addTerradrawButton(m.mode as TerradrawMode);\n\t\t});\n\n\t\tObject.values(this.modeButtons).forEach((ele) => {\n\t\t\tthis.controlContainer?.appendChild(ele);\n\t\t});\n\n\t\tthis.terradraw?.on('change', this.toggleButtonsWhenNoFeature.bind(this));\n\t\tthis.toggleButtonsWhenNoFeature();\n\t\treturn this.controlContainer;\n\t}\n\n\t/**\n\t * Remove the plugin control from maplibre\n\t * @returns void\n\t */\n\tpublic onRemove(): void {\n\t\tif (!this.controlContainer || !this.controlContainer.parentNode || !this.map) {\n\t\t\treturn;\n\t\t}\n\t\tthis.deactivate();\n\t\tthis.modeButtons = {};\n\t\tthis.terradraw = undefined;\n\t\tthis.map = undefined;\n\t\tthis.controlContainer.parentNode.removeChild(this.controlContainer);\n\t}\n\n\t/**\n\t * Register an event for the plugin\n\t * @param event event type\n\t * @param callback\n\t */\n\tpublic on(event: EventType, callback: (event: EventArgs) => void) {\n\t\tif (!this.events[event]) {\n\t\t\tthis.events[event] = [callback];\n\t\t} else {\n\t\t\tthis.events[event].push(callback);\n\t\t}\n\t}\n\n\t/**\n\t * Unregister an event for the plugin\n\t * @param event event type\n\t * @param callback\n\t * @returns\n\t */\n\tpublic off(event: EventType, callback: (event: EventArgs) => void) {\n\t\tif (!this.events[event]) return;\n\t\tconst index = this.events[event].findIndex((c) => c === callback);\n\t\tif (index !== -1) {\n\t\t\tthis.events[event].splice(index, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Dispatch an event. Pass the current snapshot of features and mode\n\t * @param event event type\n\t * @param args additional arguments\n\t */\n\tprotected dispatchEvent(event: EventType, args?: { [key: string]: unknown }) {\n\t\tif (this.events[event]) {\n\t\t\tthis.events[event].forEach((callback) => {\n\t\t\t\tconst snapshot = this.terradraw?.getSnapshot();\n\t\t\t\tconst currentFeature = snapshot?.filter((f) => f.properties.selected === true);\n\t\t\t\tcallback({\n\t\t\t\t\tfeature: currentFeature,\n\t\t\t\t\tmode: this.terradraw?.getMode() as TerradrawMode,\n\t\t\t\t\t...args\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Activate Terra Draw to start drawing\n\t */\n\tpublic activate() {\n\t\tif (!this.terradraw) return;\n\t\tif (!this.terradraw.enabled) {\n\t\t\tthis.terradraw.start();\n\t\t}\n\t}\n\n\t/**\n\t * Deactivate Terra Draw to stop drawing\n\t */\n\tpublic deactivate() {\n\t\tif (!this.terradraw) return;\n\t\tif (!this.terradraw.enabled) return;\n\t\tthis.resetActiveMode();\n\t\tthis.dispatchEvent('mode-changed');\n\t\tthis.terradraw.stop();\n\t}\n\n\t/**\n\t * Get the Terra Draw instance.\n\t * For the Terra Draw API, please refer to https://terradraw.io/#/api\n\t * @returns Terra Draw instance\n\t */\n\tpublic getTerraDrawInstance() {\n\t\treturn this.terradraw;\n\t}\n\n\t/**\n\t * Toggle editor control\n\t */\n\tprotected toggleEditor() {\n\t\tif (!this.terradraw) return;\n\t\tthis.isExpanded = !this.isExpanded;\n\t}\n\n\t/**\n\t * Reset active mode to back to render mode\n\t */\n\tpublic resetActiveMode() {\n\t\tif (!this.terradraw) return;\n\t\tif (!this.terradraw.enabled) {\n\t\t\tthis.terradraw.start();\n\t\t}\n\t\tconst controls = document.getElementsByClassName(\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}add-control`\n\t\t);\n\t\tfor (let i = 0; i < controls.length; i++) {\n\t\t\tconst item = controls.item(i);\n\t\t\tif (!item) continue;\n\t\t\titem.classList.remove('active');\n\t\t}\n\t\tthis.terradraw?.setMode(this.defaultMode);\n\t}\n\n\t/**\n\t * Add Terra Draw drawing mode button\n\t * @param mode Terra Draw mode name\n\t */\n\tprotected addTerradrawButton(mode: TerradrawMode) {\n\t\tconst btn = document.createElement('button');\n\t\tbtn.type = 'button';\n\t\tthis.modeButtons[mode] = btn;\n\n\t\tif (mode === 'render') {\n\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}${mode}-button`);\n\n\t\t\tif (this.isExpanded) {\n\t\t\t\tbtn.classList.add('enabled');\n\t\t\t}\n\t\t\tbtn.type = 'button';\n\t\t\tbtn.title = capitalize('expand or collapse drawing tool');\n\t\t\tbtn.addEventListener('click', this.toggleEditor.bind(this));\n\t\t} else {\n\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}add-control`);\n\n\t\t\tif (!this.isExpanded) {\n\t\t\t\tbtn.classList.add('hidden');\n\t\t\t}\n\t\t\tbtn.title = capitalize(mode.replace(/-/g, ' '));\n\n\t\t\tif (mode === 'delete') {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}${mode}-button`);\n\n\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\tif (!this.terradraw) return;\n\t\t\t\t\tif (!this.terradraw.enabled) return;\n\n\t\t\t\t\tthis.terradraw.clear();\n\t\t\t\t\tthis.deactivate();\n\t\t\t\t\tthis.toggleDeleteSelectionButton();\n\t\t\t\t\tthis.toggleButtonsWhenNoFeature();\n\t\t\t\t\tthis.dispatchEvent('feature-deleted');\n\t\t\t\t});\n\t\t\t} else if (mode === 'delete-selection') {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}${mode}-button`);\n\t\t\t\tbtn.classList.add(`hidden-delete-selection`);\n\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\tif (!this.terradraw) return;\n\t\t\t\t\tif (!this.terradraw.enabled) return;\n\n\t\t\t\t\tconst snapshot = this.terradraw?.getSnapshot();\n\t\t\t\t\tconst selected = snapshot.filter((f) => f.properties.selected === true);\n\n\t\t\t\t\tif (selected.length > 0) {\n\t\t\t\t\t\t// if feature is selected, delete only selected feature\n\t\t\t\t\t\tconst ids = selected.map((f) => f.id) as TerraDrawExtend.FeatureId[];\n\n\t\t\t\t\t\tthis.terradraw.removeFeatures(ids);\n\t\t\t\t\t\tfor (const id of ids) {\n\t\t\t\t\t\t\tthis.terradraw.deselectFeature(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.dispatchEvent('feature-deleted', { deletedIds: ids });\n\t\t\t\t\t}\n\t\t\t\t\tthis.toggleDeleteSelectionButton();\n\t\t\t\t\tthis.toggleButtonsWhenNoFeature();\n\t\t\t\t});\n\t\t\t} else if (mode === 'download') {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}${mode}-button`);\n\t\t\t\tbtn.addEventListener('click', this.handleDownload.bind(this));\n\t\t\t} else {\n\t\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}add-${mode}-button`);\n\n\t\t\t\tbtn.addEventListener('click', () => {\n\t\t\t\t\tif (!this.terradraw) return;\n\n\t\t\t\t\tconst isActive = btn.classList.contains('active');\n\t\t\t\t\tthis.activate();\n\t\t\t\t\tthis.resetActiveMode();\n\n\t\t\t\t\tif (!isActive) {\n\t\t\t\t\t\tthis.terradraw.setMode(mode);\n\t\t\t\t\t\tbtn.classList.add('active');\n\t\t\t\t\t}\n\t\t\t\t\tthis.dispatchEvent('mode-changed');\n\t\t\t\t\tthis.toggleDeleteSelectionButton();\n\t\t\t\t\tthis.toggleButtonsWhenNoFeature();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * get GeoJSON features\n\t * @param onlySelected If true, returns only selected features. Default is false.\n\t * @returns FeatureCollection in GeoJSON format\n\t */\n\tpublic getFeatures(onlySelected = false) {\n\t\tif (!this.terradraw) return;\n\t\tconst snapshot = this.terradraw?.getSnapshot();\n\t\tconst features = snapshot.filter((f) => f.properties.mode !== 'select');\n\n\t\tconst fc = {\n\t\t\ttype: 'FeatureCollection',\n\t\t\tfeatures: features\n\t\t};\n\t\tif (onlySelected !== true) {\n\t\t\treturn fc;\n\t\t}\n\t\tfc.features = fc.features.filter((f) => f.properties.selected === true);\n\t\treturn fc;\n\t}\n\n\t/**\n\t * clean maplibre style to filter only for terradraw related layers or without them.\n\t * If options are not set, returns original style given to the function.\n\t *\n\t * This can be useful incase users only want to get terradraw related layers or without it.\n\t *\n\t * Usage:\n\t * `cleanStyle(map.getStyle, { excludeTerraDrawLayers: true})`\n\t * `cleanStyle(map.getStyle, { onlyTerraDrawLayers: true})`\n\t *\n\t * @param style maplibre style spec\n\t * @param options.excludeTerraDrawLayers return maplibre style without terradraw layers and sources\n\t * @param options.onlyTerraDrawLayers return maplibre style with only terradraw layers and sources\n\t * @returns\n\t */\n\tpublic cleanStyle(\n\t\tstyle: StyleSpecification,\n\t\toptions?: { excludeTerraDrawLayers?: boolean; onlyTerraDrawLayers?: boolean }\n\t) {\n\t\treturn cleanMaplibreStyle(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\tTERRADRAW_SOURCE_IDS,\n\t\t\tthis.options.adapterOptions?.prefixId\n\t\t);\n\t}\n\n\t/**\n\t * Download button click event handler\n\t */\n\tprotected handleDownload() {\n\t\tconst fc = this.getFeatures(false);\n\n\t\tconst dataStr = 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(fc));\n\t\tconst download = document.createElement('a');\n\t\tdownload.setAttribute('href', dataStr);\n\t\tdownload.setAttribute('download', 'data.geojson');\n\t\tdocument.body.appendChild(download);\n\t\tdownload.click();\n\t\tdownload.remove();\n\t}\n\n\t/**\n\t * Toggle the state of buttons when there is no features\n\t */\n\tprotected toggleButtonsWhenNoFeature() {\n\t\tif (!this.controlContainer) return;\n\t\tconst fc = this.getFeatures(false);\n\t\tconst isActive = fc && fc.features.length > 0 ? true : false;\n\n\t\tconst targets = [\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}add-select-button`,\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}download-button`,\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}delete-button`\n\t\t];\n\t\tfor (const className of targets) {\n\t\t\tconst btns = this.controlContainer.getElementsByClassName(className);\n\t\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\t\tconst btn = btns.item(i) as HTMLButtonElement;\n\t\t\t\tif (!btn) continue;\n\t\t\t\tbtn.disabled = !isActive;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Toggle the state of delete-select button\n\t */\n\tprotected toggleDeleteSelectionButton() {\n\t\tconst enabled = this.terradraw?.enabled || false;\n\t\tconst mode = this.terradraw?.getMode();\n\t\tconst fc = this.getFeatures(false);\n\t\tconst hasFeatures = fc && fc.features.length > 0;\n\t\tconst isActive = hasFeatures && enabled && mode === 'select';\n\t\tconst btns = document.getElementsByClassName(\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}delete-selection-button`\n\t\t);\n\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\tconst btn = btns.item(i);\n\t\t\tif (!btn) continue;\n\t\t\tif (isActive) {\n\t\t\t\tbtn.classList.remove('hidden-delete-selection');\n\t\t\t} else {\n\t\t\t\tbtn.classList.add('hidden-delete-selection');\n\t\t\t}\n\t\t}\n\n\t\tif (!hasFeatures) {\n\t\t\tconst btns = document.getElementsByClassName(\n\t\t\t\t`maplibregl-terradraw-${this.cssPrefix}add-select-button`\n\t\t\t);\n\t\t\tfor (let i = 0; i < btns.length; i++) {\n\t\t\t\tconst btn = btns.item(i);\n\t\t\t\tif (!btn) continue;\n\t\t\t\tbtn.classList.remove('active');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Clear GeoJSON feature related to extended control such as measure and valhalla by TerraDraw feature ID\n\t * @param sourceIds the array of source ID to delete\n\t * @param ids the array of feature ID. Optional, if undefined, delete all labels for source\n\t * @returns void\n\t */\n\tprotected clearExtendedFeatures(\n\t\tsourceIds: string[],\n\t\tids: TerraDrawExtend.FeatureId[] | undefined = undefined\n\t) {\n\t\tif (!this.map) return;\n\t\tfor (const sourceId of sourceIds) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\tsourceId\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\t// if ids is undefined, delete all labels for the source\n\t\t\t\t\tif (ids === undefined) {\n\t\t\t\t\t\tgeojsonSource.data.features = [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Delete label features if originalId does not exist anymore.\n\t\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter((f) => {\n\t\t\t\t\t\t\tif (f.properties?.originalId) {\n\t\t\t\t\t\t\t\treturn !ids.includes(f.properties.originalId);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn !ids.includes(f.id as string);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t\t(this.map.getSource(sourceId) as GeoJSONSource)?.setData(geojsonSource.data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","// index.ts\nimport { point } from \"@turf/helpers\";\nimport { coordEach } from \"@turf/meta\";\nfunction centroid(geojson, options = {}) {\n  let xSum = 0;\n  let ySum = 0;\n  let len = 0;\n  coordEach(\n    geojson,\n    function(coord) {\n      xSum += coord[0];\n      ySum += coord[1];\n      len++;\n    },\n    true\n  );\n  return point([xSum / len, ySum / len], options.properties);\n}\nvar turf_centroid_default = centroid;\nexport {\n  centroid,\n  turf_centroid_default as default\n};\n//# sourceMappingURL=index.js.map","import {\n\tMap,\n\ttype CircleLayerSpecification,\n\ttype GeoJSONSource,\n\ttype GeoJSONSourceSpecification,\n\ttype StyleSpecification,\n\ttype SymbolLayerSpecification\n} from 'maplibre-gl';\nimport { MaplibreTerradrawControl } from './MaplibreTerradrawControl';\nimport { centroid } from '@turf/centroid';\nimport { defaultMeasureControlOptions } from '../constants';\nimport type {\n\tAreaUnit,\n\tDistanceUnit,\n\tforceAreaUnitType,\n\tforceDistanceUnitType,\n\tMeasureControlOptions,\n\tTerradrawMode\n} from '../interfaces';\nimport { type GeoJSONStoreFeatures, TerraDrawExtend } from 'terra-draw';\nimport {\n\tcalcArea,\n\tcalcDistance,\n\tcleanMaplibreStyle,\n\tdebounce,\n\tMemoryCache,\n\tqueryElevationByPoint,\n\tqueryElevationFromRasterDEM,\n\tTERRADRAW_SOURCE_IDS\n} from '../helpers';\n\n/**\n * Maplibre GL Terra Draw Measure Control\n */\nexport class MaplibreMeasureControl extends MaplibreTerradrawControl {\n\tprivate measureOptions: MeasureControlOptions;\n\tprivate elevationCache: MemoryCache<number> | undefined;\n\n\t/**\n\t * The unit of distance can be degrees, radians, miles, or kilometers (default 'kilometers')\n\t * The measuring result will be recalculated once new value is set\n\t */\n\tget distanceUnit() {\n\t\treturn this.measureOptions.distanceUnit ?? 'kilometers';\n\t}\n\tset distanceUnit(value: DistanceUnit) {\n\t\tconst isSame = this.measureOptions.distanceUnit === value;\n\t\tthis.measureOptions.distanceUnit = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The precision of distance value. It will be set different value when distance unit is changed. Using setter to override the value if you want.\n\t */\n\tget distancePrecision() {\n\t\tlet defaultPrecision = 2;\n\t\tif (this.measureOptions.distanceUnit === 'degrees') {\n\t\t\tdefaultPrecision = 6;\n\t\t}\n\t\treturn this.measureOptions.distancePrecision ?? defaultPrecision;\n\t}\n\tset distancePrecision(value: number) {\n\t\tconst isSame = this.measureOptions.distancePrecision === value;\n\t\tthis.measureOptions.distancePrecision = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * Default is `auto`. If `auto` is set, the unit is converted automatically based on the value.\n\t * If a specific unit is specified (e.g., 'km', 'm', 'cm', 'mi', 'ft', 'in'), the value is always returned in that unit.\n\t * This property is only effective when `distanceUnit` is set to 'kilometers' or 'miles'.\n\t * If `distanceUnit` is set to other values (e.g., 'degrees', 'radians'), it will be ignored, and `auto` will be applied.\n\t * If you need to force other unit type, please use DistanceUnit property.\n\t */\n\tget forceDistanceUnit() {\n\t\treturn this.measureOptions.forceDistanceUnit ?? 'auto';\n\t}\n\tset forceDistanceUnit(value: forceDistanceUnitType) {\n\t\tconst isSame = this.measureOptions.forceDistanceUnit === value;\n\t\tthis.measureOptions.forceDistanceUnit = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The unit of area can be metric (m², ha, km²) or imperial (yd², acre, mi²). Default is metric.\n\t * The measuring result will be recalculated once new value is set\n\t */\n\tget areaUnit() {\n\t\treturn this.measureOptions.areaUnit ?? 'metric';\n\t}\n\tset areaUnit(value: AreaUnit) {\n\t\tconst isSame = this.measureOptions.areaUnit === value;\n\t\tthis.measureOptions.areaUnit = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The precision of area value. Using setter to override the value if you want.\n\t */\n\tget areaPrecision() {\n\t\treturn this.measureOptions.areaPrecision ?? 2;\n\t}\n\tset areaPrecision(value: number) {\n\t\tconst isSame = this.measureOptions.areaPrecision === value;\n\t\tthis.measureOptions.areaPrecision = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * Default is `auto`. If `auto` is set, unit is converted depending on the value and selection of area unit. If a specific unit is specified, it returns the value always the same. If a selected unit is not the same type of unit either metric of imperial, it will be ignored, and `auto` will be applied.\n\t */\n\tget forceAreaUnit() {\n\t\treturn this.measureOptions.forceAreaUnit ?? 'auto';\n\t}\n\tset forceAreaUnit(value: forceAreaUnitType) {\n\t\tconst isSame = this.measureOptions.forceAreaUnit === value;\n\t\tthis.measureOptions.forceAreaUnit = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * The flag of whether computing elevation. Default is false.\n\t * Using setter to override the value if you want.\n\t */\n\tget computeElevation() {\n\t\treturn this.measureOptions.computeElevation ?? false;\n\t}\n\tset computeElevation(value: boolean) {\n\t\tconst isSame = this.measureOptions.computeElevation === value;\n\t\tthis.measureOptions.computeElevation = value;\n\t\tif (!isSame) this.recalc();\n\t}\n\n\t/**\n\t * Get/Set font glyph for measure control layers\n\t *\n\t * As default, this maesure control uses maplibre's default font glyphs(`Open Sans Regular,Arial Unicode MS Regular`) described at https://maplibre.org/maplibre-style-spec/layers/#text-font\n\t *\n\t * If you are using your own maplibre style or different map privider, you probably need to set the font glyphs to match your maplibre style.\n\t *\n\t * Font glyph availability depends on what types of glyphs are supported by your maplibre style (e.g., Carto, Openmap tiles, Protomap, Maptiler, etc.)\n\t * Please make sure the font glyphs are available in your maplibre style.\n\t *\n\t * Usage:\n\t *\n\t * ```js\n\t * const drawControl = new MaplibreMeasureControl()\n\t * drawControl.fontGlyphs = ['Open Sans Italic']\n\t * map.addControl(drawControl)\n\t * ```\n\t */\n\tget fontGlyphs() {\n\t\tconst layers = [\n\t\t\tthis.measureOptions.pointLayerLabelSpec,\n\t\t\tthis.measureOptions.lineLayerLabelSpec,\n\t\t\tthis.measureOptions.polygonLayerSpec\n\t\t];\n\t\tconst firstLayer = layers[0];\n\t\treturn (firstLayer &&\n\t\t\tfirstLayer.layout &&\n\t\t\tfirstLayer.layout['text-font']) as unknown as string[];\n\t}\n\n\tset fontGlyphs(fontNames: string[]) {\n\t\tconst layers = [\n\t\t\tthis.measureOptions.pointLayerLabelSpec,\n\t\t\tthis.measureOptions.lineLayerLabelSpec,\n\t\t\tthis.measureOptions.polygonLayerSpec\n\t\t];\n\t\tfor (const layer of layers) {\n\t\t\tif (layer && layer.layout) {\n\t\t\t\tlayer.layout['text-font'] = fontNames;\n\t\t\t}\n\t\t\t// layer exists in maplibre, update glyphs as well\n\t\t\tif (this.map && layer && this.map.getLayer(layer.id)) {\n\t\t\t\tthis.map.setLayoutProperty(layer.id, 'text-font', fontNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Constructor\n\t * @param options Plugin control options\n\t */\n\tconstructor(options?: MeasureControlOptions) {\n\t\tlet measureOptions: MeasureControlOptions = {\n\t\t\t...JSON.parse(JSON.stringify(defaultMeasureControlOptions)),\n\t\t\tmodeOptions: { ...defaultMeasureControlOptions.modeOptions }\n\t\t};\n\n\t\tif (options) {\n\t\t\tmeasureOptions = Object.assign(measureOptions, options);\n\t\t}\n\n\t\t// replace {prefix} with prefixId for sources and layers\n\t\tconst prefixId = measureOptions.adapterOptions?.prefixId ?? 'td-measure';\n\t\tif (measureOptions.adapterOptions && !measureOptions.adapterOptions?.prefixId) {\n\t\t\tmeasureOptions.adapterOptions.prefixId = prefixId;\n\t\t}\n\n\t\t(measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id =\n\t\t\tmeasureOptions.pointLayerLabelSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source =\n\t\t\tmeasureOptions.pointLayerLabelSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\t(measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id =\n\t\t\tmeasureOptions.routingLineLayerNodeSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).source =\n\t\t\tmeasureOptions.routingLineLayerNodeSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\t(measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id =\n\t\t\tmeasureOptions.lineLayerLabelSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source =\n\t\t\tmeasureOptions.lineLayerLabelSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\t(measureOptions.polygonLayerSpec as SymbolLayerSpecification).id =\n\t\t\tmeasureOptions.polygonLayerSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(measureOptions.polygonLayerSpec as SymbolLayerSpecification).source =\n\t\t\tmeasureOptions.polygonLayerSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\tsuper({\n\t\t\tmodes: measureOptions.modes,\n\t\t\topen: measureOptions.open,\n\t\t\tmodeOptions: measureOptions.modeOptions,\n\t\t\tadapterOptions: measureOptions.adapterOptions\n\t\t});\n\t\tthis._cssPrefix = 'measure-';\n\t\tthis.measureOptions = measureOptions;\n\t\tif (\n\t\t\tthis.measureOptions.elevationCacheConfig &&\n\t\t\tthis.measureOptions.elevationCacheConfig?.enabled\n\t\t) {\n\t\t\tthis.elevationCache = new MemoryCache<number>(\n\t\t\t\tthis.measureOptions.elevationCacheConfig.maxSize,\n\t\t\t\tthis.measureOptions.elevationCacheConfig.ttl\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * add the plugin control to maplibre\n\t * @param map Maplibre Map object\n\t * @returns HTML Element\n\t */\n\tpublic onAdd(map: Map): HTMLElement {\n\t\tthis.controlContainer = super.onAdd(map);\n\t\treturn this.controlContainer;\n\t}\n\n\t/**\n\t * Remove the plugin control from maplibre\n\t * @returns void\n\t */\n\tpublic onRemove(): void {\n\t\tthis.unregisterMesureControl();\n\t\tsuper.onRemove();\n\t}\n\n\t/**\n\t * Activate Terra Draw to start drawing\n\t */\n\tpublic activate() {\n\t\tsuper.activate();\n\t\tthis.registerMesureControl();\n\t}\n\n\t/**\n\t * Recalculate area and distance in TerraDraw snapshot\n\t *\n\t * if you use `addFeatures` to restore GeoJSON features to TerraDraw, this recalc method needs to be called to re-measure again.\n\t *\n\t * For example, the below code is an example usage.\n\t * ```\n\t * drawInstance?.addFeatures(initData);\n\t * map?.once('idle', ()=>{\n\t *   drawControl.recalc()\n\t * })\n\t * ```\n\t */\n\tpublic recalc() {\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (drawInstance) {\n\t\t\tthis.registerMesureControl();\n\n\t\t\tconst snapshot = drawInstance.getSnapshot();\n\t\t\tfor (const feature of snapshot) {\n\t\t\t\tconst id: string = feature.id as string;\n\t\t\t\tconst geometryType = feature.geometry.type;\n\t\t\t\tconst mode = feature.properties.mode as TerradrawMode;\n\t\t\t\tif (['linestring', 'freehand-linestring'].includes(mode) && geometryType === 'LineString') {\n\t\t\t\t\tthis.measureLine(id);\n\t\t\t\t\tthis.computeElevationByLineFeatureID(id);\n\t\t\t\t} else if (mode === 'point' && geometryType === 'Point') {\n\t\t\t\t\tthis.measurePoint(id);\n\t\t\t\t\tthis.computeElevationByPointFeatureID(id);\n\t\t\t\t} else if (\n\t\t\t\t\t!['point', 'linestring', 'freehand-linestring', 'select', 'render'].includes(mode) &&\n\t\t\t\t\tgeometryType === 'Polygon'\n\t\t\t\t) {\n\t\t\t\t\tthis.measurePolygon(id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * clean maplibre style to filter only for terradraw related layers or without them.\n\t * If options are not set, returns original style given to the function.\n\t *\n\t * This can be useful incase users only want to get terradraw related layers or without it.\n\t *\n\t * Usage:\n\t * `cleanStyle(map.getStyle, { excludeTerraDrawLayers: true})`\n\t * `cleanStyle(map.getStyle, { onlyTerraDrawLayers: true})`\n\t *\n\t * @param style maplibre style spec\n\t * @param options.excludeTerraDrawLayers return maplibre style without terradraw layers and sources\n\t * @param options.onlyTerraDrawLayers return maplibre style with only terradraw layers and sources\n\t * @returns\n\t */\n\tpublic cleanStyle(\n\t\tstyle: StyleSpecification,\n\t\toptions?: { excludeTerraDrawLayers?: boolean; onlyTerraDrawLayers?: boolean }\n\t) {\n\t\tconst sourceIds = TERRADRAW_SOURCE_IDS;\n\n\t\tconst polygonSource = this.measureOptions.polygonLayerSpec?.source;\n\t\tif (polygonSource) sourceIds.push(polygonSource);\n\n\t\tconst lineSource = this.measureOptions.lineLayerLabelSpec?.source;\n\t\tif (lineSource) sourceIds.push(lineSource);\n\n\t\tconst pointSource = this.measureOptions.pointLayerLabelSpec?.source;\n\t\tif (pointSource) sourceIds.push(pointSource);\n\n\t\treturn cleanMaplibreStyle(\n\t\t\tstyle,\n\t\t\toptions,\n\t\t\tsourceIds,\n\t\t\tthis.measureOptions.adapterOptions?.prefixId\n\t\t);\n\t}\n\n\t/**\n\t * Register  measure control related maplibre sources and layers\n\t */\n\tprivate registerMesureControl() {\n\t\tif (!this.map) return;\n\n\t\tconst lineModes = this.options.modes?.filter((m) =>\n\t\t\t['linestring', 'freehand-linestring'].includes(m)\n\t\t);\n\t\tconst pointMode = this.options.modes?.find((m) => m === 'point');\n\n\t\tif (pointMode) {\n\t\t\t// add GeoJSON source for distance label\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for distance label node appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer((this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification);\n\t\t\t}\n\t\t}\n\n\t\tif (lineModes && lineModes.length > 0) {\n\t\t\t// add GeoJSON source for distance label\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for distance label node appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer(\n\t\t\t\t\t(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for distance label appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification);\n\t\t\t}\n\t\t}\n\n\t\tconst polygonModes = this.options.modes?.filter((m) =>\n\t\t\t[\n\t\t\t\t'polygon',\n\t\t\t\t'rectangle',\n\t\t\t\t'angled-rectangle',\n\t\t\t\t'circle',\n\t\t\t\t'sector',\n\t\t\t\t'sensor',\n\t\t\t\t'freehand'\n\t\t\t].includes(m)\n\t\t);\n\t\tif (polygonModes && polygonModes.length > 0) {\n\t\t\t// add GeoJSON source for distance label\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} // add GeoJSON layer for polygon area label appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification);\n\t\t\t}\n\t\t}\n\n\t\tif ((lineModes && lineModes.length > 0) || (polygonModes && polygonModes.length > 0)) {\n\t\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\t\tif (drawInstance) {\n\t\t\t\t// subscribe change event of TerraDraw to calc distance\n\t\t\t\tdrawInstance.on('change', this.handleTerradrawFeatureChanged.bind(this));\n\t\t\t\tdrawInstance.on('finish', this.handleTerradrawFeatureReady.bind(this));\n\t\t\t\tdrawInstance.on('deselect', this.handleTerradrawDeselect.bind(this));\n\n\t\t\t\t// subscribe feature-deleted event for the plugin control\n\t\t\t\tthis.on('feature-deleted', this.onFeatureDeleted.bind(this));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Handle deselect event of terradraw\n\t */\n\tprivate handleTerradrawDeselect = () => {\n\t\tif (!this.map) return;\n\t\tif (this.computeElevation === true && this.measureOptions.terrainSource !== undefined) {\n\t\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\t\tif (!drawInstance) return;\n\t\t\tconst snapshot = drawInstance.getSnapshot();\n\t\t\tconst lineFeatures = snapshot.filter(\n\t\t\t\t(f) =>\n\t\t\t\t\tf.properties.mode &&\n\t\t\t\t\t['linestring', 'freehand-linestring'].includes(f.properties.mode as string) &&\n\t\t\t\t\tf.geometry.type === 'LineString'\n\t\t\t);\n\t\t\tif (lineFeatures.length > 0) {\n\t\t\t\tfor (const f of lineFeatures) {\n\t\t\t\t\tthis.computeElevationByLineFeatureID(f.id as string);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst pointFeatures = snapshot.filter(\n\t\t\t\t(f) => f.properties.mode === 'point' && f.geometry.type === 'Point'\n\t\t\t);\n\t\t\tif (pointFeatures.length > 0) {\n\t\t\t\tfor (const f of pointFeatures) {\n\t\t\t\t\tthis.computeElevationByPointFeatureID(f.id as string);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Handle finish event of terradraw. It will be called after finishing adding a feature\n\t * @param id Feature ID\n\t */\n\tprivate handleTerradrawFeatureReady = debounce((id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tthis.computeElevationByLineFeatureID(id);\n\t\tthis.computeElevationByPointFeatureID(id);\n\t}, 300);\n\n\t/**\n\t * Handle change event of TerraDraw\n\t * @param ids Feature IDs\n\t */\n\tprivate handleTerradrawFeatureChanged(ids: TerraDrawExtend.FeatureId[], type: string) {\n\t\tif (!this.map) return;\n\t\t// skip if type is styling. Do continue if type is create, update or delete.\n\t\tif (type === 'styling') return;\n\n\t\tconst sources = [\n\t\t\tthis.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification,\n\t\t\tthis.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification,\n\t\t\tthis.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification,\n\t\t\tthis.measureOptions.polygonLayerSpec as SymbolLayerSpecification\n\t\t];\n\t\tconst sourceIds = sources.map((src) => src.source);\n\n\t\tif (type === 'delete') {\n\t\t\tthis.clearExtendedFeatures(sourceIds, ids);\n\t\t\treturn;\n\t\t}\n\n\t\t// type is create or update\n\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tfor (const id of ids) {\n\t\t\tconst feature = snapshot.find((f) => f.id === id);\n\t\t\tif (feature) {\n\t\t\t\tconst geometryType = feature.geometry.type;\n\t\t\t\tconst mode = feature.properties.mode as TerradrawMode;\n\t\t\t\tif (['linestring', 'freehand-linestring'].includes(mode) && geometryType === 'LineString') {\n\t\t\t\t\tthis.measureLine(id);\n\t\t\t\t} else if (mode === 'point' && geometryType === 'Point') {\n\t\t\t\t\tthis.measurePoint(id);\n\t\t\t\t} else if (\n\t\t\t\t\t!['point', 'linestring', 'freehand-linestring', 'select', 'render'].includes(mode) &&\n\t\t\t\t\tgeometryType === 'Polygon'\n\t\t\t\t) {\n\t\t\t\t\tthis.measurePolygon(id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// if editing ID does not exist, delete all related features from measure layers\n\t\t\t\tthis.clearExtendedFeatures(sourceIds, [id]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Unregister measure control related maplibre sources and layers\n\t */\n\tprivate unregisterMesureControl() {\n\t\tthis.off('feature-deleted', this.onFeatureDeleted.bind(this));\n\t\tif (!this.map) return;\n\t\tif (\n\t\t\tthis.map.getLayer((this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t) {\n\t\t\tthis.map.removeLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getLayer(\n\t\t\t\t(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t);\n\t\t}\n\t\tif (this.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)) {\n\t\t\tthis.map.removeLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getSource(\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getSource(\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getSource((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Replace GeoJSON source with updated features for a given source ID\n\t * @param updatedFeatures Updated GeoJSON features\n\t * @param sourceId Source ID to update\n\t * @param type either 'linestring' or 'point'\n\t */\n\tprivate replaceGeoJSONSource(\n\t\tupdatedFeatures: GeoJSONStoreFeatures[],\n\t\tsourceId: string,\n\t\ttype: 'linestring' | 'point'\n\t) {\n\t\tif (!this.map) return;\n\t\tconst newGeoJsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\tsourceId\n\t\t] as GeoJSONSourceSpecification;\n\t\tif (newGeoJsonSource) {\n\t\t\tif (\n\t\t\t\ttypeof newGeoJsonSource.data !== 'string' &&\n\t\t\t\tnewGeoJsonSource.data.type === 'FeatureCollection'\n\t\t\t) {\n\t\t\t\t// check if feature id still exist in terradraw\n\t\t\t\t// in some conditions, features might already be deleted from terradraw\n\t\t\t\tconst updatedExistingFeatures: GeoJSONStoreFeatures[] = [];\n\t\t\t\tfor (const f of updatedFeatures) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tthis.terradraw?.getSnapshotFeature(f.id as TerraDrawExtend.FeatureId) ||\n\t\t\t\t\t\tthis.terradraw?.getSnapshotFeature(f.properties.originalId as TerraDrawExtend.FeatureId)\n\t\t\t\t\t) {\n\t\t\t\t\t\tupdatedExistingFeatures.push(f);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst ids = updatedExistingFeatures.map((f) => f.id);\n\t\t\t\tif (\n\t\t\t\t\ttypeof newGeoJsonSource.data !== 'string' &&\n\t\t\t\t\tnewGeoJsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tif (type === 'linestring') {\n\t\t\t\t\t\tnewGeoJsonSource.data.features = [\n\t\t\t\t\t\t\t...(newGeoJsonSource.data.features = newGeoJsonSource.data.features.filter(\n\t\t\t\t\t\t\t\t(f) => !(ids.includes(f.properties?.originalId) && f.geometry.type === 'Point')\n\t\t\t\t\t\t\t)),\n\t\t\t\t\t\t\t...updatedExistingFeatures\n\t\t\t\t\t\t];\n\t\t\t\t\t} else if (type === 'point') {\n\t\t\t\t\t\tnewGeoJsonSource.data.features = [\n\t\t\t\t\t\t\t...(newGeoJsonSource.data.features = newGeoJsonSource.data.features.filter(\n\t\t\t\t\t\t\t\t(f) => !(ids.includes(f.id) && f.geometry.type === 'Point')\n\t\t\t\t\t\t\t)),\n\t\t\t\t\t\t\t...updatedExistingFeatures\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\n\t\t\t\t\t// delete duplicate points\n\t\t\t\t\tconst featureMap: { [key: TerraDrawExtend.FeatureId]: GeoJSONStoreFeatures } = {};\n\t\t\t\t\tnewGeoJsonSource.data.features.forEach((feature) => {\n\t\t\t\t\t\tconst id = feature.id as TerraDrawExtend.FeatureId;\n\n\t\t\t\t\t\tif (!featureMap[id]) {\n\t\t\t\t\t\t\tfeatureMap[id] = feature as GeoJSONStoreFeatures;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst existingFeature = featureMap[id];\n\t\t\t\t\t\t\tif (!existingFeature.properties.elevation && feature.properties?.elevation) {\n\t\t\t\t\t\t\t\tfeatureMap[id] = feature as GeoJSONStoreFeatures;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tnewGeoJsonSource.data.features = Array.from(Object.values(featureMap));\n\n\t\t\t\t\t// update features\n\t\t\t\t\t(this.map.getSource(sourceId) as GeoJSONSource)?.setData(newGeoJsonSource.data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Compute elevation by a LineString feature ID\n\t * @param id FeatureID\n\t */\n\tprivate computeElevationByLineFeatureID = async (id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tif (this.computeElevation === true) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tconst points: GeoJSONStoreFeatures[] = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.properties?.originalId === id && f.geometry.type === 'Point'\n\t\t\t\t\t) as unknown as GeoJSONStoreFeatures[];\n\t\t\t\t\tif (points && points.length > 0) {\n\t\t\t\t\t\tconst updatedFeatures = await queryElevationFromRasterDEM(\n\t\t\t\t\t\t\tpoints as GeoJSONStoreFeatures[],\n\t\t\t\t\t\t\tthis.measureOptions.terrainSource,\n\t\t\t\t\t\t\tthis.measureOptions.elevationCacheConfig,\n\t\t\t\t\t\t\tthis.elevationCache\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.replaceGeoJSONSource(\n\t\t\t\t\t\t\tupdatedFeatures,\n\t\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t\t\t'linestring'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Compute elevation by a Point feature ID\n\t * @param id FeatureID\n\t */\n\tprivate computeElevationByPointFeatureID = async (id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tif (this.computeElevation === true) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tconst points: GeoJSONStoreFeatures[] = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.id === id && f.geometry.type === 'Point' && f.properties?.mode === 'point'\n\t\t\t\t\t) as unknown as GeoJSONStoreFeatures[];\n\t\t\t\t\tif (points && points.length > 0) {\n\t\t\t\t\t\tconst updatedFeatures = await queryElevationFromRasterDEM(\n\t\t\t\t\t\t\tpoints as GeoJSONStoreFeatures[],\n\t\t\t\t\t\t\tthis.measureOptions.terrainSource,\n\t\t\t\t\t\t\tthis.measureOptions.elevationCacheConfig,\n\t\t\t\t\t\t\tthis.elevationCache\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.replaceGeoJSONSource(\n\t\t\t\t\t\t\tupdatedFeatures,\n\t\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source,\n\t\t\t\t\t\t\t'point'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * measure polygon area for given feature ID\n\t * @param id terradraw feature id\n\t */\n\tprivate measurePolygon(id: TerraDrawExtend.FeatureId) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tlet feature = snapshot?.find((f) => f.id === id && f.geometry.type === 'Polygon');\n\t\tif (feature) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.properties?.originalId !== id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst point = JSON.parse(JSON.stringify(feature));\n\t\t\t\tpoint.id = point.id + '-area-label';\n\t\t\t\tpoint.geometry = centroid(feature.geometry).geometry;\n\t\t\t\tpoint.properties.originalId = feature.id;\n\n\t\t\t\tfeature = calcArea(feature, this.areaUnit, this.areaPrecision, this.forceAreaUnit);\n\t\t\t\tpoint.properties.area = feature.properties.area;\n\t\t\t\tpoint.properties.unit = feature.properties.unit;\n\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features.push(point);\n\t\t\t\t}\n\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t(\n\t\t\t\t\tthis.map.getSource(\n\t\t\t\t\t\t(this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).source\n\t\t\t\t\t) as GeoJSONSource\n\t\t\t\t)?.setData(geojsonSource.data);\n\n\t\t\t\tthis.map.moveLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer(\n\t\t\t\t\t\t(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * measure line distance for given feature ID\n\t * @param id terradraw feature id\n\t */\n\tprivate measureLine(id: TerraDrawExtend.FeatureId) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tlet feature = snapshot?.find((f) => f.id === id && f.geometry.type === 'LineString');\n\t\tif (feature) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter(\n\t\t\t\t\t\t(f) => f.properties?.originalId !== id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tfeature = calcDistance(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.distanceUnit,\n\t\t\t\t\tthis.distancePrecision,\n\t\t\t\t\tthis.forceDistanceUnit,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\t\t\t\tconst segments = feature.properties.segments as unknown as GeoJSONStoreFeatures[];\n\t\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\t\tconst segment = segments[i];\n\t\t\t\t\tconst coordinates: number[][] = segment.geometry.coordinates as number[][];\n\t\t\t\t\tconst start = coordinates[0];\n\t\t\t\t\tconst end = coordinates[1];\n\n\t\t\t\t\t// node\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tconst startNode = JSON.parse(JSON.stringify(segment));\n\t\t\t\t\t\tstartNode.id = `${segment.id}-node-${i}`;\n\t\t\t\t\t\tstartNode.geometry = {\n\t\t\t\t\t\t\ttype: 'Point',\n\t\t\t\t\t\t\tcoordinates: start\n\t\t\t\t\t\t};\n\t\t\t\t\t\tstartNode.properties.distance = 0;\n\t\t\t\t\t\tstartNode.properties.total = 0;\n\n\t\t\t\t\t\tif (segment.properties.elevation_start) {\n\t\t\t\t\t\t\tstartNode.properties.elevation = segment.properties.elevation_start;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tgeojsonSource.data.features.push(startNode);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst endNode = JSON.parse(JSON.stringify(segment));\n\t\t\t\t\tendNode.id = `${segment.id}-node-${i + 1}`;\n\t\t\t\t\tendNode.geometry = {\n\t\t\t\t\t\ttype: 'Point',\n\t\t\t\t\t\tcoordinates: end\n\t\t\t\t\t};\n\n\t\t\t\t\tif (segment.properties.elevation_end) {\n\t\t\t\t\t\tendNode.properties.elevation = segment.properties.elevation_end;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t) {\n\t\t\t\t\t\tgeojsonSource.data.features.push(endNode);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t(\n\t\t\t\t\tthis.map.getSource(\n\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t\t) as GeoJSONSource\n\t\t\t\t)?.setData(geojsonSource.data);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\t\t\t\t}\n\n\t\t\t\tthis.map.moveLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id);\n\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * measure point elevation for given feature ID\n\t * @param id terradraw feature id\n\t */\n\tprivate measurePoint(id: TerraDrawExtend.FeatureId) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (!drawInstance) return;\n\n\t\tconst snapshot = drawInstance.getSnapshot();\n\t\tlet feature = snapshot?.find((f) => f.id === id && f.geometry.type === 'Point');\n\t\tif (feature) {\n\t\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t] as GeoJSONSourceSpecification;\n\t\t\tif (geojsonSource) {\n\t\t\t\t// delete old nodes\n\t\t\t\tif (\n\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t) {\n\t\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter((f) => f.id !== id);\n\t\t\t\t}\n\n\t\t\t\tfeature = queryElevationByPoint(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\n\t\t\t\t// add elevation label feature if computeElevation is only enabled.\n\t\t\t\tif (this.computeElevation === true) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t) {\n\t\t\t\t\t\tgeojsonSource.data.features.push(feature);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update GeoJSON source with new data\n\t\t\t\t(\n\t\t\t\t\tthis.map.getSource(\n\t\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).source\n\t\t\t\t\t) as GeoJSONSource\n\t\t\t\t)?.setData(geojsonSource.data);\n\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer((this.measureOptions.polygonLayerSpec as SymbolLayerSpecification).id);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.map.getLayer((this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id)\n\t\t\t\t) {\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t\t(this.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis.map.moveLayer(\n\t\t\t\t\t(this.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Event definition when feature is deleted by terradraw\n\t */\n\tprivate onFeatureDeleted(args: unknown) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (drawInstance) {\n\t\t\tlet deletedIds: string[] = [];\n\t\t\tif (typeof args === 'object' && args !== null && 'deletedIds' in args) {\n\t\t\t\tdeletedIds = (args as { deletedIds: string[] }).deletedIds;\n\t\t\t}\n\n\t\t\tconst sources = [\n\t\t\t\tthis.measureOptions.pointLayerLabelSpec as SymbolLayerSpecification,\n\t\t\t\tthis.measureOptions.lineLayerLabelSpec as SymbolLayerSpecification,\n\t\t\t\tthis.measureOptions.routingLineLayerNodeSpec as CircleLayerSpecification,\n\t\t\t\tthis.measureOptions.polygonLayerSpec as SymbolLayerSpecification\n\t\t\t];\n\t\t\tconst sourceIds = sources.map((src) => src.source);\n\t\t\tif (deletedIds && deletedIds.length > 0) {\n\t\t\t\t// delete only features by IDs\n\t\t\t\tthis.clearExtendedFeatures(sourceIds, deletedIds);\n\t\t\t} else {\n\t\t\t\t// delete all features\n\t\t\t\tthis.clearExtendedFeatures(sourceIds, undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * get GeoJSON features\n\t * @param onlySelected If true, returns only selected features. Default is false.\n\t * @returns FeatureCollection in GeoJSON format\n\t */\n\tpublic getFeatures(onlySelected = false) {\n\t\tconst fc = super.getFeatures(onlySelected);\n\t\tif (!fc) return fc;\n\t\tif (!this.terradraw) return fc;\n\n\t\tfor (let i = 0; i < fc.features.length; i++) {\n\t\t\tconst feature = fc.features[i];\n\t\t\tif (!this.map) continue;\n\t\t\tif (!this.map.loaded()) continue;\n\t\t\tconst geomType = feature.geometry.type;\n\t\t\tif (geomType === 'LineString') {\n\t\t\t\tfc.features[i] = calcDistance(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.distanceUnit,\n\t\t\t\t\tthis.distancePrecision,\n\t\t\t\t\tthis.forceDistanceUnit,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\t\t\t} else if (geomType === 'Polygon') {\n\t\t\t\tfc.features[i] = calcArea(feature, this.areaUnit, this.areaPrecision, this.forceAreaUnit);\n\t\t\t} else if (geomType === 'Point') {\n\t\t\t\tfc.features[i] = queryElevationByPoint(\n\t\t\t\t\tfeature,\n\t\t\t\t\tthis.map,\n\t\t\t\t\tthis.computeElevation,\n\t\t\t\t\tthis.measureOptions.terrainSource\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn fc;\n\t}\n}\n","import { MaplibreTerradrawControl } from './MaplibreTerradrawControl';\nimport { defaultValhallaControlOptions } from '../constants';\nimport type {\n\tTerradrawMode,\n\tTerradrawValhallaMode,\n\tValhallaControlOptions,\n\tValhallaOptions\n} from '../interfaces';\nimport {\n\tGeoJSONSource,\n\tLngLat,\n\ttype CircleLayerSpecification,\n\ttype FillLayerSpecification,\n\ttype GeoJSONSourceSpecification,\n\ttype LineLayerSpecification,\n\ttype Map,\n\ttype StyleSpecification,\n\ttype SymbolLayerSpecification\n} from 'maplibre-gl';\nimport type { GeoJSONStoreFeatures, GeoJSONStoreGeometries, TerraDrawExtend } from 'terra-draw';\nimport {\n\tdebounce,\n\tModalDialog,\n\troutingDistanceUnitOptions,\n\ttype routingDistanceUnitType,\n\tcostingModelOptions,\n\tValhallaRouting,\n\ttype costingModelType,\n\tTERRADRAW_SOURCE_IDS,\n\tcleanMaplibreStyle,\n\tValhallaIsochrone,\n\ttype Contour,\n\ttype ContourType,\n\tcontourTypeOptions\n} from '../helpers';\n\n/**\n * Maplibre GL Terra Draw Measure Control\n */\nexport class MaplibreValhallaControl extends MaplibreTerradrawControl {\n\tprivate controlOptions: ValhallaControlOptions;\n\tprivate valhallaOptions: ValhallaOptions;\n\tprivate _modalDialog: ModalDialog | undefined;\n\n\t/**\n\t * Get the URL of Valhalla API\n\t */\n\tget valhallaUrl() {\n\t\treturn this.valhallaOptions.url as string;\n\t}\n\t/**\n\t * Set the URL of Valhalla API\n\t * @param value URL of Valhalla API\n\t */\n\tset valhallaUrl(value: string) {\n\t\tthis.valhallaOptions.url = value;\n\t}\n\n\t/**\n\t * Get the means of transport for Valhalla routing api\n\t * @returns costingModelType\n\t * @example 'pedestrian', 'bicycle', 'auto'\n\t */\n\tget routingCostingModel() {\n\t\treturn this.valhallaOptions.routingOptions?.costingModel as costingModelType;\n\t}\n\t/**\n\t * Set the means of transport for Valhalla routing api\n\t * @param value costingModelType\n\t * @example 'pedestrian', 'bicycle', 'auto'\n\t */\n\tset routingCostingModel(value: costingModelType) {\n\t\tif (!this.valhallaOptions.routingOptions) {\n\t\t\tthis.valhallaOptions.routingOptions = {};\n\t\t}\n\t\tthis.valhallaOptions.routingOptions.costingModel = value;\n\t\tthis.createSettingsDialog();\n\t}\n\n\t/**\n\t * Get the distance unit for Valhalla routing api\n\t * @returns routingDistanceUnitType\n\t * @example 'kilometers', 'miles'\n\t */\n\tget routingDistanceUnit() {\n\t\treturn this.valhallaOptions.routingOptions?.distanceUnit as routingDistanceUnitType;\n\t}\n\n\t/**\n\t * Set the distance unit for Valhalla routing api\n\t * @param value routingDistanceUnitType\n\t * @example 'kilometers', 'miles'\n\t */\n\tset routingDistanceUnit(value: routingDistanceUnitType) {\n\t\tif (!this.valhallaOptions.routingOptions) {\n\t\t\tthis.valhallaOptions.routingOptions = {};\n\t\t}\n\t\tthis.valhallaOptions.routingOptions.distanceUnit = value;\n\t\tthis.createSettingsDialog();\n\t}\n\n\t/**\n\t * Get the contour type for Valhalla isochrone api\n\t * @returns ContourType\n\t * @example 'time', 'distance'\n\t */\n\tget isochroneContourType() {\n\t\treturn this.valhallaOptions.isochroneOptions?.contourType as ContourType;\n\t}\n\t/**\n\t * Set the contour type for Valhalla isochrone api\n\t * @param value ContourType\n\t * @example 'time', 'distance'\n\t */\n\tset isochroneContourType(value: ContourType) {\n\t\tif (!this.valhallaOptions.isochroneOptions) {\n\t\t\tthis.valhallaOptions.isochroneOptions = {};\n\t\t}\n\t\tthis.valhallaOptions.isochroneOptions.contourType = value;\n\t\tthis.createSettingsDialog();\n\t}\n\n\t/**\n\t * Get the means of transport for Valhalla isochrone api\n\t * @returns isochroneCostingModelType\n\t * @example 'pedestrian', 'bicycle', 'auto'\n\t */\n\tget isochroneCostingModel() {\n\t\treturn this.valhallaOptions.isochroneOptions?.costingModel as costingModelType;\n\t}\n\t/**\n\t * Set the means of transport for Valhalla isochrone api\n\t * @param value isochroneCostingModelType\n\t * @example 'pedestrian', 'bicycle', 'auto'\n\t */\n\tset isochroneCostingModel(value: costingModelType) {\n\t\tif (!this.valhallaOptions.isochroneOptions) {\n\t\t\tthis.valhallaOptions.isochroneOptions = {};\n\t\t}\n\t\tthis.valhallaOptions.isochroneOptions.costingModel = value;\n\t\tthis.createSettingsDialog();\n\t}\n\n\t/**\n\t * Get the list of contours for Valhalla isochrone api\n\t * @returns Contour[]\n\t */\n\tget isochroneContours() {\n\t\treturn this.valhallaOptions.isochroneOptions?.contours as Contour[];\n\t}\n\n\t/**\n\t * Set the list of contours for Valhalla isochrone api\n\t * @param value Contour[]\n\t */\n\tset isochroneContours(value: Contour[]) {\n\t\tif (!this.valhallaOptions.isochroneOptions) {\n\t\t\tthis.valhallaOptions.isochroneOptions = {};\n\t\t}\n\t\tthis.valhallaOptions.isochroneOptions.contours = value;\n\t\tthis.createSettingsDialog();\n\t}\n\n\t/**\n\t * Get/Set font glyph for valhalla control layers\n\t *\n\t * As default, this maesure control uses maplibre's default font glyphs(`Open Sans Regular,Arial Unicode MS Regular`) described at https://maplibre.org/maplibre-style-spec/layers/#text-font\n\t *\n\t * If you are using your own maplibre style or different map privider, you probably need to set the font glyphs to match your maplibre style.\n\t *\n\t * Font glyph availability depends on what types of glyphs are supported by your maplibre style (e.g., Carto, Openmap tiles, Protomap, Maptiler, etc.)\n\t * Please make sure the font glyphs are available in your maplibre style.\n\t *\n\t * Usage:\n\t *\n\t * ```js\n\t * const drawControl = new MaplibreValhallaControl()\n\t * drawControl.fontGlyphs = ['Open Sans Italic']\n\t * map.addControl(drawControl)\n\t * ```\n\t */\n\tget fontGlyphs() {\n\t\tconst layers = [this.controlOptions.routingLineLayerNodeLabelSpec];\n\t\tconst firstLayer = layers[0];\n\t\treturn (firstLayer &&\n\t\t\tfirstLayer.layout &&\n\t\t\tfirstLayer.layout['text-font']) as unknown as string[];\n\t}\n\n\tset fontGlyphs(fontNames: string[]) {\n\t\tconst layers = [this.controlOptions.routingLineLayerNodeLabelSpec];\n\t\tfor (const layer of layers) {\n\t\t\tif (layer && layer.layout) {\n\t\t\t\tlayer.layout['text-font'] = fontNames;\n\t\t\t}\n\t\t\t// layer exists in maplibre, update glyphs as well\n\t\t\tif (this.map && layer && this.map.getLayer(layer.id)) {\n\t\t\t\tthis.map.setLayoutProperty(layer.id, 'text-font', fontNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get the dialog instance for settings\n\t */\n\tget settingDialog(): ModalDialog {\n\t\treturn this._modalDialog as ModalDialog;\n\t}\n\t/**\n\t * Set the dialog instance for settings\n\t */\n\tset settingDialog(value: ModalDialog) {\n\t\tthis._modalDialog = value;\n\t}\n\n\t/**\n\t * Constructor\n\t * @param options Plugin control options\n\t */\n\tconstructor(options?: ValhallaControlOptions) {\n\t\tlet _options: ValhallaControlOptions = {\n\t\t\t...JSON.parse(JSON.stringify(defaultValhallaControlOptions)),\n\t\t\tmodeOptions: { ...defaultValhallaControlOptions.modeOptions }\n\t\t};\n\t\tif (options) {\n\t\t\t_options = Object.assign(_options, options);\n\t\t\t_options.valhallaOptions = Object.assign(\n\t\t\t\tJSON.parse(JSON.stringify(defaultValhallaControlOptions.valhallaOptions)),\n\t\t\t\t_options.valhallaOptions as ValhallaOptions\n\t\t\t);\n\t\t}\n\n\t\t// replace {prefix} with prefixId for sources and layers\n\t\tif (!_options.adapterOptions) {\n\t\t\t_options.adapterOptions = {};\n\t\t}\n\t\t_options.adapterOptions.prefixId = _options.adapterOptions?.prefixId ?? 'td-valhalla';\n\n\t\tconst prefixId = _options.adapterOptions?.prefixId ?? 'td-valhalla';\n\n\t\t(_options.routingLineLayerNodeLabelSpec as SymbolLayerSpecification).id =\n\t\t\t_options.routingLineLayerNodeLabelSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(_options.routingLineLayerNodeLabelSpec as SymbolLayerSpecification).source =\n\t\t\t_options.routingLineLayerNodeLabelSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\t(_options.routingLineLayerNodeSpec as CircleLayerSpecification).id =\n\t\t\t_options.routingLineLayerNodeSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(_options.routingLineLayerNodeSpec as CircleLayerSpecification).source =\n\t\t\t_options.routingLineLayerNodeSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\t(_options.isochronePolygonLayerSpec as FillLayerSpecification).id =\n\t\t\t_options.isochronePolygonLayerSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(_options.isochronePolygonLayerSpec as FillLayerSpecification).source =\n\t\t\t_options.isochronePolygonLayerSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\t(_options.isochroneLineLayerSpec as LineLayerSpecification).id =\n\t\t\t_options.isochroneLineLayerSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(_options.isochroneLineLayerSpec as LineLayerSpecification).source =\n\t\t\t_options.isochroneLineLayerSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\t(_options.isochroneLabelLayerSpec as SymbolLayerSpecification).id =\n\t\t\t_options.isochroneLabelLayerSpec?.id.replace('{prefix}', prefixId) as string;\n\t\t(_options.isochroneLabelLayerSpec as SymbolLayerSpecification).source =\n\t\t\t_options.isochroneLabelLayerSpec?.source.replace('{prefix}', prefixId) as string;\n\n\t\tsuper({\n\t\t\tmodes: _options.modes as unknown as TerradrawMode[],\n\t\t\topen: _options.open,\n\t\t\tmodeOptions: _options.modeOptions,\n\t\t\tadapterOptions: _options.adapterOptions\n\t\t});\n\t\tthis.valhallaOptions = _options.valhallaOptions as ValhallaOptions;\n\n\t\tif (!this.valhallaOptions.url) {\n\t\t\tthrow new Error(\n\t\t\t\t'Valhalla URL is required for this control. Please set valhallaOptions.url in options.'\n\t\t\t);\n\t\t}\n\t\tthis._cssPrefix = 'valhalla-';\n\t\tthis.controlOptions = _options;\n\t}\n\n\t/**\n\t * add the plugin control to maplibre\n\t * @param map Maplibre Map object\n\t * @returns HTML Element\n\t */\n\tpublic onAdd(map: Map): HTMLElement {\n\t\tthis.controlContainer = super.onAdd(map);\n\t\tthis.createSettingsDialog();\n\t\treturn this.controlContainer;\n\t}\n\n\t/**\n\t * Remove the plugin control from maplibre\n\t * @returns void\n\t */\n\tpublic onRemove(): void {\n\t\tthis.unregisterValhallaControl();\n\t\tsuper.onRemove();\n\t}\n\n\t/**\n\t * Activate Terra Draw to start drawing\n\t */\n\tpublic activate() {\n\t\tsuper.activate();\n\t\tthis.registerValhallaControl();\n\t}\n\n\t/**\n\t * clean maplibre style to filter only for terradraw related layers or without them.\n\t * If options are not set, returns original style given to the function.\n\t *\n\t * This can be useful incase users only want to get terradraw related layers or without it.\n\t *\n\t * Usage:\n\t * `cleanStyle(map.getStyle, { excludeTerraDrawLayers: true})`\n\t * `cleanStyle(map.getStyle, { onlyTerraDrawLayers: true})`\n\t *\n\t * @param style maplibre style spec\n\t * @param options.excludeTerraDrawLayers return maplibre style without terradraw layers and sources\n\t * @param options.onlyTerraDrawLayers return maplibre style with only terradraw layers and sources\n\t * @returns\n\t */\n\tpublic cleanStyle(\n\t\tstyle: StyleSpecification,\n\t\toptions?: { excludeTerraDrawLayers?: boolean; onlyTerraDrawLayers?: boolean }\n\t) {\n\t\tconst sourceIds = TERRADRAW_SOURCE_IDS;\n\n\t\tconst pointSource = this.controlOptions.routingLineLayerNodeSpec?.source;\n\t\tif (pointSource) sourceIds.push(pointSource);\n\n\t\tconst polygonSource = this.controlOptions.isochronePolygonLayerSpec?.source;\n\t\tif (polygonSource) sourceIds.push(polygonSource);\n\n\t\treturn cleanMaplibreStyle(style, options, sourceIds, this.options.adapterOptions?.prefixId);\n\t}\n\n\t/**\n\t * Create the settings dialog for Valhalla control\n\t */\n\tprivate createSettingsDialog() {\n\t\tthis.settingDialog = new ModalDialog(\n\t\t\t`maplibregl-terradraw-${this.cssPrefix}settings-dialog`,\n\t\t\t'Settings'\n\t\t);\n\t\tthis.settingDialog.create(\n\t\t\tthis.map?.getContainer().parentElement as HTMLElement,\n\t\t\t(content: HTMLDivElement) => {\n\t\t\t\t// Tab container\n\t\t\t\tconst tabContainer = document.createElement('div');\n\t\t\t\ttabContainer.classList.add('tab-container');\n\n\t\t\t\t// Tab buttons\n\t\t\t\tconst tabButtons = document.createElement('div');\n\t\t\t\ttabButtons.classList.add('tab-buttons');\n\n\t\t\t\tconst routingTab = document.createElement('button');\n\t\t\t\troutingTab.type = 'button';\n\t\t\t\troutingTab.classList.add('tab-button', 'active');\n\t\t\t\troutingTab.textContent = 'Routing';\n\t\t\t\troutingTab.addEventListener('click', (e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tthis.switchTab('routing', tabButtons, tabContents);\n\t\t\t\t});\n\t\t\t\ttabButtons.appendChild(routingTab);\n\n\t\t\t\tconst isochroneTab = document.createElement('button');\n\t\t\t\tisochroneTab.type = 'button';\n\t\t\t\tisochroneTab.classList.add('tab-button');\n\t\t\t\tisochroneTab.textContent = 'Isochrone';\n\t\t\t\tisochroneTab.addEventListener('click', (e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tthis.switchTab('isochrone', tabButtons, tabContents);\n\t\t\t\t});\n\t\t\t\ttabButtons.appendChild(isochroneTab);\n\n\t\t\t\ttabContainer.appendChild(tabButtons);\n\n\t\t\t\t// Tab contents container\n\t\t\t\tconst tabContents = document.createElement('div');\n\t\t\t\ttabContents.classList.add('tab-contents');\n\n\t\t\t\t// Routing content\n\t\t\t\tconst routingContent = this.createRoutingContent();\n\t\t\t\troutingContent.classList.add('tab-content', 'active');\n\t\t\t\troutingContent.setAttribute('data-tab', 'routing');\n\t\t\t\ttabContents.appendChild(routingContent);\n\n\t\t\t\t// Isochrone content\n\t\t\t\tconst isochroneContent = this.createIsochroneContent();\n\t\t\t\tisochroneContent.classList.add('tab-content');\n\t\t\t\tisochroneContent.setAttribute('data-tab', 'isochrone');\n\t\t\t\ttabContents.appendChild(isochroneContent);\n\n\t\t\t\ttabContainer.appendChild(tabContents);\n\t\t\t\tcontent.appendChild(tabContainer);\n\n\t\t\t\treturn content;\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Switch between tabs\n\t */\n\tprivate switchTab(tabName: string, tabButtons: HTMLElement, tabContents: HTMLElement) {\n\t\t// Update tab buttons\n\t\ttabButtons.querySelectorAll('.tab-button').forEach((btn) => btn.classList.remove('active'));\n\t\ttabButtons\n\t\t\t.querySelector(`[data-tab=\"${tabName}\"], :nth-child(${tabName === 'routing' ? '1' : '2'})`)\n\t\t\t?.classList.add('active');\n\n\t\t// Update tab contents\n\t\ttabContents\n\t\t\t.querySelectorAll('.tab-content')\n\t\t\t.forEach((content) => content.classList.remove('active'));\n\t\ttabContents.querySelector(`[data-tab=\"${tabName}\"]`)?.classList.add('active');\n\t}\n\n\t/**\n\t * Create routing tab content\n\t */\n\tprivate createRoutingContent(): HTMLDivElement {\n\t\tconst container = document.createElement('div');\n\n\t\t// Means of Transport section\n\t\tconst transportSection = document.createElement('div');\n\t\ttransportSection.classList.add('setting-section');\n\n\t\tconst transportLabel = document.createElement('label');\n\t\ttransportLabel.textContent = 'Means of Transport';\n\t\ttransportLabel.classList.add('setting-label');\n\t\ttransportSection.appendChild(transportLabel);\n\n\t\ttransportSection.appendChild(\n\t\t\tthis.settingDialog.createSegmentButtons(\n\t\t\t\tcostingModelOptions as unknown as { value: string; label: string }[],\n\t\t\t\tthis.routingCostingModel,\n\t\t\t\t(value: string) => {\n\t\t\t\t\tif (!this.valhallaOptions.routingOptions) {\n\t\t\t\t\t\tthis.valhallaOptions.routingOptions = {};\n\t\t\t\t\t}\n\t\t\t\t\tthis.valhallaOptions.routingOptions.costingModel = value as costingModelType;\n\t\t\t\t\tthis.dispatchEvent('setting-changed');\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tcontainer.appendChild(transportSection);\n\n\t\t// Distance Unit section\n\t\tconst unitSection = document.createElement('div');\n\t\tunitSection.classList.add('setting-section');\n\n\t\tconst unitLabel = document.createElement('label');\n\t\tunitLabel.textContent = 'Distance Unit';\n\t\tunitLabel.classList.add('setting-label');\n\t\tunitSection.appendChild(unitLabel);\n\n\t\tunitSection.appendChild(\n\t\t\tthis.settingDialog.createSegmentButtons(\n\t\t\t\troutingDistanceUnitOptions as unknown as { value: string; label: string }[],\n\t\t\t\tthis.routingDistanceUnit,\n\t\t\t\t(value: string) => {\n\t\t\t\t\tif (!this.valhallaOptions.routingOptions) {\n\t\t\t\t\t\tthis.valhallaOptions.routingOptions = {};\n\t\t\t\t\t}\n\t\t\t\t\tthis.valhallaOptions.routingOptions.distanceUnit = value as routingDistanceUnitType;\n\t\t\t\t\tthis.dispatchEvent('setting-changed');\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tcontainer.appendChild(unitSection);\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Create isochrone tab content\n\t */\n\tprivate createIsochroneContent(): HTMLDivElement {\n\t\tconst container = document.createElement('div');\n\n\t\t// Contour Type section\n\t\tconst contourTypeSection = document.createElement('div');\n\t\tcontourTypeSection.classList.add('setting-section');\n\n\t\tconst contourTypeLabel = document.createElement('label');\n\t\tcontourTypeLabel.textContent = 'Contour Type';\n\t\tcontourTypeLabel.classList.add('setting-label');\n\t\tcontourTypeSection.appendChild(contourTypeLabel);\n\n\t\tcontourTypeSection.appendChild(\n\t\t\tthis.settingDialog.createSegmentButtons(\n\t\t\t\tcontourTypeOptions as unknown as { value: string; label: string }[],\n\t\t\t\tthis.controlOptions.valhallaOptions?.isochroneOptions?.contourType || 'time',\n\t\t\t\t(value: string) => {\n\t\t\t\t\tif (!this.valhallaOptions.isochroneOptions) {\n\t\t\t\t\t\tthis.valhallaOptions.isochroneOptions = {};\n\t\t\t\t\t}\n\t\t\t\t\tthis.valhallaOptions.isochroneOptions.contourType = value as ContourType;\n\t\t\t\t\tthis.dispatchEvent('setting-changed');\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tcontainer.appendChild(contourTypeSection);\n\n\t\t// Means of Transport section\n\t\tconst transportSection = document.createElement('div');\n\t\ttransportSection.classList.add('setting-section');\n\n\t\tconst transportLabel = document.createElement('label');\n\t\ttransportLabel.textContent = 'Means of Transport';\n\t\ttransportLabel.classList.add('setting-label');\n\t\ttransportSection.appendChild(transportLabel);\n\n\t\ttransportSection.appendChild(\n\t\t\tthis.settingDialog.createSegmentButtons(\n\t\t\t\tcostingModelOptions as unknown as { value: string; label: string }[],\n\t\t\t\tthis.controlOptions.valhallaOptions?.isochroneOptions?.costingModel || 'auto',\n\t\t\t\t(value: string) => {\n\t\t\t\t\tif (!this.valhallaOptions.isochroneOptions) {\n\t\t\t\t\t\tthis.valhallaOptions.isochroneOptions = {};\n\t\t\t\t\t}\n\t\t\t\t\tthis.valhallaOptions.isochroneOptions.costingModel = value as costingModelType;\n\t\t\t\t\tthis.dispatchEvent('setting-changed');\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tcontainer.appendChild(transportSection);\n\n\t\t// Contours section\n\t\tconst contoursSection = document.createElement('div');\n\t\tcontoursSection.classList.add('setting-section');\n\n\t\tconst contoursLabel = document.createElement('label');\n\t\tcontoursLabel.textContent = 'Contours';\n\t\tcontoursLabel.classList.add('setting-label');\n\t\tcontoursSection.appendChild(contoursLabel);\n\n\t\tconst contoursTable = this.createContoursTable();\n\t\tcontoursSection.appendChild(contoursTable);\n\n\t\tcontainer.appendChild(contoursSection);\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Create contours table\n\t */\n\tprivate createContoursTable(): HTMLDivElement {\n\t\tconst tableContainer = document.createElement('div');\n\t\ttableContainer.classList.add('contours-table');\n\n\t\tconst table = document.createElement('table');\n\t\ttable.classList.add('contours-table-element');\n\n\t\t// Header\n\t\tconst thead = document.createElement('thead');\n\t\tconst headerRow = document.createElement('tr');\n\n\t\tconst colorHeader = document.createElement('th');\n\t\tcolorHeader.textContent = 'Color';\n\t\theaderRow.appendChild(colorHeader);\n\n\t\tconst timeHeader = document.createElement('th');\n\t\ttimeHeader.textContent = 'Time (min)';\n\t\theaderRow.appendChild(timeHeader);\n\n\t\tconst distanceHeader = document.createElement('th');\n\t\tdistanceHeader.textContent = 'Distance (km)';\n\t\theaderRow.appendChild(distanceHeader);\n\n\t\tconst actionHeader = document.createElement('th');\n\t\theaderRow.appendChild(actionHeader);\n\n\t\tthead.appendChild(headerRow);\n\t\ttable.appendChild(thead);\n\n\t\t// Body\n\t\tconst tbody = document.createElement('tbody');\n\n\t\tconst currentContours = this.controlOptions.valhallaOptions?.isochroneOptions\n\t\t\t?.contours as Contour[];\n\n\t\tcurrentContours.forEach((contour, index) => {\n\t\t\tconst row = this.createContourRow(contour, index);\n\t\t\ttbody.appendChild(row);\n\t\t});\n\n\t\ttable.appendChild(tbody);\n\t\ttableContainer.appendChild(table);\n\n\t\t// Add contour button\n\t\tconst addButton = document.createElement('button');\n\t\taddButton.type = 'button';\n\t\taddButton.classList.add('add-row-button');\n\t\taddButton.textContent = 'Add Contour';\n\t\taddButton.hidden = currentContours.length >= 4;\n\t\taddButton.addEventListener('click', (e) => {\n\t\t\te.stopPropagation();\n\n\t\t\tconst latestContours = this.valhallaOptions.isochroneOptions?.contours as Contour[];\n\n\t\t\tconst newContour = JSON.parse(JSON.stringify(latestContours[latestContours.length - 1]));\n\t\t\tconst index = tbody.children.length;\n\t\t\tconst row = this.createContourRow(newContour, index);\n\t\t\ttbody.appendChild(row);\n\t\t\tlatestContours.push(newContour);\n\t\t\tthis.updateAddRowButtonState();\n\t\t\tthis.dispatchEvent('setting-changed');\n\t\t});\n\t\ttableContainer.appendChild(addButton);\n\n\t\treturn tableContainer;\n\t}\n\n\t/**\n\t * Create a single contour row\n\t */\n\tprivate createContourRow(contour: Contour, index: number): HTMLTableRowElement {\n\t\tconst row = document.createElement('tr');\n\t\trow.setAttribute('data-index', index.toString());\n\n\t\t// Color cell\n\t\tconst colorCell = document.createElement('td');\n\t\tconst colorInput = document.createElement('input');\n\t\tcolorInput.type = 'color';\n\t\tcolorInput.value = contour.color;\n\t\tcolorInput.classList.add('color-picker');\n\t\tcolorInput.addEventListener('change', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tif (!this.valhallaOptions.isochroneOptions?.contours) return;\n\t\t\tthis.valhallaOptions.isochroneOptions.contours[index].color = (\n\t\t\t\te.target as HTMLInputElement\n\t\t\t).value;\n\t\t\tthis.dispatchEvent('setting-changed');\n\t\t});\n\t\tcolorCell.appendChild(colorInput);\n\t\trow.appendChild(colorCell);\n\n\t\t// Time cell\n\t\tconst timeCell = document.createElement('td');\n\t\tconst timeInput = document.createElement('input');\n\t\ttimeInput.type = 'number';\n\t\ttimeInput.value = (contour.time as number).toString();\n\t\ttimeInput.min = '1';\n\t\ttimeInput.classList.add('number-input');\n\t\ttimeInput.addEventListener('change', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tif (!this.valhallaOptions.isochroneOptions?.contours) return;\n\t\t\tthis.valhallaOptions.isochroneOptions.contours[index].time = parseFloat(\n\t\t\t\t(e.target as HTMLInputElement).value\n\t\t\t);\n\t\t\tthis.dispatchEvent('setting-changed');\n\t\t});\n\t\ttimeCell.appendChild(timeInput);\n\t\trow.appendChild(timeCell);\n\n\t\t// Distance cell\n\t\tconst distanceCell = document.createElement('td');\n\t\tconst distanceInput = document.createElement('input');\n\t\tdistanceInput.type = 'number';\n\t\tdistanceInput.value = (contour.distance as number).toString();\n\t\tdistanceInput.min = '0.1';\n\t\tdistanceInput.step = '0.1';\n\t\tdistanceInput.classList.add('number-input');\n\t\tdistanceInput.addEventListener('change', (e) => {\n\t\t\te.stopPropagation();\n\t\t\tif (!this.valhallaOptions.isochroneOptions?.contours) return;\n\t\t\tthis.valhallaOptions.isochroneOptions.contours[index].distance = parseFloat(\n\t\t\t\t(e.target as HTMLInputElement).value\n\t\t\t);\n\t\t\tthis.dispatchEvent('setting-changed');\n\t\t});\n\t\tdistanceCell.appendChild(distanceInput);\n\t\trow.appendChild(distanceCell);\n\n\t\t// Action cell\n\t\tconst actionCell = document.createElement('td');\n\t\tif (index > 0) {\n\t\t\tconst deleteButton = document.createElement('button');\n\t\t\tdeleteButton.type = 'button';\n\t\t\tdeleteButton.textContent = '×';\n\t\t\tdeleteButton.classList.add('delete-button');\n\t\t\tdeleteButton.addEventListener('click', (e) => {\n\t\t\t\te.stopPropagation();\n\t\t\t\tconst index = parseInt(row.getAttribute('data-index') || '0');\n\t\t\t\trow.remove();\n\n\t\t\t\t// Remove from options\n\t\t\t\tif (this.valhallaOptions.isochroneOptions?.contours) {\n\t\t\t\t\tthis.valhallaOptions.isochroneOptions.contours.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\t// Update indices\n\t\t\t\tconst tbody = row.parentElement as HTMLTableSectionElement;\n\t\t\t\tif (tbody) {\n\t\t\t\t\tArray.from(tbody.children).forEach((row, newIndex) => {\n\t\t\t\t\t\t(row as HTMLElement).setAttribute('data-index', newIndex.toString());\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.updateAddRowButtonState();\n\t\t\t\tthis.dispatchEvent('setting-changed');\n\t\t\t});\n\t\t\tactionCell.appendChild(deleteButton);\n\t\t}\n\n\t\trow.appendChild(actionCell);\n\n\t\treturn row;\n\t}\n\n\tprivate updateAddRowButtonState = () => {\n\t\tconst addButtons = document.getElementsByClassName('add-row-button');\n\t\tif (addButtons && addButtons.length > 0) {\n\t\t\tconst addButton = addButtons.item(0) as HTMLButtonElement;\n\t\t\tif (addButton) {\n\t\t\t\tconst currentContours = this.controlOptions.valhallaOptions?.isochroneOptions\n\t\t\t\t\t?.contours as Contour[];\n\t\t\t\taddButton.hidden = currentContours.length >= 4;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Add Terra Draw drawing mode button\n\t * @param mode Terra Draw mode name\n\t */\n\tprotected addTerradrawButton(mode: TerradrawMode) {\n\t\tconst btn = document.createElement('button');\n\t\tbtn.type = 'button';\n\t\tthis.modeButtons[mode] = btn;\n\n\t\tif ((mode as TerradrawValhallaMode) === 'settings') {\n\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}add-control`);\n\t\t\tbtn.classList.add(`maplibregl-terradraw-${this.cssPrefix}${mode}-button`);\n\t\t\tbtn.addEventListener('click', this.handleSettingDialog.bind(this));\n\t\t} else {\n\t\t\tsuper.addTerradrawButton(mode);\n\t\t}\n\t}\n\n\t/**\n\t * Handle the click event of the settings button\n\t */\n\tprivate handleSettingDialog() {\n\t\tthis.settingDialog?.open();\n\t}\n\n\t/**\n\t * Register  measure control related maplibre sources and layers\n\t */\n\tprivate registerValhallaControl() {\n\t\tif (!this.map) return;\n\n\t\tconst lineModes = this.options.modes?.filter((m) => ['linestring'].includes(m));\n\n\t\tif (lineModes && lineModes.length > 0) {\n\t\t\t// add GeoJSON source for line node\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for distance label node appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer(\n\t\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!this.map.getLayer(\n\t\t\t\t\t(this.controlOptions.routingLineLayerNodeLabelSpec as SymbolLayerSpecification).id\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(\n\t\t\t\t\tthis.controlOptions.routingLineLayerNodeLabelSpec as SymbolLayerSpecification\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst pointModes = this.options.modes?.filter((m) => ['point'].includes(m));\n\n\t\tif (pointModes && pointModes.length > 0) {\n\t\t\t// add GeoJSON source for polygon features\n\t\t\tif (\n\t\t\t\t!this.map.getSource(\n\t\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).source\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addSource(\n\t\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).source,\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'geojson',\n\t\t\t\t\t\tdata: { type: 'FeatureCollection', features: [] }\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// add GeoJSON layer for isochrone appearance\n\t\t\tif (\n\t\t\t\t!this.map.getLayer(\n\t\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).id\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!this.map.getLayer(\n\t\t\t\t\t(this.controlOptions.isochroneLineLayerSpec as LineLayerSpecification).id\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.controlOptions.isochroneLineLayerSpec as LineLayerSpecification);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t!this.map.getLayer(\n\t\t\t\t\t(this.controlOptions.isochroneLabelLayerSpec as SymbolLayerSpecification).id\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tthis.map.addLayer(this.controlOptions.isochroneLabelLayerSpec as SymbolLayerSpecification);\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t((lineModes && lineModes.length > 0) || (pointModes && pointModes.length > 0)) &&\n\t\t\tthis.map\n\t\t) {\n\t\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\t\tif (drawInstance) {\n\t\t\t\t// subscribe change event of TerraDraw to calc distance\n\t\t\t\tdrawInstance.on('finish', this.handleTerradrawFeatureReady.bind(this));\n\t\t\t\t// subscribe feature-deleted event for the plugin control\n\t\t\t\tthis.on('feature-deleted', this.onFeatureDeleted.bind(this));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register  measure control related maplibre sources and layers\n\t */\n\tprivate unregisterValhallaControl() {\n\t\tthis.off('feature-deleted', this.onFeatureDeleted.bind(this));\n\t\tif (!this.map) return;\n\n\t\tif (\n\t\t\tthis.map.getLayer(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getLayer(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeLabelSpec as SymbolLayerSpecification).id\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeLabelSpec as SymbolLayerSpecification).id\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getSource(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).source\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).source\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tthis.map.getLayer(\n\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).id\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).id\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getLayer((this.controlOptions.isochroneLineLayerSpec as LineLayerSpecification).id)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.controlOptions.isochroneLineLayerSpec as LineLayerSpecification).id\n\t\t\t);\n\t\t}\n\t\tif (\n\t\t\tthis.map.getLayer(\n\t\t\t\t(this.controlOptions.isochroneLabelLayerSpec as SymbolLayerSpecification).id\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeLayer(\n\t\t\t\t(this.controlOptions.isochroneLabelLayerSpec as SymbolLayerSpecification).id\n\t\t\t);\n\t\t}\n\n\t\tif (\n\t\t\tthis.map.getSource(\n\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).source\n\t\t\t)\n\t\t) {\n\t\t\tthis.map.removeSource(\n\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).source\n\t\t\t);\n\t\t}\n\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (drawInstance) {\n\t\t\t// subscribe change event of TerraDraw to calc distance\n\t\t\tdrawInstance.off('finish', this.handleTerradrawFeatureReady.bind(this));\n\t\t}\n\t}\n\n\t/**\n\t * Handle finish event of terradraw. It will be called after finishing adding a feature\n\t * @param id Feature ID\n\t */\n\tprivate handleTerradrawFeatureReady = debounce((id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tthis.computeRouteByLineFeatureID(id);\n\t\tthis.computeIsochroneByPointFeatureID(id);\n\t}, 300);\n\n\tprivate computeIsochroneByPointFeatureID = async (id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\t\tif (!this.valhallaOptions.url) return;\n\n\t\tconst feature = this.terradraw?.getSnapshotFeature(id);\n\t\tif (!feature || (feature && feature.geometry.type !== 'Point')) return;\n\n\t\tconst coord = feature.geometry.coordinates as [number, number];\n\n\t\tconst valhallaIsochrone = new ValhallaIsochrone(this.valhallaUrl);\n\t\tconst fc = await valhallaIsochrone.calcIsochrone(\n\t\t\tcoord[0],\n\t\t\tcoord[1],\n\t\t\tthis.isochroneContourType,\n\t\t\tthis.isochroneCostingModel,\n\t\t\tthis.isochroneContours\n\t\t);\n\t\tconst updatedFeatures = fc.features.map((f) => {\n\t\t\tf.id = `${id}-${f.properties.contour}`;\n\t\t\tf.properties.originalId = id;\n\t\t\treturn f;\n\t\t}) as unknown as GeoJSONStoreFeatures[];\n\n\t\tconst updateProperties = {\n\t\t\tcontourType: this.isochroneContourType,\n\t\t\tcostingModel: this.isochroneCostingModel,\n\t\t\tresult: updatedFeatures as unknown as string\n\t\t};\n\n\t\tfeature.properties = {\n\t\t\t...feature.properties,\n\t\t\t...updateProperties\n\t\t};\n\n\t\tthis.terradraw?.updateFeatureProperties(id, updateProperties);\n\n\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).source\n\t\t] as GeoJSONSourceSpecification;\n\t\tif (geojsonSource) {\n\t\t\tif (\n\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t) {\n\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter(\n\t\t\t\t\t(f) => f.properties?.originalId !== id\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (\n\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t) {\n\t\t\t\tgeojsonSource.data.features.push(...updatedFeatures);\n\t\t\t}\n\n\t\t\t(\n\t\t\t\tthis.map.getSource(\n\t\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).source\n\t\t\t\t) as GeoJSONSource\n\t\t\t)?.setData(geojsonSource.data);\n\t\t\tthis.map.moveLayer(\n\t\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).id\n\t\t\t);\n\t\t\tthis.map.moveLayer((this.controlOptions.isochroneLineLayerSpec as LineLayerSpecification).id);\n\t\t\tthis.map.moveLayer(\n\t\t\t\t(this.controlOptions.isochroneLabelLayerSpec as SymbolLayerSpecification).id\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Compute elevation by a LineString feature ID\n\t * @param id FeatureID\n\t */\n\tprivate computeRouteByLineFeatureID = async (id: TerraDrawExtend.FeatureId) => {\n\t\tif (!this.map) return;\n\n\t\tif (!this.valhallaOptions.url) return;\n\n\t\tconst feature = this.terradraw?.getSnapshotFeature(id);\n\t\tif (!feature || (feature && feature.geometry.type !== 'LineString')) return;\n\n\t\tconst routingEngine = new ValhallaRouting(this.valhallaUrl);\n\t\tconst tripData: LngLat[] = feature.geometry.coordinates.map((c) => {\n\t\t\tconst coord = c as [number, number];\n\t\t\treturn new LngLat(coord[0], coord[1]);\n\t\t});\n\t\tif (!tripData || (tripData && tripData.length < 2)) return;\n\n\t\tconst result = await routingEngine.calcRoute(\n\t\t\ttripData,\n\t\t\tthis.routingCostingModel,\n\t\t\tthis.routingDistanceUnit\n\t\t);\n\t\tif (!result || !result.feature) return;\n\t\tconst newGeometry = result?.feature.geometry as GeoJSONStoreGeometries;\n\t\tthis.terradraw?.updateFeatureGeometry(id, newGeometry);\n\n\t\tfeature.geometry = newGeometry;\n\t\tfeature.properties = {\n\t\t\t...feature.properties,\n\t\t\t...result?.feature.properties\n\t\t};\n\t\tthis.terradraw?.updateFeatureProperties(id, result?.feature.properties);\n\n\t\t// add line node features to the map for label\n\t\tconst pointFeactureCollection = result?.pointFeatures;\n\t\tconst updatedFeatures = pointFeactureCollection.features.map((f) => {\n\t\t\tf.id = `${id}-${f.id}`;\n\t\t\tf.properties.originalId = id;\n\t\t\treturn f;\n\t\t}) as unknown as GeoJSONStoreFeatures[];\n\n\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).source\n\t\t] as GeoJSONSourceSpecification;\n\t\tif (geojsonSource) {\n\t\t\tif (\n\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t) {\n\t\t\t\tgeojsonSource.data.features = geojsonSource.data.features.filter(\n\t\t\t\t\t(f) => f.properties?.originalId !== id\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (\n\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t) {\n\t\t\t\tgeojsonSource.data.features.push(...updatedFeatures);\n\t\t\t}\n\n\t\t\t(\n\t\t\t\tthis.map.getSource(\n\t\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).source\n\t\t\t\t) as GeoJSONSource\n\t\t\t)?.setData(geojsonSource.data);\n\t\t\tthis.map.moveLayer(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification).id\n\t\t\t);\n\t\t\tthis.map.moveLayer(\n\t\t\t\t(this.controlOptions.routingLineLayerNodeLabelSpec as SymbolLayerSpecification).id\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Event definition when feature is deleted by terradraw\n\t */\n\tprivate onFeatureDeleted(args: unknown) {\n\t\tif (!this.map) return;\n\t\tconst drawInstance = this.getTerraDrawInstance();\n\t\tif (drawInstance) {\n\t\t\tlet deletedIds: string[] = [];\n\t\t\tif (typeof args === 'object' && args !== null && 'deletedIds' in args) {\n\t\t\t\tdeletedIds = (args as { deletedIds: string[] }).deletedIds;\n\t\t\t}\n\n\t\t\tconst sources = [\n\t\t\t\tthis.controlOptions.routingLineLayerNodeSpec as CircleLayerSpecification,\n\t\t\t\tthis.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification\n\t\t\t];\n\t\t\tconst sourceIds = sources.map((src) => src.source);\n\t\t\tif (deletedIds && deletedIds.length > 0) {\n\t\t\t\t// delete only features by IDs\n\t\t\t\tthis.clearExtendedFeatures(sourceIds, deletedIds);\n\t\t\t} else {\n\t\t\t\t// delete all features\n\t\t\t\tthis.clearExtendedFeatures(sourceIds, undefined);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * get GeoJSON features\n\t * @param onlySelected If true, returns only selected features. Default is false.\n\t * @returns FeatureCollection in GeoJSON format\n\t */\n\tpublic getFeatures(onlySelected = false) {\n\t\tconst fc = super.getFeatures(onlySelected);\n\t\tif (!fc) return fc;\n\t\tif (!this.terradraw) return fc;\n\t\tif (!this.map) return fc;\n\n\t\tconst geojsonSource: GeoJSONSourceSpecification = this.map.getStyle().sources[\n\t\t\t(this.controlOptions.isochronePolygonLayerSpec as FillLayerSpecification).source\n\t\t] as GeoJSONSourceSpecification;\n\n\t\tconst features: GeoJSONStoreFeatures[] = [];\n\n\t\tfor (let i = 0; i < fc.features.length; i++) {\n\t\t\tconst feature = fc.features[i];\n\t\t\tconst geomType = feature.geometry.type;\n\t\t\tif (geomType === 'Point') {\n\t\t\t\tconst fid = feature.id;\n\n\t\t\t\tif (geojsonSource) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ttypeof geojsonSource.data !== 'string' &&\n\t\t\t\t\t\tgeojsonSource.data.type === 'FeatureCollection'\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst filtered = geojsonSource.data.features.filter(\n\t\t\t\t\t\t\t(f) => f.properties?.originalId === fid\n\t\t\t\t\t\t) as unknown as GeoJSONStoreFeatures[];\n\t\t\t\t\t\tfeatures.push(feature);\n\t\t\t\t\t\tif (filtered.length > 0) {\n\t\t\t\t\t\t\tfeatures.push(...filtered);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfeatures.push(feature);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\ttype: 'FeatureCollection',\n\t\t\tfeatures: features\n\t\t};\n\t}\n}\n"],"names":["t","e","i","o","s","n","r","a","h","l","c","u","p$1","g","d","y","f","m","v","C","P","I","x","E","S","M","F","D","w","p","O","b","_","k","N","T","j","W","B","G","R","U","A","V","Y","K","z$1","X","H","z","$","q$1","Z","J","Q","tt","et","it","ot","st","nt","rt","at","dt","ht","lt","ct","ut","pt","gt","yt","ft","mt","q","vt","Ct","Pt","It","xt","Et","St","Mt","Ft","Dt","wt","Ot","_t","bt","kt","Nt","Tt","jt","Wt","Bt","Gt","Rt","Lt","Ut","At","Vt","Yt","Kt","zt","Xt","Ht","$t","qt","Zt","Jt","Qt","te","ee","ie","oe","se","ne","ge","re","ae","de","he","le","ce","ue","pe","ye","fe","me","ve","Ce","De","we","Oe","_e","be","ke","Ne","Te","je","We","Be","Ge","Re","Le","Ue","Ae","Ye","Ke","ze","Xe","He","AvailableModes","AvailableValhallaModes","defaultControlOptions","defaultMeasureControlOptions","TerraDrawPointMode","TerraDrawLineStringMode","TerraDrawPolygonMode","TerraDrawRectangleMode","TerraDrawAngledRectangleMode","TerraDrawCircleMode","TerraDrawFreehandMode","TerraDrawFreehandLineStringMode","TerraDrawSensorMode","TerraDrawSectorMode","TerraDrawSelectMode","defaultValhallaControlOptions","TerraDrawRenderMode","getDefaultModeOptions","feature","updateType","ValidateNotSelfIntersecting","earthRadius","factors","geom","properties","options","feat","point","coordinates","isNumber","radiansToLength","radians","units","factor","degreesToRadians","degrees","num","coordEach","geojson","callback","excludeWrapCoord","geometry","stopG","coords","geometryMaybeCollection","wrapShrink","coordIndex","isGeometryCollection","type","isFeatureCollection","isFeature","stop","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","geomEach","featureProperties","featureBBox","featureId","geomReduce","initialValue","previousValue","currentGeometry","area","value","calculateArea","total","polygonArea","ringArea","FACTOR","PI_OVER_180","coordsLength","lower","middle","upper","lowerX","middleY","upperX","turf_area_default","convertAreaUnit","unit","forceUnit","metricUnits","imperialUnits","effectiveForceUnit","isMetricForceUnit","isImperialForceUnit","convertMetricUnit","convertImperialUnit","outputArea","outputUnit","calcArea","areaUnit","areaPrecision","result","converted","getCoord","coord","distance","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","turf_distance_default","convertDistance","calcDistance","distanceUnit","distancePrecision","map","computeElevation","terrainSource","totalDistance","segments","start","end","segment","elevation_start","elevation_end","convertedDistance","segmentDistance","segmentTotalDistance","capitalize","TERRADRAW_SOURCE_IDS","TERRADRAW_MEASURE_SOURCE_IDS","TERRADRAW_VALHALLA_SOURCE_IDS","cleanMaplibreStyle","style","sourceIds","prefixId","id","cloned","key","debounce","delay","timeoutId","args","MemoryCache","maxSize","ttl","item","firstKey","expiry","now","ModalDialog","className","title","parentElement","addConttent","existingDialog","dialog","header","btnClose","content","event","target","rect","defaultValue","onClick","segmentButtons","option","button","btn","queryElevationByPoint","elevation","L","coordinateToKey","precision","lng","lat","roundedLng","roundedLat","queryElevationFromRasterDEM","points","terrainDource","cacheConfig","cacheInstance","promises","config","cache","terrainInstance","maxzoom","url","encoding","tileSize","minzoom","tms","TerrainRGB","Terrarium","resolve","cacheKey","cachedElevation","roundFeatureCoordinates","features","decimalPlaces","roundCoord","processGeometry","ring","polygon","contourTypeOptions","ValhallaIsochrone","lon","contourType","costingModel","contours","contourList","jsonOption","costingModelOptions","routingDistanceUnitOptions","ValhallaRouting","tripData","baseAPI","params","apiUrl","json","shapes","shape","shp","combinedShape","sumLength","sumTime","combinedManeuvers","pointFeatures","leg","index","pointFeature","transportLabel","opt","firstFeature","props","text","shift","byte","latitude_change","longitude_change","MaplibreTerradrawControl","controls","addButton","defaultOptions","modes","newOption","defaultOption","flags","TerraDraw","TerraDrawMapLibreGLAdapter","ele","currentFeature","mode","selected","ids","isActive","onlySelected","fc","dataStr","download","targets","btns","enabled","hasFeatures","sourceId","geojsonSource","centroid","xSum","ySum","len","MaplibreMeasureControl","isSame","defaultPrecision","firstLayer","fontNames","layers","layer","measureOptions","drawInstance","snapshot","geometryType","polygonSource","lineSource","pointSource","lineModes","polygonModes","lineFeatures","src","updatedFeatures","newGeoJsonSource","updatedExistingFeatures","featureMap","startNode","endNode","deletedIds","MaplibreValhallaControl","_options","tabContainer","tabButtons","routingTab","tabContents","isochroneTab","routingContent","isochroneContent","tabName","container","transportSection","unitSection","unitLabel","contourTypeSection","contourTypeLabel","contoursSection","contoursLabel","contoursTable","tableContainer","table","thead","headerRow","colorHeader","timeHeader","distanceHeader","actionHeader","tbody","currentContours","contour","row","latestContours","newContour","colorCell","colorInput","timeCell","timeInput","distanceCell","distanceInput","actionCell","deleteButton","newIndex","addButtons","pointModes","updateProperties","routingEngine","LngLat","newGeometry","fid","filtered"],"mappings":"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","x_google_ignoreList":[0,1,7,8,9,12,13,22,28]}