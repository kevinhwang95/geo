(function(E,st){typeof exports=="object"&&typeof module<"u"?st(exports,require("maplibre-gl")):typeof define=="function"&&define.amd?define(["exports","maplibre-gl"],st):(E=typeof globalThis<"u"?globalThis:E||self,st(E.MaplibreTerradrawControl={},E.maplibregl))})(this,(function(E,st){"use strict";function O(){return O=Object.assign?Object.assign.bind():function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var i in e)({}).hasOwnProperty.call(e,i)&&(r[i]=e[i])}return r},O.apply(null,arguments)}var b;(function(r){r.Commit="commit",r.Provisional="provisional",r.Finish="finish"})(b||(b={}));const k={SELECTED:"selected",MID_POINT:"midPoint",SELECTION_POINT_FEATURE_ID:"selectionPointFeatureId",SELECTION_POINT:"selectionPoint"},S={MODE:"mode",CURRENTLY_DRAWING:"currentlyDrawing",EDITED:"edited",CLOSING_POINT:"closingPoint",SNAPPING_POINT:"snappingPoint",COORDINATE_POINT:"coordinatePoint",COORDINATE_POINT_FEATURE_ID:"coordinatePointFeatureId",COORDINATE_POINT_IDS:"coordinatePointIds",PROVISIONAL_COORDINATE_COUNT:"provisionalCoordinateCount",COMMITTED_COORDINATE_COUNT:"committedCoordinateCount"},A=10;function Dt(r){return!!(r&&typeof r=="object"&&r!==null&&!Array.isArray(r))}function ie(r){return!!(r&&typeof r=="object"&&"properties"in r&&typeof r.properties=="object"&&r.properties!==null&&"mode"in r.properties)}function oe(r){return!!(function(t){return typeof t=="number"&&!isNaN(new Date(t).valueOf())})(r)}const ri="Feature mode property does not match the mode being added to";var Y;(function(r){r.Drawing="drawing",r.Select="select",r.Static="static",r.Render="render"})(Y||(Y={}));const ni={rightClick:!0,contextMenu:!1,leftClick:!0,onDragStart:!0,onDrag:!0,onDragEnd:!0};class R{get state(){return this._state}set state(t){throw new Error("Please use the modes lifecycle methods")}get styles(){return this._styles}set styles(t){if(typeof t!="object")throw new Error("Styling must be an object");this.onStyleChange&&this.onStyleChange([],"styling"),this._styles=t}registerBehaviors(t){}constructor(t,e=!1){this._state="unregistered",this._styles={},this.pointerEvents=ni,this.behaviors=[],this.validate=void 0,this.pointerDistance=40,this.coordinatePrecision=void 0,this.onStyleChange=void 0,this.store=void 0,this.projection="web-mercator",this.setDoubleClickToZoom=void 0,this.unproject=void 0,this.project=void 0,this.setCursor=void 0,this.type=Y.Drawing,this.mode="base",e||this.updateOptions(t)}updateOptions(t){t!=null&&t.styles&&(this.styles=O({},this._styles,t.styles)),t!=null&&t.pointerDistance&&(this.pointerDistance=t.pointerDistance),t!=null&&t.validation&&(this.validate=t&&t.validation),t!=null&&t.projection&&(this.projection=t.projection),t?.pointerEvents!==void 0&&(this.pointerEvents=t.pointerEvents)}allowPointerEvent(t,e){return typeof t=="boolean"?t:typeof t!="function"||t(e)}setDrawing(){if(this._state!=="started")throw new Error("Mode must be unregistered or stopped to start");this._state="drawing"}setStarted(){if(this._state!=="stopped"&&this._state!=="registered"&&this._state!=="drawing"&&this._state!=="selecting")throw new Error("Mode must be unregistered or stopped to start");this._state="started",this.setDoubleClickToZoom(!1)}setStopped(){if(this._state!=="started")throw new Error("Mode must be started to be stopped");this._state="stopped",this.setDoubleClickToZoom(!0)}register(t){if(this._state!=="unregistered")throw new Error("Can not register unless mode is unregistered");this._state="registered",this.store=t.store,this.store.registerOnChange(t.onChange),this.setDoubleClickToZoom=t.setDoubleClickToZoom,this.project=t.project,this.unproject=t.unproject,this.onSelect=t.onSelect,this.onDeselect=t.onDeselect,this.setCursor=t.setCursor,this.onStyleChange=t.onChange,this.onFinish=t.onFinish,this.coordinatePrecision=t.coordinatePrecision,this.registerBehaviors({mode:t.mode,store:this.store,project:this.project,unproject:this.unproject,pointerDistance:this.pointerDistance,coordinatePrecision:t.coordinatePrecision,projection:this.projection})}validateFeature(t){return this.performFeatureValidation(t)}afterFeatureAdded(t){}afterFeatureUpdated(t){}performFeatureValidation(t){if(this._state==="unregistered")throw new Error("Mode must be registered");const e=(function(i,o){let s;if(Dt(i))if(i.id==null)s="Feature has no id";else if(typeof i.id!="string"&&typeof i.id!="number")s="Feature must be string or number as per GeoJSON spec";else if(o(i.id))if(Dt(i.geometry))if(Dt(i.properties))if(typeof i.geometry.type=="string"&&["Polygon","LineString","Point"].includes(i.geometry.type))if(Array.isArray(i.geometry.coordinates)){if(!i.properties.mode||typeof i.properties.mode!="string")return{valid:!1,reason:"Feature does not have a valid mode property"}}else s="Feature coordinates is not an array";else s="Feature is not Point, LineString or Polygon";else s="Feature has no properties";else s="Feature has no geometry";else s="Feature must match the id strategy (default is UUID4)";else s="Feature is not object";return s?{valid:!1,reason:s}:{valid:!0}})(t,this.store.idStrategy.isValidId);if(this.validate){const i=this.validate(t,{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Provisional});return{valid:e.valid&&i.valid,reason:i.reason}}return{valid:e.valid,reason:e.reason}}validateModeFeature(t,e){const i=this.performFeatureValidation(t);return i.valid?t.properties.mode!==this.mode?{valid:!1,reason:ri}:e(t):{valid:!1,reason:i.reason}}onFinish(t,e){}onDeselect(t){}onSelect(t){}onKeyDown(t){}onKeyUp(t){}onMouseMove(t){}onClick(t){}onDragStart(t,e){}onDrag(t,e){}onDragEnd(t,e){}getHexColorStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getNumericStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getStylingValue(t,e,i){return t===void 0?e:typeof t=="function"?t(i):t}}let ai=class extends R{constructor(...t){super(...t),this.type=Y.Select}};function G(r,t){const e=d=>d*Math.PI/180,i=e(r[1]),o=e(r[0]),s=e(t[1]),n=s-i,a=e(t[0])-o,l=Math.sin(n/2)*Math.sin(n/2)+Math.cos(i)*Math.cos(s)*Math.sin(a/2)*Math.sin(a/2);return 2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l))*6371e3/1e3}const se=63710088e-1;function _(r){return r%360*Math.PI/180}function re(r){return r/6371.0088}function $(r){return r%(2*Math.PI)*180/Math.PI}function L(r,t=9){const e=Math.pow(10,t);return Math.round(r*e)/e}const ne=57.29577951308232,ae=.017453292519943295,ft=6378137,x=(r,t)=>({x:r===0?0:r*ae*ft,y:t===0?0:Math.log(Math.tan(Math.PI/4+t*ae/2))*ft}),U=(r,t)=>({lng:r===0?0:ne*(r/ft),lat:t===0?0:(2*Math.atan(Math.exp(t/ft))-Math.PI/2)*ne});function li(r,t,e){const i=_(r[0]),o=_(r[1]),s=_(e),n=re(t),a=Math.asin(Math.sin(o)*Math.cos(n)+Math.cos(o)*Math.sin(n)*Math.cos(s));return[$(i+Math.atan2(Math.sin(s)*Math.sin(n)*Math.cos(o),Math.cos(n)-Math.sin(o)*Math.sin(a))),$(a)]}function le(r){const{center:t,radiusKilometers:e,coordinatePrecision:i}=r,o=r.steps?r.steps:64,s=[];for(let n=0;n<o;n++){const a=li(t,e,-360*n/o);s.push([L(a[0],i),L(a[1],i)])}return s.push(s[0]),{type:"Feature",geometry:{type:"Polygon",coordinates:[s]},properties:{}}}function _t(r){let t;if(r.geometry.type==="Polygon")t=r.geometry.coordinates;else{if(r.geometry.type!=="LineString")throw new Error("Self intersects only accepts Polygons and LineStrings");t=[r.geometry.coordinates]}const e=[];for(let s=0;s<t.length;s++)for(let n=0;n<t[s].length-1;n++)for(let a=0;a<t.length;a++)for(let l=0;l<t[a].length-1;l++)o(s,n,a,l);return e.length>0;function i(s){return s<0||s>1}function o(s,n,a,l){const d=t[s][n],c=t[s][n+1],h=t[a][l],u=t[a][l+1],p=(function(m,v,C,f){if(mt(m,C)||mt(m,f)||mt(v,C)||mt(f,C))return null;const P=m[0],I=m[1],w=v[0],M=v[1],D=C[0],T=C[1],N=f[0],j=f[1],q=(P-w)*(T-j)-(I-M)*(D-N);return q===0?null:[((P*M-I*w)*(D-N)-(P-w)*(D*j-T*N))/q,((P*M-I*w)*(T-j)-(I-M)*(D*j-T*N))/q]})(d,c,h,u);if(p===null)return;let g,y;g=c[0]!==d[0]?(p[0]-d[0])/(c[0]-d[0]):(p[1]-d[1])/(c[1]-d[1]),y=u[0]!==h[0]?(p[0]-h[0])/(u[0]-h[0]):(p[1]-h[1])/(u[1]-h[1]),i(g)||i(y)||(p.toString(),e.push(p))}}function mt(r,t){return r[0]===t[0]&&r[1]===t[1]}function vt(r,t){return de(r[0])<=t&&de(r[1])<=t}function kt(r){return r.length===2&&typeof r[0]=="number"&&typeof r[1]=="number"&&r[0]!==1/0&&r[1]!==1/0&&(e=r[0])>=-180&&e<=180&&(t=r[1])>=-90&&t<=90;var t,e}function de(r){let t=1,e=0;for(;Math.round(r*t)/t!==r;)t*=10,e++;return e}const di="Feature has holes",ci="Feature has less than 4 coordinates",hi="Feature has invalid coordinates",ui="Feature coordinates are not closed";function Ct(r,t){if(r.geometry.type!=="Polygon")return{valid:!1,reason:"Feature is not a Polygon"};if(r.geometry.coordinates.length!==1)return{valid:!1,reason:di};if(r.geometry.coordinates[0].length<4)return{valid:!1,reason:ci};for(let o=0;o<r.geometry.coordinates[0].length;o++){if(!kt(r.geometry.coordinates[0][o]))return{valid:!1,reason:hi};if(!vt(r.geometry.coordinates[0][o],t))return{valid:!1,reason:"Feature has coordinates with excessive precision"}}return(e=r.geometry.coordinates[0][0])[0]!==(i=r.geometry.coordinates[0][r.geometry.coordinates[0].length-1])[0]||e[1]!==i[1]?{valid:!1,reason:ui}:{valid:!0};var e,i}function rt(r,t){const e=Ct(r,t);return e.valid?_t(r)?{valid:!1,reason:"Feature intersects itself"}:{valid:!0}:e}const pi={cancel:"Escape",finish:"Enter"},gi={start:"crosshair"};let ce=class extends R{constructor(t){super(t,!0),this.mode="circle",this.center=void 0,this.clickCount=0,this.currentCircleId=void 0,this.keyEvents=pi,this.cursors=gi,this.startingRadiusKilometers=1e-5,this.cursorMovedAfterInitialCursorDown=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t!=null&&t.startingRadiusKilometers&&(this.startingRadiusKilometers=t.startingRadiusKilometers)}close(){if(this.currentCircleId===void 0)return;this.store.updateProperty([{id:this.currentCircleId,property:S.CURRENTLY_DRAWING,value:void 0}]);const t=this.currentCircleId;if(this.validate&&t){const e=this.store.getGeometryCopy(t);if(!this.validate({type:"Feature",id:t,geometry:e,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Finish}).valid)return}this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.clickCount===0){this.center=[t.lng,t.lat];const e=le({center:this.center,radiusKilometers:this.startingRadiusKilometers,coordinatePrecision:this.coordinatePrecision}),[i]=this.store.create([{geometry:e.geometry,properties:{mode:this.mode,radiusKilometers:this.startingRadiusKilometers,[S.CURRENTLY_DRAWING]:!0}}]);this.currentCircleId=i,this.clickCount++,this.cursorMovedAfterInitialCursorDown=!1,this.setDrawing()}else this.clickCount===1&&this.center&&this.currentCircleId!==void 0&&this.cursorMovedAfterInitialCursorDown&&this.updateCircle(t),this.close()}onMouseMove(t){this.cursorMovedAfterInitialCursorDown=!0,this.updateCircle(t)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentCircleId;this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted();try{t!==void 0&&this.store.delete([t])}catch{}}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.type==="Feature"&&t.geometry.type==="Polygon"&&t.properties.mode===this.mode&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=A),e}validateFeature(t){return this.validateModeFeature(t,e=>rt(e,this.coordinatePrecision))}updateCircle(t){if(this.clickCount===1&&this.center&&this.currentCircleId){const e=G(this.center,[t.lng,t.lat]);let i;if(this.projection==="web-mercator"){const o=(function(s,n){const a=1e3*G(s,n);if(a===0)return 1;const{x:l,y:d}=x(s[0],s[1]),{x:c,y:h}=x(n[0],n[1]);return Math.sqrt(Math.pow(c-l,2)+Math.pow(h-d,2))/a})(this.center,[t.lng,t.lat]);i=(function(s){const{center:n,radiusKilometers:a,coordinatePrecision:l}=s,d=s.steps?s.steps:64,c=1e3*a,[h,u]=n,{x:p,y:g}=x(h,u),y=[];for(let m=0;m<d;m++){const v=360*m/d*Math.PI/180,C=c*Math.cos(v),f=c*Math.sin(v),[P,I]=[p+C,g+f],{lng:w,lat:M}=U(P,I);y.push([L(w,l),L(M,l)])}return y.push(y[0]),{type:"Feature",geometry:{type:"Polygon",coordinates:[y]},properties:{}}})({center:this.center,radiusKilometers:e*o,coordinatePrecision:this.coordinatePrecision})}else{if(this.projection!=="globe")throw new Error("Invalid projection");i=le({center:this.center,radiusKilometers:e,coordinatePrecision:this.coordinatePrecision})}if(this.validate&&!this.validate({type:"Feature",id:this.currentCircleId,geometry:i.geometry,properties:{radiusKilometers:e}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Provisional}).valid)return;this.store.updateGeometry([{id:this.currentCircleId,geometry:i.geometry}]),this.store.updateProperty([{id:this.currentCircleId,property:"radiusKilometers",value:e}])}}afterFeatureUpdated(t){this.currentCircleId===t.id&&(this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted())}};const F=(r,t)=>{const{x:e,y:i}=r,{x:o,y:s}=t,n=o-e,a=s-i;return Math.sqrt(a*a+n*n)};function nt(r){if(!(function(e){const i=e.coordinates[0];let o=0;for(let s=0;s<i.length-1;s++){const[n,a]=i[s],[l,d]=i[s+1];o+=(l-n)*(d+a)}return o<0})(r))return{type:"Polygon",coordinates:[r.coordinates[0].reverse()]}}const yi={cancel:"Escape",finish:"Enter"},fi={start:"crosshair",close:"pointer"};class he extends R{constructor(t){super(t,!0),this.mode="freehand",this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.minDistance=20,this.keyEvents=yi,this.cursors=fi,this.preventPointsNearClose=!0,this.autoClose=!1,this.autoCloseTimeout=500,this.hasLeftStartingPoint=!1,this.preventNewFeature=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.minDistance&&(this.minDistance=t.minDistance),t?.preventPointsNearClose!==void 0&&(this.preventPointsNearClose=t.preventPointsNearClose),t?.autoClose!==void 0&&(this.autoClose=t.autoClose),t!=null&&t.autoCloseTimeout&&(this.autoCloseTimeout=t.autoCloseTimeout),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors))}close(){if(this.currentId===void 0)return;if(this.currentId){const e=nt(this.store.getGeometryCopy(this.currentId));e&&this.store.updateGeometry([{id:this.currentId,geometry:e}]),this.store.updateProperty([{id:this.currentId,property:S.CURRENTLY_DRAWING,value:void 0}])}const t=this.currentId;if(this.validate&&t){const e=this.store.getGeometryCopy(t);if(!this.validate({type:"Feature",id:t,geometry:e,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1,this.state==="drawing"&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){if(this.currentId===void 0||this.startingClick===!1)return void this.setCursor(this.cursors.start);const e=this.store.getGeometryCopy(this.currentId),i=e.coordinates[0].length-2,[o,s]=e.coordinates[0][i],{x:n,y:a}=this.project(o,s),l=F({x:n,y:a},{x:t.containerX,y:t.containerY}),[d,c]=e.coordinates[0][0],{x:h,y:u}=this.project(d,c);if(F({x:h,y:u},{x:t.containerX,y:t.containerY})<this.pointerDistance){if(this.autoClose&&this.hasLeftStartingPoint&&(this.preventNewFeature=!0,setTimeout(()=>{this.preventNewFeature=!1},this.autoCloseTimeout),this.close()),this.setCursor(this.cursors.close),this.preventPointsNearClose)return}else this.hasLeftStartingPoint=!0,this.setCursor(this.cursors.start);if(l<this.minDistance)return;e.coordinates[0].pop();const p={type:"Polygon",coordinates:[[...e.coordinates[0],[t.lng,t.lat],e.coordinates[0][0]]]};this.validate&&!this.validate({type:"Feature",id:this.currentId,geometry:p,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Provisional}).valid||this.store.updateGeometry([{id:this.currentId,geometry:p}])}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)){if(this.preventNewFeature)return;if(this.startingClick===!1){const[e,i]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0}},{geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:{mode:this.mode,[S.CLOSING_POINT]:!0}}]);return this.currentId=e,this.closingPointId=i,this.startingClick=!0,void(this.state!=="drawing"&&this.setDrawing())}this.close()}}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.startingClick===!0&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,this.state==="drawing"&&this.setStarted();try{t!==void 0&&this.store.delete([t]),e!==void 0&&this.store.delete([e])}catch{}}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.type==="Feature"&&t.geometry.type==="Polygon"&&t.properties.mode===this.mode?(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=A,e):(t.type==="Feature"&&t.geometry.type==="Point"&&t.properties.mode===this.mode&&(e.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,t),e.zIndex=50),e)}validateFeature(t){return this.validateModeFeature(t,e=>Ct(e,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1)}}let W=class{constructor({store:t,mode:e,project:i,unproject:o,pointerDistance:s,coordinatePrecision:n,projection:a}){this.store=void 0,this.mode=void 0,this.project=void 0,this.unproject=void 0,this.pointerDistance=void 0,this.coordinatePrecision=void 0,this.projection=void 0,this.store=t,this.mode=e,this.project=i,this.unproject=o,this.pointerDistance=s,this.coordinatePrecision=n,this.projection=a}};function ue({unproject:r,point:t,pointerDistance:e}){const i=e/2,{x:o,y:s}=t;return{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[r(o-i,s-i),r(o+i,s-i),r(o+i,s+i),r(o-i,s+i),r(o-i,s-i)].map(n=>[n.lng,n.lat])]}}}class at extends W{constructor(t){super(t)}create(t){const{containerX:e,containerY:i}=t;return ue({unproject:this.unproject,point:{x:e,y:i},pointerDistance:this.pointerDistance})}}class lt extends W{constructor(t){super(t)}measure(t,e){const{x:i,y:o}=this.project(e[0],e[1]);return F({x:i,y:o},{x:t.containerX,y:t.containerY})}}let Pt=class extends W{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=o=>this.getSnappable(o,s=>!!(s.properties&&s.properties.mode===this.mode)).coordinate,this.getSnappableCoordinate=(o,s)=>this.getSnappable(o,n=>!!(n.properties&&n.properties.mode===this.mode&&n.id!==s)).coordinate,this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDist:1/0};return o.forEach(n=>{let a;if(n.geometry.type==="Polygon")a=n.geometry.coordinates[0];else{if(n.geometry.type!=="LineString")return;a=n.geometry.coordinates}a.forEach((l,d)=>{const c=this.pixelDistance.measure(t,l);c<s.minDist&&c<this.pointerDistance&&(s.coordinate=l,s.minDist=c,s.featureId=n.id,s.featureCoordinateIndex=d)})}),s}};function pe(r,t,e){const i=_(r[0]),o=_(r[1]),s=_(e),n=re(t),a=Math.asin(Math.sin(o)*Math.cos(n)+Math.cos(o)*Math.sin(n)*Math.cos(s));return[$(i+Math.atan2(Math.sin(s)*Math.sin(n)*Math.cos(o),Math.cos(n)-Math.sin(o)*Math.sin(a))),$(a)]}function dt({x:r,y:t},e,i){const o=_(i);return{x:r+e*Math.cos(o),y:t+e*Math.sin(o)}}function ge(r,t){const e=_(r[0]),i=_(t[0]),o=_(r[1]),s=_(t[1]),n=Math.sin(i-e)*Math.cos(s),a=Math.cos(o)*Math.sin(s)-Math.sin(o)*Math.cos(s)*Math.cos(i-e);return $(Math.atan2(n,a))}function V({x:r,y:t},{x:e,y:i}){const o=e-r,s=i-t;if(o===0&&s===0)return 0;let n=Math.atan2(s,o);return n*=180/Math.PI,n>180?n-=360:n<-180&&(n+=360),n}function K(r){return(r+360)%360}function mi(r,t,e){const i=[],o=r.length;let s,n,a,l=0;for(let c=0;c<r.length&&!(t>=l&&c===r.length-1);c++){if(l>t&&i.length===0){if(s=t-l,!s)return i.push(r[c]),i;n=ge(r[c],r[c-1])-180,a=pe(r[c],s,n),i.push(a)}if(l>=e)return s=e-l,s?(n=ge(r[c],r[c-1])-180,a=pe(r[c],s,n),i.push(a),i):(i.push(r[c]),i);if(l>=t&&i.push(r[c]),c===r.length-1)return i;l+=G(r[c],r[c+1])}if(l<t&&r.length===o)throw new Error("Start position is beyond line");const d=r[r.length-1];return[d,d]}function St(r){return r*(Math.PI/180)}function ye(r){return r*(180/Math.PI)}class vi extends W{constructor(t){super(t),this.config=void 0,this.config=t}generateInsertionCoordinates(t,e,i){const o=[t,e];let s=0;for(let d=0;d<o.length-1;d++)s+=G(o[0],o[1]);if(s<=i)return o;let n=s/i-1;Number.isInteger(n)||(n=Math.floor(n)+1);const a=[];for(let d=0;d<n;d++){const c=mi(o,i*d,i*(d+1));a.push(c)}const l=[];for(let d=0;d<a.length;d++)l.push(a[d][1]);return this.limitCoordinates(l)}generateInsertionGeodesicCoordinates(t,e,i){const o=G(t,e),s=(function(n,a,l){const d=[],c=St(n[1]),h=St(n[0]),u=St(a[1]),p=St(a[0]);l+=1;const g=2*Math.asin(Math.sqrt(Math.sin((u-c)/2)**2+Math.cos(c)*Math.cos(u)*Math.sin((p-h)/2)**2));if(g===0||isNaN(g))return d;for(let y=0;y<=l;y++){const m=y/l,v=Math.sin((1-m)*g)/Math.sin(g),C=Math.sin(m*g)/Math.sin(g),f=v*Math.cos(c)*Math.cos(h)+C*Math.cos(u)*Math.cos(p),P=v*Math.cos(c)*Math.sin(h)+C*Math.cos(u)*Math.sin(p),I=v*Math.sin(c)+C*Math.sin(u);if(isNaN(f)||isNaN(P)||isNaN(I))continue;const w=Math.atan2(I,Math.sqrt(f**2+P**2)),M=Math.atan2(P,f);isNaN(w)||isNaN(M)||d.push([ye(M),ye(w)])}return d.slice(1,-1)})(t,e,Math.floor(o/i));return this.limitCoordinates(s)}limitCoordinates(t){return t.map(e=>[L(e[0],this.config.coordinatePrecision),L(e[1],this.config.coordinatePrecision)])}}function Z(r,t){return r[0]===t[0]&&r[1]===t[1]}function Nt(r,t){if(r.geometry.type!=="LineString")return{valid:!1,reason:"Feature is not a LineString"};if(r.geometry.coordinates.length<2)return{valid:!1,reason:"Feature has less than 2 coordinates"};for(let e=0;e<r.geometry.coordinates.length;e++){if(!kt(r.geometry.coordinates[e]))return{valid:!1,reason:"Feature has invalid coordinates"};if(!vt(r.geometry.coordinates[e],t))return{valid:!1,reason:"Feature has coordinates with excessive precision"}}return{valid:!0}}function fe(r){return Math.sqrt(Math.pow(r[0],2)+Math.pow(r[1],2)+Math.pow(r[2],2))}function X(r,t){const e=(function(i,o){const[s,n,a]=i,[l,d,c]=o;return s*l+n*d+a*c})(r,t)/(fe(r)*fe(t));return Math.acos(Math.min(Math.max(e,-1),1))}function Tt(r){const t=_(r[1]),e=_(r[0]);return[Math.cos(t)*Math.cos(e),Math.cos(t)*Math.sin(e),Math.sin(t)]}function H(r){const[t,e,i]=r,o=$(Math.asin(i));return[$(Math.atan2(e,t)),o]}function Ci(r,t,e){const i=Tt(r),o=Tt(t),s=Tt(e),[n,a,l]=s,[d,c,h]=(function(j,q){const[Qe,ti,ei]=j,[ii,oi,si]=q;return[ti*si-ei*oi,ei*ii-Qe*si,Qe*oi-ti*ii]})(i,o),u=c*l-h*a,p=h*n-d*l,g=d*a-c*n,y=g*c-p*h,m=u*h-g*d,v=p*d-u*c,C=1/Math.sqrt(Math.pow(y,2)+Math.pow(m,2)+Math.pow(v,2)),f=[y*C,m*C,v*C],P=[-1*y*C,-1*m*C,-1*v*C],I=X(i,o),w=X(i,f),M=X(o,f),D=X(i,P),T=X(o,P);let N;return N=w<D&&w<T||M<D&&M<T?f:P,X(i,N)>I||X(o,N)>I?G(H(N),H(i))<=G(H(N),H(o))?[H(i),!0,!1]:[H(o),!1,!0]:[H(N),!1,!1]}function Pi(r,t,e){const i=t.x-r.x,o=t.y-r.y,s=Math.max(0,Math.min(1,((e.x-r.x)*i+(e.y-r.y)*o)/(i*i+o*o)));return{x:r.x+s*i,y:r.y+s*o}}class Wt extends W{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=o=>{const s=this.getSnappable(o,n=>!!(n.properties&&n.properties.mode===this.mode));return s.coordinate?[L(s.coordinate[0],this.config.coordinatePrecision),L(s.coordinate[1],this.config.coordinatePrecision)]:void 0},this.getSnappableCoordinate=(o,s)=>{const n=this.getSnappable(o,a=>!!(a.properties&&a.properties.mode===this.mode&&a.id!==s));return n.coordinate?[L(n.coordinate[0],this.config.coordinatePrecision),L(n.coordinate[1],this.config.coordinatePrecision)]:void 0},this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDistance:1/0};return o.forEach(n=>{let a;if(n.geometry.type==="Polygon")a=n.geometry.coordinates[0];else{if(n.geometry.type!=="LineString")return;a=n.geometry.coordinates}const l=[];for(let u=0;u<a.length-1;u++)l.push([a[u],a[u+1]]);let d;const c=[t.lng,t.lat];if(this.config.projection==="web-mercator"?d=(function(u,p){let g=[1/0,1/0],y=1/0,m=0;for(let v of p){const C=v[0],f=v[1];let P,I=1/0;const w=x(C[0],C[1]),M=x(f[0],f[1]),D=x(u[0],u[1]);if(C[0]===u[0]&&C[1]===u[1])P=C;else if(f[0]===u[0]&&f[1]===u[1])P=f;else{const{x:T,y:N}=Pi(w,M,D),{lng:j,lat:q}=U(T,N);P=[j,q]}P&&(I=F(D,x(P[0],P[1])),I<y&&(g=P,y=I,m=p.indexOf(v)))}return y===1/0?void 0:{coordinate:g,lineIndex:m,distance:y}})(c,l):this.config.projection==="globe"&&(d=(function(u,p){let g=[1/0,1/0],y=1/0,m=0;for(let v of p){const C=v[0],f=v[1];let P,I=1/0;C[0]===u[0]&&C[1]===u[1]?P=C:f[0]===u[0]&&f[1]===u[1]?P=f:[P]=Ci(C,f,u),P&&(I=G(u,P),I<y&&(g=P,y=I,m=p.indexOf(v)))}return y===1/0?void 0:{coordinate:g,distance:y,lineIndex:m}})(c,l)),!d)return;const h=this.pixelDistance.measure(t,d.coordinate);h<s.minDistance&&h<this.pointerDistance&&(s.featureId=n.id,s.coordinate=[L(d.coordinate[0],this.config.coordinatePrecision),L(d.coordinate[1],this.config.coordinatePrecision)],s.featureCoordinateIndex=d.lineIndex,s.minDistance=h)}),s}}const Si={cancel:"Escape",finish:"Enter"},Ii={start:"crosshair",close:"pointer",dragStart:"grabbing",dragEnd:"crosshair"};class Bt extends R{constructor(t){super(t,!0),this.mode="linestring",this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.keyEvents=Si,this.snapping=void 0,this.cursors=Ii,this.mouseMove=!1,this.insertCoordinates=void 0,this.lastCommittedCoordinates=void 0,this.snappedPointId=void 0,this.lastMouseMoveEvent=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinateSnapping=void 0,this.insertPoint=void 0,this.lineSnapping=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t!=null&&t.snapping&&(this.snapping=t.snapping),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t!=null&&t.insertCoordinates&&(this.insertCoordinates=t.insertCoordinates),t&&t.editable&&(this.editable=t.editable)}updateSnappedCoordinate(t){const e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:"Point",coordinates:e}}]);else{const[i]=this.store.create([{geometry:{type:"Point",coordinates:e},properties:{mode:this.mode,[S.SNAPPING_POINT]:!0}}]);this.snappedPointId=i}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);return e}close(){if(this.currentId===void 0)return;const t=this.store.getGeometryCopy(this.currentId);t.coordinates.pop(),this.updateGeometries([...t.coordinates],void 0,b.Commit),this.store.updateProperty([{id:this.currentId,property:S.CURRENTLY_DRAWING,value:void 0}]);const e=this.currentId;this.closingPointId&&this.store.delete([this.closingPointId]),this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.snappedPointId=void 0,this.lastCommittedCoordinates=void 0,this.state==="drawing"&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}updateGeometries(t,e,i){if(!this.currentId)return;const o={type:"LineString",coordinates:t};if(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid)return;const s=[{id:this.currentId,geometry:o}];this.closingPointId&&e&&s.push({id:this.closingPointId,geometry:{type:"Point",coordinates:e}}),i==="commit"&&(this.lastCommittedCoordinates=o.coordinates),this.store.updateGeometry(s)}generateInsertCoordinates(t,e){if(!this.insertCoordinates||!this.lastCommittedCoordinates)throw new Error("Not able to insert coordinates");if(this.insertCoordinates.strategy!=="amount")throw new Error("Strategy does not exist");const i=G(t,e)/(this.insertCoordinates.value+1);let o=[];return this.projection==="globe"?o=this.insertPoint.generateInsertionGeodesicCoordinates(t,e,i):this.projection==="web-mercator"&&(o=this.insertPoint.generateInsertionCoordinates(t,e,i)),o}createLine(t){const[e]=this.store.create([{geometry:{type:"LineString",coordinates:[t,t]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0}}]);this.lastCommittedCoordinates=[t,t],this.currentId=e,this.currentCoordinate++,this.setDrawing()}firstUpdateToLine(t){if(!this.currentId)return;const e=this.store.getGeometryCopy(this.currentId).coordinates,[i]=this.store.create([{geometry:{type:"Point",coordinates:[...t]},properties:{mode:this.mode,[S.CLOSING_POINT]:!0}}]);this.closingPointId=i,this.setCursor(this.cursors.close);const o=[...e,t];this.updateGeometries(o,void 0,b.Commit),this.currentCoordinate++}updateToLine(t,e){if(!this.currentId)return;const i=this.store.getGeometryCopy(this.currentId).coordinates,[o,s]=this.lastCommittedCoordinates?this.lastCommittedCoordinates[this.lastCommittedCoordinates.length-1]:i[i.length-2],{x:n,y:a}=this.project(o,s);if(F({x:n,y:a},{x:e.x,y:e.y})<this.pointerDistance)return void this.close();this.setCursor(this.cursors.close);const l=[...i,t];this.updateGeometries(l,i[i.length-1],b.Commit),this.currentCoordinate++}registerBehaviors(t){this.coordinateSnapping=new Pt(t,new lt(t),new at(t)),this.insertPoint=new vi(t),this.clickBoundingBox=new at(t),this.pixelDistance=new lt(t),this.lineSnapping=new Wt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new Pt(t,this.pixelDistance,this.clickBoundingBox)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){this.mouseMove=!0,this.setCursor(this.cursors.start),this.lastMouseMoveEvent=t;const e=this.updateSnappedCoordinate(t)||[t.lng,t.lat];if(this.currentId===void 0||this.currentCoordinate===0)return;const i=this.store.getGeometryCopy(this.currentId).coordinates;if(i.pop(),this.closingPointId){const[s,n]=i[i.length-1],{x:a,y:l}=this.project(s,n);F({x:a,y:l},{x:t.containerX,y:t.containerY})<this.pointerDistance&&this.setCursor(this.cursors.close)}let o=[...i,e];if(this.insertCoordinates&&this.currentId&&this.lastCommittedCoordinates){const s=this.lastCommittedCoordinates[this.lastCommittedCoordinates.length-1],n=e;if(!Z(s,n)){const a=this.generateInsertCoordinates(s,n);o=[...this.lastCommittedCoordinates.slice(0,-1),...a,e]}}this.updateGeometries(o,void 0,b.Provisional)}onRightClick(t){if(!this.editable||this.state!=="started")return;const{featureId:e,featureCoordinateIndex:i}=this.coordinateSnapping.getSnappable(t,n=>this.lineStringFilter(n));if(!e||i===void 0)return;const o=this.store.getGeometryCopy(e);let s;if(o.type==="LineString"&&(s=o.coordinates,!(s.length<=2))){if(s.splice(i,1),this.validate&&!this.validate({id:e,type:"Feature",geometry:o,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Commit}).valid)return;this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:e,geometry:o}]),this.onFinish(e,{mode:this.mode,action:"edit"})}}onLeftClick(t){this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);const e=this.snapCoordinate(t)||[t.lng,t.lat];this.currentCoordinate===0?this.createLine(e):this.currentCoordinate===1&&this.currentId?this.firstUpdateToLine(e):this.currentId&&this.updateToLine(e,{x:t.containerX,y:t.containerY})}onClick(t){(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))&&(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,t.button==="right"?this.onRightClick(t):t.button==="left"&&this.onLeftClick(t))}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel&&this.cleanUp(),t.key===this.keyEvents.finish&&this.close()}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t)||!this.editable)return;let i;if(this.state==="started"){const o=this.lineSnapping.getSnappable(t,n=>this.lineStringFilter(n));o.coordinate&&(this.editedSnapType="line",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate);const s=this.coordinateSnapping.getSnappable(t,n=>this.lineStringFilter(n));s.coordinate&&(this.editedSnapType="coordinate",this.editedFeatureCoordinateIndex=s.featureCoordinateIndex,this.editedFeatureId=s.featureId,i=s.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[o]=this.store.create([{geometry:{type:"Point",coordinates:i},properties:{mode:this.mode,[S.EDITED]:!0}}]);this.editedPointId=o}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t)||this.editedFeatureId===void 0||this.editedFeatureCoordinateIndex===void 0)return;const i=this.store.getGeometryCopy(this.editedFeatureId);this.editedSnapType==="coordinate"||this.editedSnapType==="line"&&this.editedInsertIndex!==void 0?i.coordinates[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:this.editedSnapType==="line"&&this.editedInsertIndex===void 0&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,i.coordinates.splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const o={type:"LineString",coordinates:i.coordinates};this.validate&&!this.validate({type:"Feature",geometry:o,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:o}]),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:S.EDITED,value:!0}]))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&this.editedFeatureId!==void 0&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:S.EDITED,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.closingPointId,i=this.snappedPointId;this.closingPointId=void 0,this.snappedPointId=void 0,this.currentId=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted();try{t!==void 0&&this.store.delete([t]),i!==void 0&&this.store.delete([i]),e!==void 0&&this.store.delete([e])}catch{}}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.type==="Feature"&&t.geometry.type==="LineString"&&t.properties.mode===this.mode)return e.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,e.lineStringWidth,t),e.zIndex=A,e;if(t.type==="Feature"&&t.geometry.type==="Point"&&t.properties.mode===this.mode){const i=t.properties[S.CLOSING_POINT];return e.pointColor=this.getHexColorStylingValue(i?this.styles.closingPointColor:this.styles.snappingPointColor,e.pointColor,t),e.pointWidth=this.getNumericStylingValue(i?this.styles.closingPointWidth:this.styles.snappingPointWidth,e.pointWidth,t),e.pointOutlineColor=this.getHexColorStylingValue(i?this.styles.closingPointOutlineColor:this.styles.snappingPointOutlineColor,"#ffffff",t),e.pointOutlineWidth=this.getNumericStylingValue(i?this.styles.closingPointOutlineWidth:this.styles.snappingPointOutlineWidth,2,t),e.zIndex=50,e}return e}validateFeature(t){return this.validateModeFeature(t,e=>Nt(e,this.coordinatePrecision))}lineStringFilter(t){return!!(t.geometry.type==="LineString"&&t.properties&&t.properties.mode===this.mode)}snapCoordinate(t){var e,i,o;let s;if((e=this.snapping)!=null&&e.toLine){let n;n=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t),n&&(s=n)}return(i=this.snapping)!=null&&i.toCoordinate&&(s=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t)),(o=this.snapping)!=null&&o.toCustom&&(s=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?()=>this.store.getGeometryCopy(this.currentId):()=>null,project:this.project,unproject:this.unproject})),s}afterFeatureUpdated(t){this.editedFeatureId===t.id&&this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0),this.snappedPointId&&this.lastMouseMoveEvent&&this.updateSnappedCoordinate(this.lastMouseMoveEvent),this.currentId===t.id&&(this.closingPointId&&(this.store.delete([this.closingPointId]),this.closingPointId=void 0),this.currentCoordinate=0,this.currentId=void 0,this.state==="drawing"&&this.setStarted())}}const Oi="Feature is not a Point",xi="Feature has invalid coordinates",bi="Feature has coordinates with excessive precision";function me(r,t){return r.geometry.type!=="Point"?{valid:!1,reason:Oi}:kt(r.geometry.coordinates)?vt(r.geometry.coordinates,t)?{valid:!0}:{valid:!1,reason:bi}:{valid:!1,reason:xi}}const Ei={create:"crosshair",dragStart:"grabbing",dragEnd:"crosshair"};class jt extends R{constructor(t){super(t,!0),this.mode="point",this.cursors=Ei,this.editable=!1,this.editedFeatureId=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t!=null&&t.editable&&(this.editable=t.editable)}start(){this.setStarted(),this.setCursor(this.cursors.create)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onClick(t){t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}onMouseMove(){}onKeyDown(){}onKeyUp(){}cleanUp(){this.editedFeatureId=void 0}onDragStart(t,e){if(this.allowPointerEvent(this.pointerEvents.onDragStart,t)){if(this.editable){const i=this.getNearestPointFeature(t);this.editedFeatureId=i?.id}this.editedFeatureId&&(this.setCursor(this.cursors.dragStart),e(!1))}}onDrag(t,e){this.allowPointerEvent(this.pointerEvents.onDrag,t)&&this.editedFeatureId!==void 0&&(this.validate&&!this.validate({type:"Feature",geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Finish}).valid||(this.store.updateGeometry([{id:this.editedFeatureId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:S.EDITED,value:!0}])))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&this.editedFeatureId!==void 0&&(this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.setCursor(this.cursors.dragEnd),this.store.updateProperty([{id:this.editedFeatureId,property:S.EDITED,value:!1}]),this.editedFeatureId=void 0,e(!0))}registerBehaviors(t){this.pixelDistance=new lt(t),this.clickBoundingBox=new at(t)}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.type==="Feature"&&t.geometry.type==="Point"&&t.properties.mode===this.mode){const i=!!(t.id&&this.editedFeatureId===t.id);e.pointWidth=this.getNumericStylingValue(i?this.styles.editedPointWidth:this.styles.pointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(i?this.styles.editedPointColor:this.styles.pointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(i?this.styles.editedPointOutlineColor:this.styles.pointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(i?this.styles.editedPointOutlineWidth:this.styles.pointOutlineWidth,2,t),e.zIndex=30}return e}validateFeature(t){return this.validateModeFeature(t,e=>me(e,this.coordinatePrecision))}onLeftClick(t){const e={type:"Point",coordinates:[t.lng,t.lat]},i={mode:this.mode};if(this.validate&&!this.validate({type:"Feature",geometry:e,properties:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Finish}).valid)return;const[o]=this.store.create([{geometry:e,properties:i}]);this.onFinish(o,{mode:this.mode,action:"draw"})}onRightClick(t){if(!this.editable)return;const e=this.getNearestPointFeature(t);e&&this.store.delete([e.id])}getNearestPointFeature(t){const e=this.clickBoundingBox.create(t),i=this.store.search(e);let o,s=1/0;for(let n=0;n<i.length;n++){const a=i[n];if(a.geometry.type!=="Point"||a.properties.mode!==this.mode)continue;const l=this.pixelDistance.measure(t,a.geometry.coordinates);l>s||l>this.pointerDistance||(s=l,o=a)}return o}afterFeatureUpdated(t){this.editedFeatureId===t.id&&(this.editedFeatureId=void 0,this.setCursor(this.cursors.create))}}class wi extends W{constructor(t,e){super(t),this.config=void 0,this.pixelDistance=void 0,this._startEndPoints=[],this.config=t,this.pixelDistance=e}get ids(){return this._startEndPoints.concat()}set ids(t){}create(t,e){if(this.ids.length)throw new Error("Opening and closing points already created");if(t.length<=3)throw new Error("Requires at least 4 coordinates");this._startEndPoints=this.store.create([{geometry:{type:"Point",coordinates:t[0]},properties:{mode:e,[S.CLOSING_POINT]:!0}},{geometry:{type:"Point",coordinates:t[t.length-2]},properties:{mode:e,[S.CLOSING_POINT]:!0}}])}delete(){this.ids.length&&(this.store.delete(this.ids),this._startEndPoints=[])}update(t){if(this.ids.length!==2)throw new Error("No closing points to update");this.store.updateGeometry([{id:this.ids[0],geometry:{type:"Point",coordinates:t[0]}},{id:this.ids[1],geometry:{type:"Point",coordinates:t[t.length-3]}}])}isClosingPoint(t){const e=this.store.getGeometryCopy(this.ids[0]),i=this.store.getGeometryCopy(this.ids[1]),o=this.pixelDistance.measure(t,e.coordinates),s=this.pixelDistance.measure(t,i.coordinates);return{isClosing:o<this.pointerDistance,isPreviousClosing:s<this.pointerDistance}}}class ve extends W{constructor(t){super(t)}createOrUpdate(t){const e=this.store.getGeometryCopy(t),i=this.store.getPropertiesCopy(t);let o;if(e.type==="Polygon")o=e.coordinates[0].slice(0,-1);else{if(e.type!=="LineString")return;o=e.coordinates}const s=this.store.getPropertiesCopy(t),n=s.coordinatePointIds;if(n)if(n&&n.every(a=>this.store.has(a))){const a=s.coordinatePointIds,l=a.map(d=>this.store.getGeometryCopy(d).coordinates);if(a.length!==o.length){this.deleteCoordinatePoints(a);const d=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,d)}else o.forEach((d,c)=>{d[0]===l[c][0]&&d[1]===l[c][1]||this.store.updateGeometry([{id:a[c],geometry:{type:"Point",coordinates:d}}])})}else{const a=n.filter(d=>this.store.has(d));a.length&&this.deleteCoordinatePoints(a);const l=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,l)}else{const a=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,a)}}deletePointsByFeatureIds(t){for(const e of t)this.deleteIfPresent(e)}getUpdated(t,e){const i=this.store.getPropertiesCopy(t);if(i.coordinatePointIds)return i.coordinatePointIds.map((o,s)=>({id:o,geometry:O({},this.store.getGeometryCopy(o),{coordinates:e[s]})}))}createPoints(t,e,i){return this.store.create(t.map((o,s)=>({geometry:{type:"Point",coordinates:o},properties:{mode:e,[S.COORDINATE_POINT]:!0,[S.COORDINATE_POINT_FEATURE_ID]:i,index:s}})))}setFeatureCoordinatePoints(t,e){this.store.updateProperty([{id:t,property:S.COORDINATE_POINT_IDS,value:e}])}deleteCoordinatePoints(t){const e=t.filter(i=>this.store.has(i));this.store.delete(e)}deleteIfPresent(t){const e=this.store.getPropertiesCopy(t).coordinatePointIds;e&&(this.deleteCoordinatePoints(e),this.setFeatureCoordinatePoints(t,null))}}const Li={cancel:"Escape",finish:"Enter"},Mi={start:"crosshair",close:"pointer",dragStart:"grabbing",dragEnd:"crosshair"};class Ce extends R{constructor(t){super(t,!0),this.mode="polygon",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=Li,this.cursors=Mi,this.mouseMove=!1,this.showCoordinatePoints=!1,this.lastMouseMoveEvent=void 0,this.snapping=void 0,this.snappedPointId=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinatePoints=void 0,this.lineSnapping=void 0,this.coordinateSnapping=void 0,this.pixelDistance=void 0,this.closingPoints=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(t){if(super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t!=null&&t.snapping&&(this.snapping=t.snapping),t?.editable!==void 0&&(this.editable=t.editable),t?.pointerEvents!==void 0&&(this.pointerEvents=t.pointerEvents),t?.showCoordinatePoints!==void 0){if(this.showCoordinatePoints=t.showCoordinatePoints,this.coordinatePoints&&t.showCoordinatePoints===!0)this.store.copyAllWhere(e=>e.mode===this.mode).map(e=>e.id).forEach(e=>{this.coordinatePoints.createOrUpdate(e)});else if(this.coordinatePoints&&this.showCoordinatePoints===!1){const e=this.store.copyAllWhere(i=>i.mode===this.mode&&!!i[S.COORDINATE_POINT_IDS]);this.coordinatePoints.deletePointsByFeatureIds(e.map(i=>i.id))}}}close(){if(this.currentId===void 0)return;const t=this.store.getGeometryCopy(this.currentId).coordinates[0];if(t.length<5||!this.updatePolygonGeometry([...t.slice(0,-2),t[0]],b.Finish))return;const e=this.currentId;if(this.currentId){const i=nt(this.store.getGeometryCopy(this.currentId));i&&(this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId)),this.store.updateProperty([{id:this.currentId,property:S.CURRENTLY_DRAWING,value:void 0},{id:this.currentId,property:S.COMMITTED_COORDINATE_COUNT,value:void 0},{id:this.currentId,property:S.PROVISIONAL_COORDINATE_COUNT,value:void 0}])}this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.snappedPointId=void 0,this.closingPoints.delete(),this.state==="drawing"&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}registerBehaviors(t){this.clickBoundingBox=new at(t),this.pixelDistance=new lt(t),this.lineSnapping=new Wt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new Pt(t,this.pixelDistance,this.clickBoundingBox),this.closingPoints=new wi(t,this.pixelDistance),this.coordinatePoints=new ve(t)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}updateSnappedCoordinate(t){const e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:"Point",coordinates:e}}]);else{const[i]=this.store.create([{geometry:{type:"Point",coordinates:e},properties:{mode:this.mode,[S.SNAPPING_POINT]:!0}}]);this.snappedPointId=i}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0)}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),this.lastMouseMoveEvent=t,this.updateSnappedCoordinate(t),this.currentId===void 0||this.currentCoordinate===0)return;const e=this.store.getGeometryCopy(this.currentId).coordinates[0];let i;if(this.currentCoordinate===1){const o=1/Math.pow(10,this.coordinatePrecision-1),s=Math.max(1e-6,o);i=[e[0],[t.lng,t.lat],[t.lng,t.lat-s],e[0]]}else if(this.currentCoordinate===2)i=[e[0],e[1],[t.lng,t.lat],e[0]];else{const{isClosing:o,isPreviousClosing:s}=this.closingPoints.isClosingPoint(t);s||o?(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.setCursor(this.cursors.close),i=[...e.slice(0,-2),e[0],e[0]]):i=[...e.slice(0,-2),[t.lng,t.lat],e[0]]}this.store.updateProperty([{id:this.currentId,property:S.PROVISIONAL_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.updatePolygonGeometry(i,b.Provisional)}updatePolygonGeometry(t,e){if(!this.currentId)return!1;const i={type:"Polygon",coordinates:[t]};return!(this.validate&&!this.validate({type:"Feature",geometry:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid||(this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId),0))}snapCoordinate(t){var e,i,o;let s;if((e=this.snapping)!=null&&e.toLine){let n;n=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t),n&&(s=n)}if((i=this.snapping)!=null&&i.toCoordinate){let n;n=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t),n&&(s=n)}return(o=this.snapping)!=null&&o.toCustom&&(s=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?()=>this.store.getGeometryCopy(this.currentId):()=>null,project:this.project,unproject:this.unproject})),s}polygonFilter(t){return!!(t.geometry.type==="Polygon"&&t.properties&&t.properties.mode===this.mode)}onRightClick(t){if(!this.editable||this.state!=="started")return;const{featureId:e,featureCoordinateIndex:i}=this.coordinateSnapping.getSnappable(t,n=>this.polygonFilter(n));if(!e||i===void 0)return;const o=this.store.getGeometryCopy(e);let s;o.type==="Polygon"&&(s=o.coordinates[0],s.length<=4||(o.type!=="Polygon"||i!==0&&i!==s.length-1?s.splice(i,1):(s.shift(),s.pop(),s.push([s[0][0],s[0][1]])),(!this.validate||this.validate({id:e,type:"Feature",geometry:o,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Commit}).valid)&&(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:e,geometry:o}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(e),this.onFinish(e,{mode:this.mode,action:"edit"}))))}onLeftClick(t){if(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.currentCoordinate===0){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const[i]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0,[S.COMMITTED_COORDINATE_COUNT]:this.currentCoordinate+1,[S.PROVISIONAL_COORDINATE_COUNT]:this.currentCoordinate+1}}]);this.currentId=i,this.currentCoordinate++,this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(i),this.setDrawing()}else if(this.currentCoordinate===1&&this.currentId){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const i=this.store.getGeometryCopy(this.currentId);if(Z([t.lng,t.lat],i.coordinates[0][0])||!this.updatePolygonGeometry([i.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],i.coordinates[0][0]],b.Commit))return;this.store.updateProperty([{id:this.currentId,property:S.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++}else if(this.currentCoordinate===2&&this.currentId){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const i=this.store.getGeometryCopy(this.currentId).coordinates[0];if(Z([t.lng,t.lat],i[1])||!this.updatePolygonGeometry([i[0],i[1],[t.lng,t.lat],[t.lng,t.lat],i[0]],b.Commit))return;this.currentCoordinate===2&&this.closingPoints.create(i,"polygon"),this.store.updateProperty([{id:this.currentId,property:S.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++}else if(this.currentId){const e=this.store.getGeometryCopy(this.currentId).coordinates[0],{isClosing:i,isPreviousClosing:o}=this.closingPoints.isClosingPoint(t);if(o||i)this.close();else{const s=this.snapCoordinate(t);if(s&&(t.lng=s[0],t.lat=s[1]),Z([t.lng,t.lat],e[this.currentCoordinate-1]))return;const n=(function(a=[[[0,0],[0,1],[1,1],[1,0],[0,0]]]){return{type:"Feature",geometry:{type:"Polygon",coordinates:a},properties:{}}})([[...e.slice(0,-1),[t.lng,t.lat],e[0]]]);if(!this.updatePolygonGeometry(n.geometry.coordinates[0],b.Commit))return;this.store.updateProperty([{id:this.currentId,property:S.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++,this.closingPoints.ids.length&&this.closingPoints.update(n.geometry.coordinates[0])}}}onClick(t){this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t)||!this.editable)return;let i;if(this.state==="started"){const o=this.lineSnapping.getSnappable(t,n=>this.polygonFilter(n));o.coordinate&&(this.editedSnapType="line",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate);const s=this.coordinateSnapping.getSnappable(t,n=>this.polygonFilter(n));s.coordinate&&(this.editedSnapType="coordinate",this.editedFeatureCoordinateIndex=s.featureCoordinateIndex,this.editedFeatureId=s.featureId,i=s.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[o]=this.store.create([{geometry:{type:"Point",coordinates:i},properties:{mode:this.mode,[S.EDITED]:!0}}]);this.editedPointId=o}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t)||this.editedFeatureId===void 0||this.editedFeatureCoordinateIndex===void 0)return;const i=this.store.getGeometryCopy(this.editedFeatureId),o=i.coordinates[0];this.editedSnapType==="coordinate"||this.editedSnapType==="line"&&this.editedInsertIndex!==void 0?this.editedFeatureCoordinateIndex===0||this.editedFeatureCoordinateIndex===i.coordinates[0].length-1?(o[0]=[t.lng,t.lat],o[o.length-1]=[t.lng,t.lat]):o[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:this.editedSnapType==="line"&&this.editedInsertIndex===void 0&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,i.coordinates[0].splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const s={type:"Polygon",coordinates:i.coordinates};this.validate&&!this.validate({type:"Feature",geometry:s,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:s}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.editedFeatureId),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:S.EDITED,value:!0}]))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&this.editedFeatureId!==void 0&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:S.EDITED,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.snappedPointId,i=this.editedPointId;this.currentId=void 0,this.snappedPointId=void 0,this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted();try{t&&this.coordinatePoints.deletePointsByFeatureIds([t]),t!==void 0&&this.store.delete([t]),i!==void 0&&this.store.delete([i]),e!==void 0&&this.store.delete([e]),this.closingPoints.ids.length&&this.closingPoints.delete()}catch{}}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.properties.mode===this.mode){if(t.geometry.type==="Polygon")return e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=A,e;if(t.geometry.type==="Point"){const i=t.properties[S.EDITED],o=t.properties[S.COORDINATE_POINT],s=i?"editedPoint":t.properties[S.CLOSING_POINT]?"closingPoint":t.properties[S.SNAPPING_POINT]?"snappingPoint":o?"coordinatePoint":void 0;if(!s)return e;const n={editedPoint:{width:this.styles.editedPointOutlineWidth,color:this.styles.editedPointColor,outlineColor:this.styles.editedPointOutlineColor,outlineWidth:this.styles.editedPointOutlineWidth},closingPoint:{width:this.styles.closingPointWidth,color:this.styles.closingPointColor,outlineColor:this.styles.closingPointOutlineColor,outlineWidth:this.styles.closingPointOutlineWidth},snappingPoint:{width:this.styles.snappingPointWidth,color:this.styles.snappingPointColor,outlineColor:this.styles.snappingPointOutlineColor,outlineWidth:this.styles.snappingPointOutlineWidth},coordinatePoint:{width:this.styles.coordinatePointWidth,color:this.styles.coordinatePointColor,outlineColor:this.styles.coordinatePointOutlineColor,outlineWidth:this.styles.coordinatePointOutlineWidth}};return e.pointWidth=this.getNumericStylingValue(n[s].width,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(n[s].color,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(n[s].outlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(n[s].outlineWidth,2,t),e.zIndex=i?40:o?20:30,e}}return e}afterFeatureAdded(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id)}afterFeatureUpdated(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id),this.editedFeatureId===t.id&&this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0),this.snappedPointId&&this.lastMouseMoveEvent&&this.updateSnappedCoordinate(this.lastMouseMoveEvent),this.currentId===t.id&&(this.currentCoordinate=0,this.currentId=void 0,this.closingPoints.delete(),this.state==="drawing"&&this.setStarted())}validateFeature(t){return this.validateModeFeature(t,e=>Ct(e,this.coordinatePrecision))}}const Fi={cancel:"Escape",finish:"Enter"},Di={start:"crosshair"};class Pe extends R{constructor(t){super(t,!0),this.mode="rectangle",this.center=void 0,this.clickCount=0,this.currentRectangleId=void 0,this.keyEvents=Fi,this.cursors=Di,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents))}updateRectangle(t,e){if(this.clickCount===1&&this.center&&this.currentRectangleId){const i=this.store.getGeometryCopy(this.currentRectangleId).coordinates[0][0],o={type:"Polygon",coordinates:[[i,[t.lng,i[1]],[t.lng,t.lat],[i[0],t.lat],i]]};if(this.validate&&!this.validate({id:this.currentRectangleId,geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid)return;this.store.updateGeometry([{id:this.currentRectangleId,geometry:o}])}}close(){const t=this.currentRectangleId;if(t){const e=nt(this.store.getGeometryCopy(t));e&&this.store.updateGeometry([{id:t,geometry:e}]),this.store.updateProperty([{id:t,property:S.CURRENTLY_DRAWING,value:void 0}])}this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted(),t!==void 0&&this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.clickCount===0){this.center=[t.lng,t.lat];const[e]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0}}]);this.currentRectangleId=e,this.clickCount++,this.setDrawing()}else this.updateRectangle(t,b.Finish),this.close()}onMouseMove(t){this.updateRectangle(t,b.Provisional)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentRectangleId;this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted(),t!==void 0&&this.store.delete([t])}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.type==="Feature"&&t.geometry.type==="Polygon"&&t.properties.mode===this.mode&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=A),e}validateFeature(t){return this.validateModeFeature(t,e=>rt(e,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentRectangleId===t.id&&(this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted())}}class Q extends R{constructor(t){if(!t.modeName)throw new Error("Mode name is required for TerraDrawRenderMode");super(t,!0),this.type=Y.Render,this.mode="render",this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.modeName&&(this.mode=t.modeName)}registerBehaviors(t){this.mode=t.mode}start(){this.setStarted()}stop(){this.setStopped()}onKeyUp(){}onKeyDown(){}onClick(){}onDragStart(){}onDrag(){}onDragEnd(){}onMouseMove(){}cleanUp(){}styleFeature(t){return{pointColor:this.getHexColorStylingValue(this.styles.pointColor,"#3f97e0",t),pointWidth:this.getNumericStylingValue(this.styles.pointWidth,6,t),pointOutlineColor:this.getHexColorStylingValue(this.styles.pointOutlineColor,"#ffffff",t),pointOutlineWidth:this.getNumericStylingValue(this.styles.pointOutlineWidth,0,t),polygonFillColor:this.getHexColorStylingValue(this.styles.polygonFillColor,"#3f97e0",t),polygonFillOpacity:this.getNumericStylingValue(this.styles.polygonFillOpacity,.3,t),polygonOutlineColor:this.getHexColorStylingValue(this.styles.polygonOutlineColor,"#3f97e0",t),polygonOutlineWidth:this.getNumericStylingValue(this.styles.polygonOutlineWidth,4,t),lineStringWidth:this.getNumericStylingValue(this.styles.lineStringWidth,4,t),lineStringColor:this.getHexColorStylingValue(this.styles.lineStringColor,"#3f97e0",t),zIndex:this.getNumericStylingValue(this.styles.zIndex,0,t)}}validateFeature(t){const e=super.validateFeature(t);if(e.valid){const i=t,o=me(i,this.coordinatePrecision).valid||Ct(i,this.coordinatePrecision).valid||Nt(i,this.coordinatePrecision).valid;return o?{valid:!0}:{valid:o,reason:"Feature is not a valid Point, Polygon or LineString feature"}}return e}}function At(r,t){const e=r,i=t,o=_(e[1]),s=_(i[1]);let n=_(i[0]-e[0]);n>Math.PI&&(n-=2*Math.PI),n<-Math.PI&&(n+=2*Math.PI);const a=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),l=($(Math.atan2(n,a))+360)%360;return l>180?-(360-l):l}function Se(r,t,e){let i=t;t<0&&(i=-Math.abs(i));const o=i/se,s=r[0]*Math.PI/180,n=_(r[1]),a=_(e),l=o*Math.cos(a);let d=n+l;Math.abs(d)>Math.PI/2&&(d=d>0?Math.PI-d:-Math.PI-d);const c=Math.log(Math.tan(d/2+Math.PI/4)/Math.tan(n/2+Math.PI/4)),h=Math.abs(c)>1e-11?l/c:Math.cos(n),u=[(180*(s+o*Math.sin(a)/h)/Math.PI+540)%360-180,180*d/Math.PI];return u[0]+=u[0]-r[0]>180?-360:r[0]-u[0]>180?360:0,u}function Ie(r,t,e,i,o){const s=i(r[0],r[1]),n=i(t[0],t[1]),{lng:a,lat:l}=o((s.x+n.x)/2,(s.y+n.y)/2);return[L(a,e),L(l,e)]}function _i(r,t,e){const i=Se(r,1e3*G(r,t)/2,At(r,t));return[L(i[0],e),L(i[1],e)]}function Oe({featureCoords:r,precision:t,unproject:e,project:i,projection:o}){const s=[];for(let n=0;n<r.length-1;n++){let a;if(o==="web-mercator")a=Ie(r[n],r[n+1],t,i,e);else{if(o!=="globe")throw new Error("Invalid projection");a=_i(r[n],r[n+1],t)}s.push(a)}return s}class ki extends W{constructor(t,e,i){super(t),this.config=void 0,this.selectionPointBehavior=void 0,this.coordinatePointBehavior=void 0,this._midPoints=[],this.config=t,this.selectionPointBehavior=e,this.coordinatePointBehavior=i}get ids(){return this._midPoints.concat()}set ids(t){}insert(t,e,i){const o=this.store.getGeometryCopy(e),{midPointFeatureId:s,midPointSegment:n}=this.store.getPropertiesCopy(e),a=this.store.getGeometryCopy(s),l=a.type==="Polygon"?a.coordinates[0]:a.coordinates;l.splice(n+1,0,o.coordinates),a.coordinates=a.type==="Polygon"?[l]:l,this.store.updateGeometry([{id:s,geometry:a}]),this.store.getPropertiesCopy(t)[S.COORDINATE_POINT_IDS]&&this.coordinatePointBehavior.createOrUpdate(t),this.store.delete([...this._midPoints,...this.selectionPointBehavior.ids]),this.create(l,s,i),this.selectionPointBehavior.create(l,a.type,s)}create(t,e,i){if(!this.store.has(e))throw new Error("Store does not have feature with this id");this._midPoints=this.store.create((function(o,s,n,a,l,d){return Oe({featureCoords:o,precision:n,project:a,unproject:l,projection:d}).map((c,h)=>({geometry:{type:"Point",coordinates:c},properties:s(h)}))})(t,o=>({mode:this.mode,[k.MID_POINT]:!0,midPointSegment:o,midPointFeatureId:e}),i,this.config.project,this.config.unproject,this.projection))}delete(){this._midPoints.length&&(this.store.delete(this._midPoints),this._midPoints=[])}getUpdated(t){if(this._midPoints.length!==0)return Oe({featureCoords:t,precision:this.coordinatePrecision,project:this.config.project,unproject:this.config.unproject,projection:this.config.projection}).map((e,i)=>({id:this._midPoints[i],geometry:{type:"Point",coordinates:e}}))}}class Ni extends W{constructor(t){super(t),this._selectionPoints=[]}get ids(){return this._selectionPoints.concat()}set ids(t){}create(t,e,i){this._selectionPoints=this.store.create((function(o,s,n){const a=[],l=s==="Polygon"?o.length-1:o.length;for(let d=0;d<l;d++)a.push({geometry:{type:"Point",coordinates:o[d]},properties:n(d)});return a})(t,e,o=>({mode:this.mode,index:o,[k.SELECTION_POINT]:!0,[k.SELECTION_POINT_FEATURE_ID]:i})))}delete(){this.ids.length&&(this.store.delete(this.ids),this._selectionPoints=[])}getUpdated(t){if(this._selectionPoints.length!==0)return this._selectionPoints.map((e,i)=>({id:e,geometry:{type:"Point",coordinates:t[i]}}))}getOneUpdated(t,e){if(this._selectionPoints[t]!==void 0)return{id:this._selectionPoints[t],geometry:{type:"Point",coordinates:e}}}}function xe(r,t){let e=!1;for(let n=0,a=t.length;n<a;n++){const l=t[n];for(let d=0,c=l.length,h=c-1;d<c;h=d++)(o=l[d])[1]>(i=r)[1]!=(s=l[h])[1]>i[1]&&i[0]<(s[0]-o[0])*(i[1]-o[1])/(s[1]-o[1])+o[0]&&(e=!e)}var i,o,s;return e}const Rt=(r,t,e)=>{const i=s=>s*s,o=(s,n)=>i(s.x-n.x)+i(s.y-n.y);return Math.sqrt(((s,n,a)=>{const l=o(n,a);if(l===0)return o(s,n);let d=((s.x-n.x)*(a.x-n.x)+(s.y-n.y)*(a.y-n.y))/l;return d=Math.max(0,Math.min(1,d)),o(s,{x:n.x+d*(a.x-n.x),y:n.y+d*(a.y-n.y)})})(r,t,e))};class Ti extends W{constructor(t,e,i){super(t),this.config=void 0,this.createClickBoundingBox=void 0,this.pixelDistance=void 0,this.config=t,this.createClickBoundingBox=e,this.pixelDistance=i}find(t,e){let i,o,s,n,a=1/0,l=1/0,d=1/0;const c=this.createClickBoundingBox.create(t),h=this.store.search(c);for(let u=0;u<h.length;u++){const p=h[u],g=p.geometry;if(g.type==="Point"){if(p.properties.selectionPoint||p.properties.coordinatePoint||!e&&p.properties[k.MID_POINT])continue;const y=this.pixelDistance.measure(t,g.coordinates);p.properties[k.MID_POINT]&&y<this.pointerDistance&&y<d?(d=y,s=p):!p.properties[k.MID_POINT]&&y<this.pointerDistance&&y<a&&(a=y,i=p)}else if(g.type==="LineString"){if(i)continue;for(let y=0;y<g.coordinates.length-1;y++){const m=g.coordinates[y],v=g.coordinates[y+1],C=Rt({x:t.containerX,y:t.containerY},this.project(m[0],m[1]),this.project(v[0],v[1]));C<this.pointerDistance&&C<l&&(l=C,o=p)}}else if(g.type==="Polygon"){if(i||o)continue;xe([t.lng,t.lat],g.coordinates)&&(n=p)}}return{clickedFeature:i||o||n,clickedMidPoint:s}}}class Wi extends W{constructor(t,e,i,o,s){super(t),this.config=void 0,this.featuresAtCursorEvent=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.draggedFeatureId=null,this.dragPosition=void 0,this.config=t,this.featuresAtCursorEvent=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}startDragging(t,e){this.draggedFeatureId=e,this.dragPosition=[t.lng,t.lat]}stopDragging(){this.draggedFeatureId=null,this.dragPosition=void 0}isDragging(){return this.draggedFeatureId!==null}canDrag(t,e){const{clickedFeature:i}=this.featuresAtCursorEvent.find(t,!0);return!(!i||i.id!==e)}drag(t,e){if(!this.draggedFeatureId)return;const i=this.store.getGeometryCopy(this.draggedFeatureId),o=[t.lng,t.lat];if(i.type==="Polygon"||i.type==="LineString"){let s,n;if(i.type==="Polygon"?(s=i.coordinates[0],n=s.length-1):(s=i.coordinates,n=s.length),!this.dragPosition)return!1;for(let c=0;c<n;c++){const h=s[c];let u,p;if(this.config.projection==="web-mercator"){const g=x(this.dragPosition[0],this.dragPosition[1]),y=x(o[0],o[1]),m=x(h[0],h[1]),v={x:g.x-y.x,y:g.y-y.y},C=m.x-v.x,f=m.y-v.y,{lng:P,lat:I}=U(C,f);u=P,p=I}else{const g=[this.dragPosition[0]-o[0],this.dragPosition[1]-o[1]];u=h[0]-g[0],p=h[1]-g[1]}if(u=L(u,this.config.coordinatePrecision),p=L(p,this.config.coordinatePrecision),u>180||u<-180||p>90||p<-90)return!1;s[c]=[u,p]}i.type==="Polygon"&&(s[s.length-1]=[s[0][0],s[0][1]]);const a=this.selectionPoints.getUpdated(s)||[],l=this.midPoints.getUpdated(s)||[],d=this.coordinatePoints.getUpdated(this.draggedFeatureId,s)||[];if(e&&!e({type:"Feature",id:this.draggedFeatureId,geometry:i,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:b.Provisional}).valid)return!1;this.store.updateGeometry([{id:this.draggedFeatureId,geometry:i},...a,...l,...d]),this.dragPosition=[t.lng,t.lat]}else i.type==="Point"&&(this.store.updateGeometry([{id:this.draggedFeatureId,geometry:{type:"Point",coordinates:o}}]),this.dragPosition=[t.lng,t.lat])}}class Bi extends W{constructor(t,e,i,o,s,n,a){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.coordinateSnapping=void 0,this.lineSnapping=void 0,this.draggedCoordinate={id:null,index:-1},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s,this.coordinateSnapping=n,this.lineSnapping=a}getClosestCoordinate(t,e){const i={dist:1/0,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(e.type==="LineString")o=e.coordinates;else{if(e.type!=="Polygon")return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const a=e.type==="Polygon"&&(s===o.length-1||s===0);i.dist=n,i.index=a?0:s,i.isFirstOrLastPolygonCoord=a}}return i}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return o.index===-1?-1:o.index}snapCoordinate(t,e,i){let o=[t.lng,t.lat];const s=n=>!!(n.properties&&n.properties.mode===i.properties.mode&&n.id!==this.draggedCoordinate.id);if(e!=null&&e.toLine){let n;n=this.lineSnapping.getSnappable(t,s).coordinate,n&&(o=n)}if(e.toCoordinate){let n;n=this.coordinateSnapping.getSnappable(t,s).coordinate,n&&(o=n)}if(e!=null&&e.toCustom){let n;n=e.toCustom(t,{currentCoordinate:this.draggedCoordinate.index,currentId:i.id,getCurrentGeometrySnapshot:i.id?()=>this.store.getGeometryCopy(i.id):()=>null,project:this.project,unproject:this.unproject}),n&&(o=n)}return o}drag(t,e,i,o){const s=this.draggedCoordinate.id;if(s===null)return!1;const n=this.draggedCoordinate.index,a=this.store.getGeometryCopy(s),l=this.store.getPropertiesCopy(s),d=a.type==="LineString"?a.coordinates:a.coordinates[0],c=a.type==="Polygon"&&(n===d.length-1||n===0),h={type:"Feature",id:s,geometry:a,properties:l},u=this.snapCoordinate(t,o,h);if(t.lng>180||t.lng<-180||t.lat>90||t.lat<-90)return!1;if(c){const v=d.length-1;d[0]=u,d[v]=u}else d[n]=u;const p=this.selectionPoints.getOneUpdated(n,u),g=p?[p]:[],y=this.midPoints.getUpdated(d)||[],m=this.coordinatePoints.getUpdated(s,d)||[];return!(a.type!=="Point"&&!e&&_t({geometry:a})||i&&!i(h,{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:b.Provisional}).valid||(this.store.updateGeometry([{id:s,geometry:a},...g,...y,...m]),0))}isDragging(){return this.draggedCoordinate.id!==null}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}}function be(r){let t=0,e=0,i=0;return(r.geometry.type==="Polygon"?r.geometry.coordinates[0].slice(0,-1):r.geometry.coordinates).forEach(o=>{t+=o[0],e+=o[1],i++},!0),[t/i,e/i]}const Ee=(r,t)=>{if(t===0||t===360||t===-360)return r;const e=.017453292519943295*t,i=(r.geometry.type==="Polygon"?r.geometry.coordinates[0]:r.geometry.coordinates).map(([n,a])=>x(n,a)),o=i.reduce((n,a)=>({x:n.x+a.x,y:n.y+a.y}),{x:0,y:0});o.x/=i.length,o.y/=i.length;const s=i.map(n=>({x:o.x+(n.x-o.x)*Math.cos(e)-(n.y-o.y)*Math.sin(e),y:o.y+(n.x-o.x)*Math.sin(e)+(n.y-o.y)*Math.cos(e)})).map(({x:n,y:a})=>[U(n,a).lng,U(n,a).lat]);return r.geometry.type==="Polygon"?r.geometry.coordinates[0]=s:r.geometry.coordinates=s,r};function Ut(r){const t=(r.geometry.type==="Polygon"?r.geometry.coordinates[0]:r.geometry.coordinates).map(e=>{const{x:i,y:o}=x(e[0],e[1]);return[i,o]});return r.geometry.type==="Polygon"?(function(e){let i=0,o=0,s=0;const n=e.length;for(let a=0;a<n-1;a++){const[l,d]=e[a],[c,h]=e[a+1],u=l*h-c*d;i+=u,o+=(l+c)*u,s+=(d+h)*u}return i/=2,o/=6*i,s/=6*i,{x:o,y:s}})(t):(function(e){const i=e.length;let o=0,s=0;for(let n=0;n<i;n++){const[a,l]=e[n];o+=a,s+=l}return{x:o/i,y:s/i}})(t)}class ji extends W{constructor(t,e,i,o){super(t),this.config=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.lastBearing=void 0,this.selectedGeometry=void 0,this.selectedGeometryCentroid=void 0,this.selectedGeometryWebMercatorCentroid=void 0,this.config=t,this.selectionPoints=e,this.midPoints=i,this.coordinatePoints=o}reset(){this.lastBearing=void 0,this.selectedGeometry=void 0,this.selectedGeometryWebMercatorCentroid=void 0,this.selectedGeometryCentroid=void 0}rotate(t,e,i){this.selectedGeometry||(this.selectedGeometry=this.store.getGeometryCopy(e));const o=this.selectedGeometry;if(o.type!=="Polygon"&&o.type!=="LineString")return;const s=[t.lng,t.lat];let n;const a={type:"Feature",geometry:o,properties:{}};if(this.config.projection==="web-mercator"){this.selectedGeometryWebMercatorCentroid||(this.selectedGeometryWebMercatorCentroid=Ut(a));const u=x(t.lng,t.lat);if(n=V(this.selectedGeometryWebMercatorCentroid,u),n===0)return;if(!this.lastBearing)return void(this.lastBearing=n);Ee(a,-(this.lastBearing-n))}else{if(this.config.projection!=="globe")throw new Error("Unsupported projection");if(this.selectedGeometryCentroid||(this.selectedGeometryCentroid=be({geometry:o})),n=At(this.selectedGeometryCentroid,s),!this.lastBearing)return void(this.lastBearing=n+180);(function(u,p){if(p===0||p===360||p===-360)return u;const g=be(u);(u.geometry.type==="Polygon"?u.geometry.coordinates[0]:u.geometry.coordinates).forEach(y=>{const m=At(g,y)+p,v=(function(f,P){f[0]+=f[0]-P[0]>180?-360:P[0]-f[0]>180?360:0;const I=se,w=P[1]*Math.PI/180,M=f[1]*Math.PI/180,D=M-w;let T=Math.abs(f[0]-P[0])*Math.PI/180;T>Math.PI&&(T-=2*Math.PI);const N=Math.log(Math.tan(M/2+Math.PI/4)/Math.tan(w/2+Math.PI/4)),j=Math.abs(N)>1e-11?D/N:Math.cos(w);return Math.sqrt(D*D+j*j*T*T)*I})(g,y),C=Se(g,v,m);y[0]=C[0],y[1]=C[1]})})(a,-(this.lastBearing-(n+180)))}const l=o.type==="Polygon"?o.coordinates[0]:o.coordinates;l.forEach(u=>{u[0]=L(u[0],this.coordinatePrecision),u[1]=L(u[1],this.coordinatePrecision)});const d=this.midPoints.getUpdated(l)||[],c=this.selectionPoints.getUpdated(l)||[],h=this.coordinatePoints.getUpdated(e,l)||[];if(i&&!i({id:e,type:"Feature",geometry:o,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:b.Provisional}))return!1;this.store.updateGeometry([{id:e,geometry:o},...c,...d,...h]),this.projection==="web-mercator"?this.lastBearing=n:this.projection==="globe"&&(this.lastBearing=n+180)}}class Ai extends W{constructor(t,e){super(t),this.config=void 0,this.dragCoordinateResizeBehavior=void 0,this.config=t,this.dragCoordinateResizeBehavior=e}scale(t,e,i){if(!this.dragCoordinateResizeBehavior.isDragging()){const o=this.dragCoordinateResizeBehavior.getDraggableIndex(t,e);this.dragCoordinateResizeBehavior.startDragging(e,o)}this.dragCoordinateResizeBehavior.drag(t,"center-fixed",i)}reset(){this.dragCoordinateResizeBehavior.stopDragging()}}function we({coordinates:r,originX:t,originY:e,xScale:i,yScale:o}){i===1&&o===1||r.forEach(s=>{const{x:n,y:a}=x(s[0],s[1]),l=t+(n-t)*i,d=e+(a-e)*o,{lng:c,lat:h}=U(l,d);s[0]=c,s[1]=h})}class Ri extends W{constructor(t,e,i,o,s){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.minimumScale=1e-4,this.draggedCoordinate={id:null,index:-1},this.boundingBoxMaps={opposite:{0:4,1:5,2:6,3:7,4:0,5:1,6:2,7:3}},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}getClosestCoordinate(t,e){const i={dist:1/0,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(e.type==="LineString")o=e.coordinates;else{if(e.type!=="Polygon")return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const a=e.type==="Polygon"&&(s===o.length-1||s===0);i.dist=n,i.index=a?0:s,i.isFirstOrLastPolygonCoord=a}}return i}isValidDragWebMercator(t,e,i){switch(t){case 0:if(e<=0||i>=0)return!1;break;case 1:if(i>=0)return!1;break;case 2:if(e>=0||i>=0)return!1;break;case 3:if(e>=0)return!1;break;case 4:if(e>=0||i<=0)return!1;break;case 5:if(i<=0)return!1;break;case 6:if(e<=0||i<=0)return!1;break;case 7:if(e<=0)return!1}return!0}getSelectedFeatureDataWebMercator(){if(!this.draggedCoordinate.id||this.draggedCoordinate.index===-1)return null;const t=this.getFeature(this.draggedCoordinate.id);if(!t)return null;const e=this.getNormalisedCoordinates(t.geometry);return{boundingBox:this.getBBoxWebMercator(e),feature:t,updatedCoords:e,selectedCoordinate:e[this.draggedCoordinate.index]}}centerWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,a=Ut(i);if(!a)return null;const l=x(n[0],n[1]),{closestBBoxIndex:d}=this.getIndexesWebMercator(o,l),c=x(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:d,updatedCoords:s,webMercatorCursor:c,webMercatorSelected:l,webMercatorOrigin:a}),s}centerFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,a=Ut(i);if(!a)return null;const l=x(n[0],n[1]),{closestBBoxIndex:d}=this.getIndexesWebMercator(o,l),c=x(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:d,updatedCoords:s,webMercatorCursor:c,webMercatorSelected:l,webMercatorOrigin:a}),s}scaleFixedWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){if(!this.isValidDragWebMercator(t,e.x-o.x,e.y-o.y))return null;let n=F(e,o)/F(e,i);return n<0&&(n=this.minimumScale),we({coordinates:s,originX:e.x,originY:e.y,xScale:n,yScale:n}),s}oppositeFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=x(s[0],s[1]),{oppositeBboxIndex:a,closestBBoxIndex:l}=this.getIndexesWebMercator(i,n),d={x:i[a][0],y:i[a][1]},c=x(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:l,updatedCoords:o,webMercatorCursor:c,webMercatorSelected:n,webMercatorOrigin:d}),o}oppositeWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=x(s[0],s[1]),{oppositeBboxIndex:a,closestBBoxIndex:l}=this.getIndexesWebMercator(i,n),d={x:i[a][0],y:i[a][1]},c=x(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:l,updatedCoords:o,webMercatorCursor:c,webMercatorSelected:n,webMercatorOrigin:d}),o}scaleWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){const n=e.x-o.x,a=e.y-o.y;if(!this.isValidDragWebMercator(t,n,a))return null;let l=1;n!==0&&t!==1&&t!==5&&(l=1-(e.x-i.x-n)/n);let d=1;return a!==0&&t!==3&&t!==7&&(d=1-(e.y-i.y-a)/a),this.validateScale(l,d)?(l<0&&(l=this.minimumScale),d<0&&(d=this.minimumScale),this.performWebMercatorScale(s,e.x,e.y,l,d),s):null}getFeature(t){if(this.draggedCoordinate.id===null)return null;const e=this.store.getGeometryCopy(t);return e.type!=="Polygon"&&e.type!=="LineString"?null:{id:t,type:"Feature",geometry:e,properties:{}}}getNormalisedCoordinates(t){return t.type==="Polygon"?t.coordinates[0]:t.coordinates}validateScale(t,e){const i=!isNaN(t)&&e<Number.MAX_SAFE_INTEGER,o=!isNaN(e)&&e<Number.MAX_SAFE_INTEGER;return i&&o}performWebMercatorScale(t,e,i,o,s){t.forEach(n=>{const{x:a,y:l}=x(n[0],n[1]),d=e+(a-e)*o,c=i+(l-i)*s,{lng:h,lat:u}=U(d,c);n[0]=h,n[1]=u})}getBBoxWebMercator(t){const e=[1/0,1/0,-1/0,-1/0];(t=t.map(a=>{const{x:l,y:d}=x(a[0],a[1]);return[l,d]})).forEach(([a,l])=>{a<e[0]&&(e[0]=a),l<e[1]&&(e[1]=l),a>e[2]&&(e[2]=a),l>e[3]&&(e[3]=l)});const[i,o,s,n]=e;return[[i,n],[(i+s)/2,n],[s,n],[s,n+(o-n)/2],[s,o],[(i+s)/2,o],[i,o],[i,n+(o-n)/2]]}getIndexesWebMercator(t,e){let i,o=1/0;for(let s=0;s<t.length;s++){const n=F({x:e.x,y:e.y},{x:t[s][0],y:t[s][1]});n<o&&(i=s,o=n)}if(i===void 0)throw new Error("No closest coordinate found");return{oppositeBboxIndex:this.boundingBoxMaps.opposite[i],closestBBoxIndex:i}}isDragging(){return this.draggedCoordinate.id!==null}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return o.index===-1?-1:o.index}drag(t,e,i){if(!this.draggedCoordinate.id)return!1;const o=this.getFeature(this.draggedCoordinate.id);if(!o)return!1;let s=null;if(e==="center"?s=this.centerWebMercatorDrag(t):e==="opposite"?s=this.oppositeWebMercatorDrag(t):e==="center-fixed"?s=this.centerFixedWebMercatorDrag(t):e==="opposite-fixed"&&(s=this.oppositeFixedWebMercatorDrag(t)),!s)return!1;for(let c=0;c<s.length;c++){const h=s[c];if(h[0]=L(h[0],this.coordinatePrecision),h[1]=L(h[1],this.coordinatePrecision),!vt(h,this.coordinatePrecision))return!1}const n=this.midPoints.getUpdated(s)||[],a=this.selectionPoints.getUpdated(s)||[],l=this.coordinatePoints.getUpdated(o.id,s)||[],d={type:o.geometry.type,coordinates:o.geometry.type==="Polygon"?[s]:s};return!(i&&!i({id:this.draggedCoordinate.id,type:"Feature",geometry:d,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:b.Provisional}).valid||(this.store.updateGeometry([{id:this.draggedCoordinate.id,geometry:d},...a,...n,...l]),0))}}const Ui={deselect:"Escape",delete:"Delete",rotate:["Control","r"],scale:["Control","s"]},Le={pointerOver:"move",dragStart:"move",dragEnd:"move",insertMidpoint:"crosshair"};class Gt extends ai{constructor(t){super(t,!0),this.mode="select",this.allowManualDeselection=!0,this.dragEventThrottle=5,this.dragEventCount=0,this.selected=[],this.flags={},this.keyEvents=Ui,this.cursors=Le,this.validations={},this.selectionPoints=void 0,this.midPoints=void 0,this.coordinateSnap=void 0,this.featuresAtMouseEvent=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.dragFeature=void 0,this.dragCoordinate=void 0,this.rotateFeature=void 0,this.scaleFeature=void 0,this.dragCoordinateResizeFeature=void 0,this.coordinatePoints=void 0,this.lineSnap=void 0,this.updateOptions(t)}updateOptions(t){if(super.updateOptions(t),this.cursors=t&&t.cursors?O({},this.cursors,t.cursors):Le,t?.keyEvents===null?this.keyEvents={deselect:null,delete:null,rotate:null,scale:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t?.dragEventThrottle!==void 0&&(this.dragEventThrottle=t.dragEventThrottle),t?.allowManualDeselection!==void 0&&(this.allowManualDeselection=t.allowManualDeselection),t!=null&&t.flags){this.flags=O({},this.flags,t.flags),this.validations={};for(const e in this.flags){const i=this.flags[e].feature;i&&i.validation&&(this.validations[e]=i.validation)}}}selectFeature(t){this.select(t,!1)}setSelecting(){if(this._state!=="started")throw new Error("Mode must be started to move to selecting state");this._state="selecting"}registerBehaviors(t){this.pixelDistance=new lt(t),this.clickBoundingBox=new at(t),this.featuresAtMouseEvent=new Ti(t,this.clickBoundingBox,this.pixelDistance),this.selectionPoints=new Ni(t),this.coordinatePoints=new ve(t),this.midPoints=new ki(t,this.selectionPoints,this.coordinatePoints),this.coordinateSnap=new Pt(t,this.pixelDistance,this.clickBoundingBox),this.lineSnap=new Wt(t,this.pixelDistance,this.clickBoundingBox),this.rotateFeature=new ji(t,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragFeature=new Wi(t,this.featuresAtMouseEvent,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragCoordinate=new Bi(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints,this.coordinateSnap,this.lineSnap),this.dragCoordinateResizeFeature=new Ri(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints),this.scaleFeature=new Ai(t,this.dragCoordinateResizeFeature)}deselectFeature(){this.deselect()}deselect(){const t=this.selected.filter(e=>this.store.has(e)).map(e=>({id:e,property:k.SELECTED,value:!1}));this.store.updateProperty(t),this.onDeselect(this.selected[0]),this.selected=[],this.selectionPoints.delete(),this.midPoints.delete()}deleteSelected(){this.store.delete(this.selected),this.selected=[]}onRightClick(t){if(!this.selectionPoints.ids.length)return;let e,i=1/0;if(this.selectionPoints.ids.forEach(u=>{const p=this.store.getGeometryCopy(u),g=this.pixelDistance.measure(t,p.coordinates);g<this.pointerDistance&&g<i&&(i=g,e=this.store.getPropertiesCopy(u))}),!e)return;const o=e.selectionPointFeatureId,s=e.index,n=this.store.getPropertiesCopy(o),a=this.flags[n.mode],l=this.validations[n.mode];if(!(a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.deletable))return;const d=this.store.getGeometryCopy(o);let c;if(d.type==="Polygon"){if(c=d.coordinates[0],c.length<=4)return}else if(d.type==="LineString"&&(c=d.coordinates,c.length<=2))return;if(!c||(d.type!=="Polygon"||s!==0&&s!==c.length-1?c.splice(s,1):(c.shift(),c.pop(),c.push([c[0][0],c[0][1]])),l&&!l({id:o,type:"Feature",geometry:d,properties:n},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Commit}).valid))return;const h=[...this.midPoints.ids,...this.selectionPoints.ids];this.store.delete(h),this.store.updateGeometry([{id:o,geometry:d}]),n.coordinatePointIds&&this.coordinatePoints.createOrUpdate(o),this.selectionPoints.create(c,d.type,o),a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.midpoints&&this.midPoints.create(c,o,this.coordinatePrecision)}select(t,e=!0){if(this.selected[0]===t)return;const{mode:i}=this.store.getPropertiesCopy(t),o=this.flags[i];if(!o||!o.feature)return;const s=this.selected[0];if(s){if(s===t)return;this.deselect()}e&&this.setCursor(this.cursors.pointerOver),this.selected=[t],this.store.updateProperty([{id:t,property:k.SELECTED,value:!0}]),this.onSelect(t);const{type:n,coordinates:a}=this.store.getGeometryCopy(t);if(n!=="LineString"&&n!=="Polygon")return;const l=n==="LineString"?a:a[0];l&&o&&o.feature.coordinates&&(this.selectionPoints.create(l,n,t),o.feature.coordinates.midpoints&&this.midPoints.create(l,t,this.coordinatePrecision))}onLeftClick(t){const{clickedFeature:e,clickedMidPoint:i}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&i)this.midPoints.insert(this.selected[0],i.id,this.coordinatePrecision);else if(e&&e.id)this.select(e.id,!0);else if(this.selected.length&&this.allowManualDeselection)return void this.deselect()}start(){this.setStarted(),this.setSelecting()}stop(){this.cleanUp(),this.setStarted(),this.setStopped()}onClick(t){t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}canScale(t){return this.keyEvents.scale&&this.keyEvents.scale.every(e=>t.heldKeys.includes(e))}canRotate(t){return this.keyEvents.rotate&&this.keyEvents.rotate.every(e=>t.heldKeys.includes(e))}preventDefaultKeyEvent(t){const e=this.canRotate(t),i=this.canScale(t);(e||i)&&t.preventDefault()}onKeyDown(t){this.preventDefaultKeyEvent(t)}onKeyUp(t){if(this.preventDefaultKeyEvent(t),this.keyEvents.delete&&t.key===this.keyEvents.delete){if(!this.selected.length)return;const e=this.selected[0];this.onDeselect(this.selected[0]),this.coordinatePoints.deletePointsByFeatureIds([e]),this.deleteSelected(),this.selectionPoints.delete(),this.midPoints.delete()}else this.keyEvents.deselect&&t.key===this.keyEvents.deselect&&this.cleanUp()}cleanUp(){this.selected.length&&this.deselect()}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t)||!this.selected.length)return;const i=this.store.getPropertiesCopy(this.selected[0]),o=this.flags[i.mode];if(!(o&&o.feature&&(o.feature.draggable||o.feature.coordinates&&o.feature.coordinates.draggable||o.feature.coordinates&&o.feature.coordinates.resizable||o.feature.coordinates&&typeof o.feature.coordinates.midpoints=="object"&&o.feature.coordinates.midpoints.draggable)))return;this.dragEventCount=0;const s=this.selected[0],n=this.dragCoordinate.getDraggableIndex(t,s);if(o&&o.feature&&o.feature.coordinates&&(o.feature.coordinates.draggable||o.feature.coordinates.resizable)&&n!==-1)return this.setCursor(this.cursors.dragStart),o.feature.coordinates.resizable?this.dragCoordinateResizeFeature.startDragging(s,n):this.dragCoordinate.startDragging(s,n),void e(!1);if(o&&o.feature&&o.feature.coordinates&&typeof o.feature.coordinates.midpoints=="object"&&o.feature.coordinates.midpoints.draggable){const{clickedMidPoint:a}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&a){this.midPoints.insert(s,a.id,this.coordinatePrecision);const l=this.dragCoordinate.getDraggableIndex(t,s);return this.dragCoordinate.startDragging(s,l),void e(!1)}}return o&&o.feature&&o.feature.draggable&&this.dragFeature.canDrag(t,s)?(this.setCursor(this.cursors.dragStart),this.dragFeature.startDragging(t,s),void e(!1)):void 0}onDrag(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t))return;const i=this.selected[0];if(!i)return;const o=this.store.getPropertiesCopy(i),s=this.flags[o.mode],n=(s&&s.feature&&s.feature.selfIntersectable)===!0;if(this.dragEventCount++,this.dragEventCount%this.dragEventThrottle==0)return;const a=this.validations[o.mode];if(s&&s.feature&&s.feature.rotateable&&this.canRotate(t))return e(!1),void this.rotateFeature.rotate(t,i,a);if(s&&s.feature&&s.feature.scaleable&&this.canScale(t))return e(!1),void this.scaleFeature.scale(t,i,a);if(this.dragCoordinateResizeFeature.isDragging()&&s.feature&&s.feature.coordinates&&s.feature.coordinates.resizable){if(this.projection==="globe")throw new Error("Globe is currently unsupported projection for resizable");return e(!1),void this.dragCoordinateResizeFeature.drag(t,s.feature.coordinates.resizable,a)}if(this.dragCoordinate.isDragging()){var l;const d=(l=s.feature)==null||(l=l.coordinates)==null?void 0:l.snappable;let c={toCoordinate:!1};return d===!0?c={toCoordinate:!0}:typeof d=="object"&&(c=d),void this.dragCoordinate.drag(t,n,a,c)}this.dragFeature.isDragging()?this.dragFeature.drag(t,a):e(!0)}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&(this.setCursor(this.cursors.dragEnd),this.dragCoordinate.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:"dragCoordinate"}):this.dragFeature.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:"dragFeature"}):this.dragCoordinateResizeFeature.isDragging()&&this.onFinish(this.selected[0],{mode:this.mode,action:"dragCoordinateResize"}),this.dragCoordinate.stopDragging(),this.dragFeature.stopDragging(),this.dragCoordinateResizeFeature.stopDragging(),this.rotateFeature.reset(),this.scaleFeature.reset(),e(!0))}onMouseMove(t){if(!this.selected.length)return void this.setCursor("unset");if(this.dragFeature.isDragging())return;let e=!1;this.midPoints.ids.forEach(s=>{if(e)return;const n=this.store.getGeometryCopy(s);this.pixelDistance.measure(t,n.coordinates)<this.pointerDistance&&(e=!0)});let i=!1;if(this.selectionPoints.ids.forEach(s=>{const n=this.store.getGeometryCopy(s);this.pixelDistance.measure(t,n.coordinates)<this.pointerDistance&&(e=!1,i=!0)}),e)return void this.setCursor(this.cursors.insertMidpoint);const{clickedFeature:o}=this.featuresAtMouseEvent.find(t,!0);this.setCursor(this.selected.length>0&&(o&&o.id===this.selected[0]||i)?this.cursors.pointerOver:"unset")}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.properties.mode===this.mode&&t.geometry.type==="Point"){if(t.properties.selectionPoint)return e.pointColor=this.getHexColorStylingValue(this.styles.selectionPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectionPointOutlineColor,e.pointOutlineColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.selectionPointWidth,e.pointWidth,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectionPointOutlineWidth,2,t),e.zIndex=30,e;if(t.properties.midPoint)return e.pointColor=this.getHexColorStylingValue(this.styles.midPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.midPointOutlineColor,e.pointOutlineColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.midPointWidth,4,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.midPointOutlineWidth,2,t),e.zIndex=50,e}else if(t.properties[k.SELECTED]){if(t.geometry.type==="Polygon")return e.polygonFillColor=this.getHexColorStylingValue(this.styles.selectedPolygonColor,e.polygonFillColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.selectedPolygonOutlineWidth,e.polygonOutlineWidth,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.selectedPolygonOutlineColor,e.polygonOutlineColor,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.selectedPolygonFillOpacity,e.polygonFillOpacity,t),e.zIndex=A,e;if(t.geometry.type==="LineString")return e.lineStringColor=this.getHexColorStylingValue(this.styles.selectedLineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.selectedLineStringWidth,e.lineStringWidth,t),e.zIndex=A,e;if(t.geometry.type==="Point")return e.pointWidth=this.getNumericStylingValue(this.styles.selectedPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.selectedPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectedPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectedPointOutlineWidth,e.pointOutlineWidth,t),e.zIndex=A,e}return e}afterFeatureUpdated(t){if(this.selected.length&&t.id===this.selected[0]){var e,i;const o=this.flags[t.properties.mode];if(o==null||(e=o.feature)==null||!e.coordinates)return;const s=t.geometry.type,n=t.id;let a;if(this.selectionPoints.delete(),this.midPoints.delete(),s==="Polygon")a=t.geometry.coordinates[0];else{if(s!=="LineString")return;a=t.geometry.coordinates}this.selectionPoints.create(a,s,n),o!=null&&(i=o.feature)!=null&&(i=i.coordinates)!=null&&i.midpoints&&this.midPoints.create(s==="Polygon"?t.geometry.coordinates[0]:t.geometry.coordinates,n,this.coordinatePrecision)}}}class Gi extends R{constructor(...t){super(...t),this.type=Y.Static,this.mode="static"}start(){}stop(){}onKeyUp(){}onKeyDown(){}onClick(){}onDragStart(){}onDrag(){}onDragEnd(){}onMouseMove(){}cleanUp(){}styleFeature(){return O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0})}}function Me(r,t,e,i,o){for(;i>e;){if(i-e>600){const l=i-e+1,d=t-e+1,c=Math.log(l),h=.5*Math.exp(2*c/3),u=.5*Math.sqrt(c*h*(l-h)/l)*(d-l/2<0?-1:1);Me(r,t,Math.max(e,Math.floor(t-d*h/l+u)),Math.min(i,Math.floor(t+(l-d)*h/l+u)),o)}const s=r[t];let n=e,a=i;for(ct(r,e,t),o(r[i],s)>0&&ct(r,e,i);n<a;){for(ct(r,n,a),n++,a--;o(r[n],s)<0;)n++;for(;o(r[a],s)>0;)a--}o(r[e],s)===0?ct(r,e,a):(a++,ct(r,a,i)),a<=t&&(e=a+1),t<=a&&(i=a-1)}}function ct(r,t,e){const i=r[t];r[t]=r[e],r[e]=i}function tt(r,t){ht(r,0,r.children.length,t,r)}function ht(r,t,e,i,o){o||(o=et([])),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(let s=t;s<e;s++){const n=r.children[s];ut(o,r.leaf?i(n):n)}return o}function ut(r,t){return r.minX=Math.min(r.minX,t.minX),r.minY=Math.min(r.minY,t.minY),r.maxX=Math.max(r.maxX,t.maxX),r.maxY=Math.max(r.maxY,t.maxY),r}function Vi(r,t){return r.minX-t.minX}function zi(r,t){return r.minY-t.minY}function Vt(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function It(r){return r.maxX-r.minX+(r.maxY-r.minY)}function $i(r,t){const e=Math.max(r.minX,t.minX),i=Math.max(r.minY,t.minY),o=Math.min(r.maxX,t.maxX),s=Math.min(r.maxY,t.maxY);return Math.max(0,o-e)*Math.max(0,s-i)}function zt(r,t){return r.minX<=t.minX&&r.minY<=t.minY&&t.maxX<=r.maxX&&t.maxY<=r.maxY}function Ot(r,t){return t.minX<=r.maxX&&t.minY<=r.maxY&&t.maxX>=r.minX&&t.maxY>=r.minY}function et(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function Fe(r,t,e,i,o){const s=[t,e];for(;s.length;){if((e=s.pop())-(t=s.pop())<=i)continue;const n=t+Math.ceil((e-t)/i/2)*i;Me(r,n,t,e,o),s.push(t,n,n,e)}}class Yi{constructor(t){this._maxEntries=void 0,this._minEntries=void 0,this.data=void 0,this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}search(t){let e=this.data;const i=[];if(!Ot(t,e))return i;const o=this.toBBox,s=[];for(;e;){for(let n=0;n<e.children.length;n++){const a=e.children[n],l=e.leaf?o(a):a;Ot(t,l)&&(e.leaf?i.push(a):zt(t,l)?this._all(a,i):s.push(a))}e=s.pop()}return i}collides(t){let e=this.data;if(Ot(t,e)){const i=[];for(;e;){for(let o=0;o<e.children.length;o++){const s=e.children[o],n=e.leaf?this.toBBox(s):s;if(Ot(t,n)){if(e.leaf||zt(t,n))return!0;i.push(s)}}e=i.pop()}}return!1}load(t){if(t.length<this._minEntries){for(let i=0;i<t.length;i++)this.insert(t[i]);return}let e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){const i=this.data;this.data=e,e=i}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e}insert(t){this._insert(t,this.data.height-1)}clear(){this.data=et([])}remove(t){let e=this.data;const i=this.toBBox(t),o=[],s=[];let n,a,l=!1;for(;e||o.length;){if(e||(e=o.pop(),a=o[o.length-1],n=s.pop(),l=!0),e.leaf){const d=e.children.indexOf(t);d!==-1&&(e.children.splice(d,1),o.push(e),this._condense(o))}l||e.leaf||!zt(e,i)?a?(n++,e=a.children[n],l=!1):e=null:(o.push(e),s.push(n),n=0,a=e,e=e.children[0])}}toBBox(t){return t}compareMinX(t,e){return t.minX-e.minX}compareMinY(t,e){return t.minY-e.minY}_all(t,e){const i=[];for(;t;)t.leaf?e.push(...t.children):i.push(...t.children),t=i.pop();return e}_build(t,e,i,o){const s=i-e+1;let n,a=this._maxEntries;if(s<=a)return n=et(t.slice(e,i+1)),tt(n,this.toBBox),n;o||(o=Math.ceil(Math.log(s)/Math.log(a)),a=Math.ceil(s/Math.pow(a,o-1))),n=et([]),n.leaf=!1,n.height=o;const l=Math.ceil(s/a),d=l*Math.ceil(Math.sqrt(a));Fe(t,e,i,d,this.compareMinX);for(let c=e;c<=i;c+=d){const h=Math.min(c+d-1,i);Fe(t,c,h,l,this.compareMinY);for(let u=c;u<=h;u+=l){const p=Math.min(u+l-1,h);n.children.push(this._build(t,u,p,o-1))}}return tt(n,this.toBBox),n}_chooseSubtree(t,e,i,o){for(;o.push(e),!e.leaf&&o.length-1!==i;){let a,l=1/0,d=1/0;for(let c=0;c<e.children.length;c++){const h=e.children[c],u=Vt(h),p=(s=t,n=h,(Math.max(n.maxX,s.maxX)-Math.min(n.minX,s.minX))*(Math.max(n.maxY,s.maxY)-Math.min(n.minY,s.minY))-u);p<d?(d=p,l=u<l?u:l,a=h):p===d&&u<l&&(l=u,a=h)}e=a||e.children[0]}var s,n;return e}_insert(t,e,i){const o=i?t:this.toBBox(t),s=[],n=this._chooseSubtree(o,this.data,e,s);for(n.children.push(t),ut(n,o);e>=0&&s[e].children.length>this._maxEntries;)this._split(s,e),e--;this._adjustParentBBoxes(o,s,e)}_split(t,e){const i=t[e],o=i.children.length,s=this._minEntries;this._chooseSplitAxis(i,s,o);const n=this._chooseSplitIndex(i,s,o),a=et(i.children.splice(n,i.children.length-n));a.height=i.height,a.leaf=i.leaf,tt(i,this.toBBox),tt(a,this.toBBox),e?t[e-1].children.push(a):this._splitRoot(i,a)}_splitRoot(t,e){this.data=et([t,e]),this.data.height=t.height+1,this.data.leaf=!1,tt(this.data,this.toBBox)}_chooseSplitIndex(t,e,i){let o,s=1/0,n=1/0;for(let a=e;a<=i-e;a++){const l=ht(t,0,a,this.toBBox),d=ht(t,a,i,this.toBBox),c=$i(l,d),h=Vt(l)+Vt(d);c<s?(s=c,o=a,n=h<n?h:n):c===s&&h<n&&(n=h,o=a)}return o||i-e}_chooseSplitAxis(t,e,i){const o=t.leaf?this.compareMinX:Vi,s=t.leaf?this.compareMinY:zi;this._allDistMargin(t,e,i,o)<this._allDistMargin(t,e,i,s)&&t.children.sort(o)}_allDistMargin(t,e,i,o){t.children.sort(o);const s=this.toBBox,n=ht(t,0,e,s),a=ht(t,i-e,i,s);let l=It(n)+It(a);for(let d=e;d<i-e;d++){const c=t.children[d];ut(n,t.leaf?s(c):c),l+=It(n)}for(let d=i-e-1;d>=e;d--){const c=t.children[d];ut(a,t.leaf?s(c):c),l+=It(a)}return l}_adjustParentBBoxes(t,e,i){for(let o=i;o>=0;o--)ut(e[o],t)}_condense(t){for(let e,i=t.length-1;i>=0;i--)t[i].children.length===0?i>0?(e=t[i-1].children,e.splice(e.indexOf(t[i]),1)):this.clear():tt(t[i],this.toBBox)}}class Ki{constructor(t){this.tree=void 0,this.idToNode=void 0,this.nodeToId=void 0,this.tree=new Yi(t&&t.maxEntries?t.maxEntries:9),this.idToNode=new Map,this.nodeToId=new Map}setMaps(t,e){this.idToNode.set(t.id,e),this.nodeToId.set(e,t.id)}toBBox(t){const e=[],i=[];let o;if(t.geometry.type==="Polygon")o=t.geometry.coordinates[0];else if(t.geometry.type==="LineString")o=t.geometry.coordinates;else{if(t.geometry.type!=="Point")throw new Error("Not a valid feature to turn into a bounding box");o=[t.geometry.coordinates]}for(let a=0;a<o.length;a++)i.push(o[a][1]),e.push(o[a][0]);const s=Math.min(...i),n=Math.max(...i);return{minX:Math.min(...e),minY:s,maxX:Math.max(...e),maxY:n}}insert(t){if(this.idToNode.get(String(t.id)))throw new Error("Feature already exists");const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}load(t){const e=[],i=new Set;t.forEach(o=>{const s=this.toBBox(o);if(this.setMaps(o,s),i.has(String(o.id)))throw new Error(`Duplicate feature ID found ${o.id}`);i.add(String(o.id)),e.push(s)}),this.tree.load(e)}update(t){this.remove(t.id);const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}remove(t){const e=this.idToNode.get(t);if(!e)throw new Error(`${t} not inserted into the spatial index`);this.tree.remove(e)}clear(){this.tree.clear()}search(t){return this.tree.search(this.toBBox(t)).map(e=>this.nodeToId.get(e))}collides(t){return this.tree.collides(this.toBBox(t))}}const Xi={getId:()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(r){const t=16*Math.random()|0;return(r=="x"?t:3&t|8).toString(16)}),isValidId:r=>typeof r=="string"&&r.length===36};class Hi{constructor(t){this.idStrategy=void 0,this.tracked=void 0,this.spatialIndex=void 0,this.store=void 0,this._onChange=()=>{},this.store={},this.spatialIndex=new Ki,this.tracked=!t||t.tracked!==!1,this.idStrategy=t&&t.idStrategy?t.idStrategy:Xi}clone(t){return JSON.parse(JSON.stringify(t))}getId(){return this.idStrategy.getId()}has(t){return!!this.store[t]}load(t,e,i,o){if(t.length===0)return[];let s=this.clone(t);const n=[],a=[];s=s.filter(d=>{d.id==null&&(d.id=this.idStrategy.getId());const c=d.id;if(e){const h=e(d);if(!h.valid)return n.push({id:c,valid:!1,reason:h.reason}),!1}if(this.tracked){if(d.properties.createdAt){if(!oe(d.properties.createdAt))return n.push({id:d.id,valid:!1,reason:"createdAt is not a valid numeric timestamp"}),!1}else d.properties.createdAt=+new Date;if(d.properties.updatedAt){if(!oe(d.properties.updatedAt))return n.push({id:d.id,valid:!1,reason:"updatedAt is not a valid numeric timestamp"}),!1}else d.properties.updatedAt=+new Date}return this.has(c)?(n.push({id:c,valid:!1,reason:`Feature already exists with this id: ${c}`}),!1):(this.store[c]=d,a.push(d),n.push({id:c,valid:!0}),!0)}),this.spatialIndex.load(s);const l=a.map(({id:d})=>d);return l.length>0&&(this._onChange(l,"create",o),i&&a.forEach(d=>{i(d)})),n}search(t,e){const i=this.spatialIndex.search(t).map(o=>this.store[o]);return this.clone(e?i.filter(e):i)}registerOnChange(t){this._onChange=(e,i,o)=>{t(e,i,o)}}getGeometryCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get geometry copy`);return this.clone(e.geometry)}getPropertiesCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get properties copy`);return this.clone(e.properties)}updateProperty(t,e){const i=[];t.forEach(({id:o,property:s,value:n})=>{const a=this.store[o];if(!a)throw new Error(`No feature with this (${o}), can not update geometry`);i.push(o),n===void 0?delete a.properties[s]:a.properties[s]=n,this.tracked&&(a.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,"update",e)}updateGeometry(t,e){const i=[];t.forEach(({id:o,geometry:s})=>{i.push(o);const n=this.store[o];if(!n)throw new Error(`No feature with this (${o}), can not update geometry`);n.geometry=this.clone(s),this.spatialIndex.update(n),this.tracked&&(n.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,"update",e)}create(t,e){const i=[];return t.forEach(({geometry:o,properties:s})=>{let n,a=O({},s);this.tracked&&(n=+new Date,s?(a.createdAt=typeof s.createdAt=="number"?s.createdAt:n,a.updatedAt=typeof s.updatedAt=="number"?s.updatedAt:n):a={createdAt:n,updatedAt:n});const l=this.getId(),d={id:l,type:"Feature",geometry:o,properties:a};this.store[l]=d,this.spatialIndex.insert(d),i.push(l)}),this._onChange&&this._onChange([...i],"create",e),i}delete(t,e){t.forEach(i=>{if(!this.store[i])throw new Error(`No feature with id ${i}, can not delete`);delete this.store[i],this.spatialIndex.remove(i)}),this._onChange&&this._onChange([...t],"delete",e)}copy(t){return this.clone(this.store[t])}copyAll(){return this.clone(Object.keys(this.store).map(t=>this.store[t]))}copyAllWhere(t){return this.clone(Object.keys(this.store).map(e=>this.store[e]).filter(e=>e.properties&&t(e.properties)))}clear(){this.store={},this.spatialIndex.clear()}size(){return Object.keys(this.store).length}}const Ji="Feature is not a Polygon or LineString",qi="Feature intersects itself",Zi=r=>r.geometry.type!=="Polygon"&&r.geometry.type!=="LineString"?{valid:!1,reason:Ji}:_t(r)?{valid:!1,reason:qi}:{valid:!0};function De(r,t,e){const i=V(r,t);let o=V(t,e)-i;return o<0&&(o+=360),180-Math.abs(o-90-90)}const Qi={cancel:"Escape",finish:"Enter"},to={start:"crosshair",close:"pointer"};class _e extends R{constructor(t){super(t,!0),this.mode="angled-rectangle",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=Qi,this.cursors=to,this.mouseMove=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents))}close(){if(this.currentId===void 0)return;this.store.updateProperty([{id:this.currentId,property:S.CURRENTLY_DRAWING,value:void 0}]);const t=this.currentId;this.currentCoordinate=0,this.currentId=void 0,this.state==="drawing"&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),this.currentId===void 0||this.currentCoordinate===0)return;const e=this.store.getGeometryCopy(this.currentId).coordinates[0];let i;if(this.currentCoordinate===1){const o=1/Math.pow(10,this.coordinatePrecision-1),s=Math.max(1e-6,o);i=[e[0],[t.lng,t.lat],[t.lng,t.lat-s],e[0]]}else if(this.currentCoordinate===2){const o=e[0],s=e[1],n=Ie(o,s,this.coordinatePrecision,this.project,this.unproject),a=x(o[0],o[1]),l=x(n[0],n[1]),d=x(s[0],s[1]),c=x(t.lng,t.lat),h=F(c,a)<F(c,d),u=De(a,l,c),p=h?90-u:De(a,l,c)-90,g=F(l,c),y=Math.cos(_(p))*g,m=V(a,d)+((function(I,w,M){const D=(M.x-w.x)*(I.y-w.y)-(M.y-w.y)*(I.x-w.x);return D>1e-10?"left":D<-1e-10?"right":"left"})(a,d,c)==="right"?-90:90),v=dt(a,y,m),C=dt(d,y,m),f=U(v.x,v.y),P=U(C.x,C.y);i=[e[0],e[1],[P.lng,P.lat],[f.lng,f.lat],e[0]]}i&&this.updatePolygonGeometry(this.currentId,i,b.Provisional)}updatePolygonGeometry(t,e,i){const o={type:"Polygon",coordinates:[e]};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,this.currentCoordinate===0){const[e]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0}}]);this.currentId=e,this.currentCoordinate++,this.setDrawing()}else if(this.currentCoordinate===1&&this.currentId){const e=this.store.getGeometryCopy(this.currentId);if(Z([t.lng,t.lat],e.coordinates[0][0])||!this.updatePolygonGeometry(this.currentId,[e.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],e.coordinates[0][0]],b.Commit))return;this.currentCoordinate++}else this.currentCoordinate===2&&this.currentId&&this.close()}onKeyUp(t){if(t.key===this.keyEvents.cancel)this.cleanUp();else if(t.key===this.keyEvents.finish){if(this.currentCoordinate<2)return void this.cleanUp();this.close()}}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentId&&this.store.delete([this.currentId])}catch{}this.currentId=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted()}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.properties.mode===this.mode&&t.geometry.type==="Polygon"&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=A),e}validateFeature(t){return this.validateModeFeature(t,e=>rt(e,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.currentId=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted())}}function ke(r,t,e){return(t.x-r.x)*(e.y-r.y)-(t.y-r.y)*(e.x-r.x)<=0}const eo={cancel:"Escape",finish:"Enter"},io={start:"crosshair",close:"pointer"};class Ne extends R{constructor(t){super(t,!0),this.mode="sector",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=eo,this.direction=void 0,this.arcPoints=64,this.cursors=io,this.mouseMove=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t!=null&&t.arcPoints&&(this.arcPoints=t.arcPoints)}close(){if(this.currentId===void 0)return;const t=nt(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}]),this.store.updateProperty([{id:this.currentId,property:S.CURRENTLY_DRAWING,value:void 0}]);const e=this.currentId;this.currentCoordinate=0,this.currentId=void 0,this.direction=void 0,this.state==="drawing"&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),this.currentId===void 0||this.currentCoordinate===0)return;const e=this.store.getGeometryCopy(this.currentId).coordinates[0];let i;if(this.currentCoordinate===1){const o=1/Math.pow(10,this.coordinatePrecision-1),s=Math.max(1e-6,o);i=[e[0],[t.lng,t.lat],[t.lng,t.lat-s],e[0]]}else if(this.currentCoordinate===2){const o=e[0],s=e[1],n=[t.lng,t.lat],a=x(o[0],o[1]),l=x(s[0],s[1]),d=x(n[0],n[1]);if(this.direction===void 0){const f=ke(a,l,d);this.direction=f?"clockwise":"anticlockwise"}const c=F(a,l),h=V(a,l),u=V(a,d),p=this.arcPoints,g=[o],y=K(h),m=K(u);let v;this.direction==="anticlockwise"?(v=m-y,v<0&&(v+=360)):(v=y-m,v<0&&(v+=360));const C=(this.direction==="anticlockwise"?1:-1)*v/p;g.push(s);for(let f=0;f<=p;f++){const P=dt(a,c,y+f*C),{lng:I,lat:w}=U(P.x,P.y),M=[L(I,this.coordinatePrecision),L(w,this.coordinatePrecision)];M[0]!==g[g.length-1][0]&&M[1]!==g[g.length-1][1]&&g.push(M)}g.push(o),i=[...g]}i&&this.updatePolygonGeometry(this.currentId,i,b.Provisional)}updatePolygonGeometry(t,e,i){const o={type:"Polygon",coordinates:[e]};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,this.currentCoordinate===0){const[e]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0}}]);this.currentId=e,this.currentCoordinate++,this.setDrawing()}else if(this.currentCoordinate===1&&this.currentId){const e=this.store.getGeometryCopy(this.currentId);if(Z([t.lng,t.lat],e.coordinates[0][0])||!this.updatePolygonGeometry(this.currentId,[e.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],e.coordinates[0][0]],b.Commit))return;this.currentCoordinate++}else this.currentCoordinate===2&&this.currentId&&this.close()}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentId&&this.store.delete([this.currentId])}catch{}this.currentId=void 0,this.direction=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted()}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.properties.mode===this.mode&&t.geometry.type==="Polygon"&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=A),e}validateFeature(t){return this.validateModeFeature(t,e=>rt(e,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.currentId=void 0,this.direction=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted())}}const oo={cancel:"Escape",finish:"Enter"},so={start:"crosshair",close:"pointer"};class Te extends R{constructor(t){super(t,!0),this.mode="sensor",this.currentCoordinate=0,this.currentId=void 0,this.currentInitialArcId=void 0,this.currentStartingPointId=void 0,this.keyEvents=oo,this.direction=void 0,this.arcPoints=64,this.cursors=so,this.mouseMove=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors)),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t!=null&&t.arcPoints&&(this.arcPoints=t.arcPoints)}close(){if(this.currentStartingPointId===void 0)return;const t=this.currentStartingPointId,e=this.currentInitialArcId,i=this.currentId;if(t&&this.store.delete([t]),e&&this.store.delete([e]),this.currentId){const o=nt(this.store.getGeometryCopy(this.currentId));o&&this.store.updateGeometry([{id:this.currentId,geometry:o}]),this.store.updateProperty([{id:this.currentId,property:S.CURRENTLY_DRAWING,value:void 0}])}this.currentCoordinate=0,this.currentStartingPointId=void 0,this.currentInitialArcId=void 0,this.currentId=void 0,this.direction=void 0,this.state==="drawing"&&this.setStarted(),i&&this.onFinish(i,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),this.currentInitialArcId!==void 0&&this.currentStartingPointId!==void 0&&this.currentCoordinate!==0){if(this.currentCoordinate===2){const e=this.store.getGeometryCopy(this.currentInitialArcId).coordinates,i=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,o=e[0],s=[t.lng,t.lat],n=x(o[0],o[1]),a=x(s[0],s[1]),l=x(i[0],i[1]),d=F(l,n);if(this.direction===void 0){const C=ke(l,n,a);this.direction=C?"clockwise":"anticlockwise"}const c=V(l,n),h=V(l,a),u=this.arcPoints,p=[o],g=K(c),y=K(h);let m;this.direction==="anticlockwise"?(m=y-g,m<0&&(m+=360)):(m=g-y,m<0&&(m+=360));const v=(this.direction==="anticlockwise"?1:-1)*m/u;for(let C=0;C<=u;C++){const f=dt(l,d,g+C*v),{lng:P,lat:I}=U(f.x,f.y),w=[L(P,this.coordinatePrecision),L(I,this.coordinatePrecision)];w[0]!==p[p.length-1][0]&&w[1]!==p[p.length-1][1]&&p.push(w)}this.updateLineStringGeometry(this.currentInitialArcId,p,b.Provisional)}else if(this.currentCoordinate===3){const e=this.store.getGeometryCopy(this.currentInitialArcId).coordinates;if(e.length<2||!this.direction)return;const i=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,o=e[0],s=e[e.length-1],n=x(t.lng,t.lat),a=x(o[0],o[1]),l=x(s[0],s[1]),d=x(i[0],i[1]),c=F(d,a),h=F(d,n)<c?a:n,u=V(d,n),p=V(d,a),g=V(d,l),y=K(p),m=K(g),v=K(u);if(this.notInSector({normalizedCursor:v,normalizedStart:y,normalizedEnd:m,direction:this.direction}))return;const C=this.getDeltaBearing(this.direction,y,m),f=this.arcPoints,P=(this.direction==="anticlockwise"?1:-1)*C/f,I=F(d,h),w=[];for(let M=0;M<=f;M++){const D=dt(d,I,y+M*P),{lng:T,lat:N}=U(D.x,D.y),j=[L(T,this.coordinatePrecision),L(N,this.coordinatePrecision)];j[0]!==e[e.length-1][0]&&j[1]!==e[e.length-1][1]&&w.unshift(j)}e.push(...w),e.push(e[0]),this.currentId?this.updatePolygonGeometry(this.currentId,e,b.Provisional):[this.currentId]=this.store.create([{geometry:{type:"Polygon",coordinates:[e]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0}}])}}}updateLineStringGeometry(t,e,i){const o={type:"LineString",coordinates:e};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}updatePolygonGeometry(t,e,i){const o={type:"Polygon",coordinates:[e]};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,this.currentCoordinate===0){const[e]=this.store.create([{geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:{mode:this.mode}}]);this.currentStartingPointId=e,this.currentCoordinate++,this.setDrawing()}else if(this.currentCoordinate===1&&this.currentStartingPointId){const[e]=this.store.create([{geometry:{type:"LineString",coordinates:[[t.lng,t.lat],[t.lng,t.lat]]},properties:{mode:this.mode}}]);this.currentInitialArcId=e,this.currentCoordinate++}else this.currentCoordinate===2&&this.currentStartingPointId?this.currentCoordinate++:this.currentCoordinate===3&&this.currentStartingPointId&&this.close()}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){try{this.currentStartingPointId&&this.store.delete([this.currentStartingPointId]),this.currentInitialArcId&&this.store.delete([this.currentInitialArcId]),this.currentId&&this.store.delete([this.currentId])}catch{}this.currentStartingPointId=void 0,this.direction=void 0,this.currentId=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted()}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.properties.mode===this.mode&&(t.geometry.type==="Polygon"?(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=A):t.geometry.type==="LineString"?(e.lineStringColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.zIndex=A):t.geometry.type==="Point"&&(e.pointColor=this.getHexColorStylingValue(this.styles.centerPointColor,e.pointColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.centerPointWidth,e.pointWidth,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.centerPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.centerPointOutlineWidth,e.pointOutlineWidth,t),e.zIndex=20)),e}validateFeature(t){return this.validateModeFeature(t,e=>rt(e,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.currentStartingPointId&&this.store.delete([this.currentStartingPointId]),this.currentInitialArcId&&this.store.delete([this.currentInitialArcId]),this.currentStartingPointId=void 0,this.direction=void 0,this.currentId=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted())}getDeltaBearing(t,e,i){let o;return t==="anticlockwise"?(o=i-e,o<0&&(o+=360)):(o=e-i,o<0&&(o+=360)),o}notInSector({normalizedCursor:t,normalizedStart:e,normalizedEnd:i,direction:o}){return o==="clockwise"?e<=i?t>=e&&t<=i:t>=e||t<=i:e>=i?t<=e&&t>=i:t<=e||t>=i}}class it{constructor({name:t,callback:e,unregister:i,register:o}){this.name=void 0,this.callback=void 0,this.registered=!1,this.register=void 0,this.unregister=void 0,this.name=t,this.register=()=>{this.registered||(this.registered=!0,o(e))},this.unregister=()=>{this.register&&(this.registered=!1,i(e))},this.callback=e}}var ro={__proto__:null,TerraDrawBaseAdapter:class{constructor(r){this._nextKeyUpIsContextMenu=!1,this._minPixelDragDistance=void 0,this._minPixelDragDistanceDrawing=void 0,this._minPixelDragDistanceSelecting=void 0,this._lastDrawEvent=void 0,this._coordinatePrecision=void 0,this._heldKeys=new Set,this._listeners=[],this._dragState="not-dragging",this._currentModeCallbacks=void 0,this._minPixelDragDistance=typeof r.minPixelDragDistance=="number"?r.minPixelDragDistance:1,this._minPixelDragDistanceSelecting=typeof r.minPixelDragDistanceSelecting=="number"?r.minPixelDragDistanceSelecting:1,this._minPixelDragDistanceDrawing=typeof r.minPixelDragDistanceDrawing=="number"?r.minPixelDragDistanceDrawing:8,this._coordinatePrecision=typeof r.coordinatePrecision=="number"?r.coordinatePrecision:9}getButton(r){return r.button===-1?"neither":r.button===0?"left":r.button===1?"middle":r.button===2?"right":"neither"}getMapElementXYPosition(r){const t=this.getMapEventElement(),{left:e,top:i}=t.getBoundingClientRect();return{containerX:r.clientX-e,containerY:r.clientY-i}}getDrawEventFromEvent(r,t=!1){const e=this.getLngLatFromEvent(r);if(!e)return null;const{lng:i,lat:o}=e,{containerX:s,containerY:n}=this.getMapElementXYPosition(r),a=this.getButton(r),l=Array.from(this._heldKeys);return{lng:L(i,this._coordinatePrecision),lat:L(o,this._coordinatePrecision),containerX:s,containerY:n,button:a,heldKeys:l,isContextMenu:t}}register(r){this._currentModeCallbacks=r,this._listeners=this.getAdapterListeners(),this._listeners.forEach(t=>{t.register()})}getCoordinatePrecision(){return this._coordinatePrecision}getAdapterListeners(){return[new it({name:"pointerdown",callback:r=>{if(!this._currentModeCallbacks||!r.isPrimary)return;const t=this.getDrawEventFromEvent(r);t&&(this._dragState="pre-dragging",this._lastDrawEvent=t)},register:r=>{this.getMapEventElement().addEventListener("pointerdown",r)},unregister:r=>{this.getMapEventElement().removeEventListener("pointerdown",r)}}),new it({name:"pointermove",callback:r=>{if(!this._currentModeCallbacks||!r.isPrimary)return;r.preventDefault();const t=this.getDrawEventFromEvent(r);if(t)if(this._dragState==="not-dragging")this._currentModeCallbacks.onMouseMove(t),this._lastDrawEvent=t;else if(this._dragState==="pre-dragging"){if(!this._lastDrawEvent)return;const e={x:this._lastDrawEvent.containerX,y:this._lastDrawEvent.containerY},i={x:t.containerX,y:t.containerY},o=this._currentModeCallbacks.getState(),s=F(e,i);let n=!1;if(n=o==="drawing"?s<this._minPixelDragDistanceDrawing:o==="selecting"?s<this._minPixelDragDistanceSelecting:s<this._minPixelDragDistance,n)return;this._nextKeyUpIsContextMenu=!1,this._dragState="dragging",this._currentModeCallbacks.onDragStart(t,a=>{this.setDraggability.bind(this)(a)})}else this._dragState==="dragging"&&this._currentModeCallbacks.onDrag(t,e=>{this.setDraggability.bind(this)(e)})},register:r=>{this.getMapEventElement().addEventListener("pointermove",r)},unregister:r=>{this.getMapEventElement().removeEventListener("pointermove",r)}}),new it({name:"contextmenu",callback:r=>{this._currentModeCallbacks&&(r.preventDefault(),this._nextKeyUpIsContextMenu=!0)},register:r=>{this.getMapEventElement().addEventListener("contextmenu",r)},unregister:r=>{this.getMapEventElement().removeEventListener("contextmenu",r)}}),new it({name:"pointerup",callback:r=>{if(!this._currentModeCallbacks||r.target!==this.getMapEventElement()||!r.isPrimary)return;const t=this.getDrawEventFromEvent(r);t&&(this._dragState==="dragging"?this._currentModeCallbacks.onDragEnd(t,e=>{this.setDraggability.bind(this)(e)}):this._dragState!=="not-dragging"&&this._dragState!=="pre-dragging"||(this._nextKeyUpIsContextMenu&&(t.isContextMenu=!0,this._nextKeyUpIsContextMenu=!1),this._currentModeCallbacks.onClick(t)),this._dragState="not-dragging",this.setDraggability(!0))},register:r=>{this.getMapEventElement().addEventListener("pointerup",r)},unregister:r=>{this.getMapEventElement().removeEventListener("pointerup",r)}}),new it({name:"keyup",callback:r=>{this._currentModeCallbacks&&(this._heldKeys.delete(r.key),this._currentModeCallbacks.onKeyUp({key:r.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>r.preventDefault()}))},register:r=>{this.getMapEventElement().addEventListener("keyup",r)},unregister:r=>{this.getMapEventElement().removeEventListener("keyup",r)}}),new it({name:"keydown",callback:r=>{this._currentModeCallbacks&&(this._heldKeys.add(r.key),this._currentModeCallbacks.onKeyDown({key:r.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>r.preventDefault()}))},register:r=>{this.getMapEventElement().addEventListener("keydown",r)},unregister:r=>{this.getMapEventElement().removeEventListener("keydown",r)}})]}unregister(){this._listeners.forEach(r=>{r.unregister()}),this.clear(),this._currentModeCallbacks=void 0}}};const no={cancel:"Escape",finish:"Enter"},ao={start:"crosshair",close:"pointer"};class We extends R{constructor(t){super(t,!0),this.mode="freehand-linestring",this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.minDistance=20,this.keyEvents=no,this.cursors=ao,this.preventNewFeature=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.minDistance&&(this.minDistance=t.minDistance),t?.keyEvents===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=O({},this.keyEvents,t.keyEvents)),t!=null&&t.cursors&&(this.cursors=O({},this.cursors,t.cursors))}close(){if(this.currentId===void 0)return;this.currentId&&this.store.updateProperty([{id:this.currentId,property:S.CURRENTLY_DRAWING,value:void 0}]);const t=this.currentId;if(this.validate&&t){const e=this.store.getGeometryCopy(t);if(!this.validate({type:"Feature",id:t,geometry:e,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.state==="drawing"&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){if(this.currentId===void 0||this.startingClick===!1)return void this.setCursor(this.cursors.start);const e=this.store.getGeometryCopy(this.currentId),i=e.coordinates.length-2,[o,s]=e.coordinates[i],{x:n,y:a}=this.project(o,s),l=F({x:n,y:a},{x:t.containerX,y:t.containerY}),[d,c]=e.coordinates[e.coordinates.length-1],{x:h,y:u}=this.project(d,c),p=F({x:h,y:u},{x:t.containerX,y:t.containerY});if(this.setCursor(p<this.pointerDistance?this.cursors.close:this.cursors.start),l<this.minDistance)return;const g={type:"LineString",coordinates:[...e.coordinates,[t.lng,t.lat]]};this.validate&&!this.validate({type:"Feature",id:this.currentId,geometry:g,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:b.Provisional}).valid||(this.store.updateGeometry([{id:this.currentId,geometry:g}]),this.closingPointId&&this.store.updateGeometry([{id:this.closingPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]))}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)){if(this.preventNewFeature)return;if(this.startingClick===!1){const[e,i]=this.store.create([{geometry:{type:"LineString",coordinates:[[t.lng,t.lat],[t.lng,t.lat]]},properties:{mode:this.mode,[S.CURRENTLY_DRAWING]:!0}},{geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:{mode:this.mode,[S.CLOSING_POINT]:!0}}]);return this.currentId=e,this.closingPointId=i,this.startingClick=!0,void(this.state!=="drawing"&&this.setDrawing())}this.close()}}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.startingClick===!0&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,this.state==="drawing"&&this.setStarted();try{t!==void 0&&this.store.delete([t]),e!==void 0&&this.store.delete([e])}catch{}}styleFeature(t){const e=O({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.type==="Feature"&&t.geometry.type==="LineString"&&t.properties.mode===this.mode?(e.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,e.lineStringWidth,t),e.zIndex=A,e):(t.type==="Feature"&&t.geometry.type==="Point"&&t.properties.mode===this.mode&&(e.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,t),e.zIndex=50),e)}validateFeature(t){return this.validateModeFeature(t,e=>Nt(e,this.coordinatePrecision))}afterFeatureUpdated(t){this.currentId===t.id&&(this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0)}}function $t(r){if(r===null||typeof r=="boolean"||typeof r=="string")return!0;if(r===void 0)return!1;if(typeof r=="number")return Number.isFinite(r);if(typeof r=="bigint"||typeof r=="symbol"||typeof r=="function"||r instanceof RegExp||r instanceof Map||r instanceof Set||r instanceof Date)return!1;if(typeof r=="object"&&r!==null&&!Array.isArray(r)){const t=Object.getPrototypeOf(r);if(t!==Object.prototype&&t!==null)return!1}if(ArrayBuffer.isView(r)&&!(r instanceof DataView))return!1;if(Array.isArray(r)){for(const t of r)if(!$t(t))return!1}return typeof r=="object"&&Object.keys(r).every(t=>typeof t=="string"&&$t(r[t]))}class lo{constructor(t){this._modes=void 0,this._mode=void 0,this._adapter=void 0,this._enabled=!1,this._store=void 0,this._eventListeners=void 0,this._instanceSelectMode=void 0,this._adapter=t.adapter,this._mode=new Gi;const e=new Set,i=t.modes.reduce((c,h)=>{if(e.has(h.mode))throw new Error(`There is already a ${h.mode} mode provided`);return e.add(h.mode),c[h.mode]=h,c},{}),o=Object.keys(i);if(o.length===0)throw new Error("No modes provided");o.forEach(c=>{if(i[c].type===Y.Select){if(this._instanceSelectMode)throw new Error("only one type of select mode can be provided");this._instanceSelectMode=c}}),this._modes=O({},i,{static:this._mode}),this._eventListeners={change:[],select:[],deselect:[],finish:[],ready:[]},this._store=new Hi({tracked:!!t.tracked,idStrategy:t.idStrategy?t.idStrategy:void 0});const s=c=>{const h=[],u=this._store.copyAll().filter(p=>!c.includes(p.id)||(h.push(p),!1));return{changed:h,unchanged:u}},n=(c,h)=>{this._enabled&&this._eventListeners.finish.forEach(u=>{u(c,h)})},a=(c,h,u)=>{if(!this._enabled)return;this._eventListeners.change.forEach(y=>{y(c,h,u)});const{changed:p,unchanged:g}=s(c);h==="create"?this._adapter.render({created:p,deletedIds:[],unchanged:g,updated:[]},this.getModeStyles()):h==="update"?this._adapter.render({created:[],deletedIds:[],unchanged:g,updated:p},this.getModeStyles()):h==="delete"?this._adapter.render({created:[],deletedIds:c,unchanged:g,updated:[]},this.getModeStyles()):h==="styling"&&this._adapter.render({created:[],deletedIds:[],unchanged:g,updated:[]},this.getModeStyles())},l=c=>{if(!this._enabled)return;this._eventListeners.select.forEach(p=>{p(c)});const{changed:h,unchanged:u}=s([c]);this._adapter.render({created:[],deletedIds:[],unchanged:u,updated:h},this.getModeStyles())},d=c=>{if(!this._enabled)return;this._eventListeners.deselect.forEach(p=>{p()});const{changed:h,unchanged:u}=s([c]);h&&this._adapter.render({created:[],deletedIds:[],unchanged:u,updated:h},this.getModeStyles())};Object.keys(this._modes).forEach(c=>{this._modes[c].register({mode:c,store:this._store,setCursor:this._adapter.setCursor.bind(this._adapter),project:this._adapter.project.bind(this._adapter),unproject:this._adapter.unproject.bind(this._adapter),setDoubleClickToZoom:this._adapter.setDoubleClickToZoom.bind(this._adapter),onChange:a,onSelect:l,onDeselect:d,onFinish:n,coordinatePrecision:this._adapter.getCoordinatePrecision()})})}checkEnabled(){if(!this._enabled)throw new Error("Terra Draw is not enabled")}getModeStyles(){const t={};return Object.keys(this._modes).forEach(e=>{t[e]=i=>this._instanceSelectMode&&i.properties[k.SELECTED]?this._modes[this._instanceSelectMode].styleFeature.bind(this._modes[this._instanceSelectMode])(i):this._modes[e].styleFeature.bind(this._modes[e])(i)}),t}featuresAtLocation({lng:t,lat:e},i){const o=i&&i.pointerDistance!==void 0?i.pointerDistance:30,s=!i||i.ignoreSelectFeatures===void 0||i.ignoreSelectFeatures,n=!(!i||i.ignoreCoordinatePoints===void 0)&&i.ignoreCoordinatePoints,a=!(!i||i.ignoreCurrentlyDrawing===void 0)&&i.ignoreCurrentlyDrawing,l=!(!i||i.ignoreClosingPoints===void 0)&&i.ignoreClosingPoints,d=this._adapter.unproject.bind(this._adapter),c=this._adapter.project.bind(this._adapter),h=c(t,e),u=ue({unproject:d,point:h,pointerDistance:o});return this._store.search(u).filter(p=>{if(s&&(p.properties[k.MID_POINT]||p.properties[k.SELECTION_POINT])||n&&p.properties[S.COORDINATE_POINT]||l&&p.properties[S.CLOSING_POINT]||a&&p.properties[S.CURRENTLY_DRAWING])return!1;if(p.geometry.type==="Point"){const g=p.geometry.coordinates,y=c(g[0],g[1]);return F(h,y)<o}if(p.geometry.type==="LineString"){const g=p.geometry.coordinates;for(let y=0;y<g.length-1;y++){const m=g[y],v=g[y+1];if(Rt(h,c(m[0],m[1]),c(v[0],v[1]))<o)return!0}return!1}if(xe([t,e],p.geometry.coordinates))return!0;if(i!=null&&i.includePolygonsWithinPointerDistance){const g=p.geometry.coordinates;for(const y of g)for(let m=0;m<y.length-1;m++){const v=y[m],C=y[m+1],f=c(v[0],v[1]),P=c(C[0],C[1]);if(Rt(h,f,P)<o)return!0}}return!1}).map(p=>{if(i==null||!i.addClosestCoordinateInfoToProperties)return p;let g;if(p.geometry.type==="Polygon")g=p.geometry.coordinates[0],g.pop();else{if(p.geometry.type!=="LineString")return p;g=p.geometry.coordinates}let y,m=-1,v=1/0;for(let C=0;C<g.length;C++){const f=g[C],P=F(c(f[0],f[1]),h);P<v&&(m=C,v=P,y=f)}return p.properties.closestCoordinateIndexToEvent=m,p.properties.closestCoordinatePixelDistanceToEvent=v,p.properties.closestCoordinateDistanceKmToEvent=G(y,[t,e]),p})}getSelectModeOrThrow(){const t=this.getSelectMode({switchToSelectMode:!0});if(!t)throw new Error("No select mode defined in instance");return t}getSelectMode({switchToSelectMode:t}){if(this.checkEnabled(),!this._instanceSelectMode)return null;const e=this.getMode();return t&&e!==this._instanceSelectMode&&this.setMode(this._instanceSelectMode),this._modes[this._instanceSelectMode]}isGuidanceFeature(t){return!!(t.properties[k.MID_POINT]||t.properties[k.SELECTION_POINT]||t.properties[S.COORDINATE_POINT]||t.properties[S.SNAPPING_POINT])}setModeStyles(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._modes[t].styles=e}updateModeOptions(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._modes[t].updateOptions(e)}getSnapshot(){return this._store.copyAll()}getSnapshotFeature(t){if(this._store.has(t))return this._store.copy(t)}clear(){this.checkEnabled(),this._adapter.clear()}get enabled(){return this._enabled}set enabled(t){throw new Error("Enabled is read only")}getMode(){return this._mode.mode}getModeState(){return this._mode.state}setMode(t){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._mode.stop(),this._mode=this._modes[t],this._mode.start()}removeFeatures(t){this.checkEnabled();const e=[];t.forEach(i=>{if(!this._store.has(i))throw new Error(`No feature with id ${i}, can not delete`);const o=this._store.copy(i);o.properties[k.SELECTED]&&this.deselectFeature(i),o.properties[S.COORDINATE_POINT_IDS]&&e.push(...o.properties[S.COORDINATE_POINT_IDS])}),this._store.delete([...t,...e],{origin:"api"})}selectFeature(t){this.getSelectModeOrThrow().selectFeature(t)}deselectFeature(t){this.getSelectModeOrThrow().deselectFeature(t)}getFeatureId(){return this._store.getId()}hasFeature(t){return this._store.has(t)}checkIsReservedProperty(t){return![...Object.values(k),...Object.values(S)].includes(t)}updateFeatureProperties(t,e){if(!this._store.has(t))throw new Error(`No feature with id ${t} present in store`);const i=this._store.copy(t);if(this.isGuidanceFeature(i))throw new Error("Guidance features are not allowed to be updated directly.");const o=i.properties.mode;if(!this._modes[o])throw new Error(`No mode with name ${o} present in instance`);const s=Object.entries(e);s.forEach(([n,a])=>{if(!this.checkIsReservedProperty(n))throw new Error(`You are trying to update a reserved property name: ${n}. Please choose another name.`);if(a!==void 0&&!$t(a))throw new Error(`Invalid JSON value provided for property ${n}`)}),this._store.updateProperty(s.map(([n,a])=>({id:i.id,property:n,value:a})),{origin:"api"})}updateFeatureGeometry(t,e){if(!this._store.has(t))throw new Error(`No feature with id ${t} present in store`);const i=this._store.copy(t);if(this.isGuidanceFeature(i))throw new Error("Guidance features are not allowed to be updated directly.");if(!(i&&e&&e.type&&e.coordinates))throw new Error("Invalid geometry provided");if(e.type!==i.geometry.type)throw new Error(`Geometry type mismatch: expected ${i.geometry.type}, got ${e.type}`);const o=i.properties.mode,s=this._modes[o];if(!s)throw new Error(`No mode with name ${o} present in instance`);const n=O({},i,{geometry:e}),a=s.validateFeature(n);if(!a.valid)throw new Error(`Feature validation failed: ${a.reason||"Unknown reason"}`);if(this._store.updateGeometry([{id:i.id,geometry:e}],{origin:"api"}),s.afterFeatureUpdated){s.afterFeatureUpdated(n);const l=n.properties[k.SELECTED],d=this.getSelectMode({switchToSelectMode:!1});d&&l&&d.afterFeatureUpdated(n)}}transformFeatureGeometry(t,e){if(!this._store.has(t))throw new Error(`No feature with id ${t} present in store`);let i=this._store.copy(t);if(this.isGuidanceFeature(i))throw new Error("Guidance features are not allowed to be updated directly.");const o=i.properties.mode,s=this._modes[o];if(!s)throw new Error(`No mode with name ${o} present in instance`);let n;if(i.geometry.type==="Polygon")n=i.geometry.coordinates[0];else{if(i.geometry.type!=="LineString")throw new Error(`Feature geometry type ${i.geometry.type} is not supported for transformation`);n=i.geometry.coordinates}if(e.projection!="web-mercator")throw new Error(`Projection ${e.projection} is not currently supported for transformation`);if(e.type==="scale"){const{x:a,y:l}=x(e.origin[0],e.origin[1]);we({coordinates:n,originX:a,originY:l,xScale:e.options.xScale||1,yScale:e.options.yScale||1})}else e.type==="rotate"&&(i=Ee(i,e.options.angle||0),n=i.geometry.type==="Polygon"?i.geometry.coordinates[0]:i.geometry.coordinates);if(n=n.map(a=>[L(a[0],this._adapter.getCoordinatePrecision()),L(a[1],this._adapter.getCoordinatePrecision())]),i.geometry.coordinates=i.geometry.type==="Polygon"?[n]:n,this._store.updateGeometry([{id:i.id,geometry:i.geometry}],{origin:"api"}),s.afterFeatureUpdated){s.afterFeatureUpdated(i);const a=i.properties[k.SELECTED],l=this.getSelectMode({switchToSelectMode:!1});l&&a&&l.afterFeatureUpdated(i)}}addFeatures(t){return this.checkEnabled(),t.length===0?[]:this._store.load(t,e=>{if(ie(e)){const i=e.properties.mode,o=this._modes[i];if(!o)return{id:e.id,valid:!1,reason:`${i} mode is not in the list of instantiated modes`};const s=o.validateFeature.bind(o)(e);return{id:e.id,valid:s.valid,reason:s.reason?s.reason:s.valid?void 0:"Feature is invalid"}}return{id:e.id,valid:!1,reason:"Mode property does not exist"}},e=>{if(ie(e)){const i=this._modes[e.properties.mode];i&&i.afterFeatureAdded&&i.afterFeatureAdded(e)}},{origin:"api"})}start(){this._enabled||(this._enabled=!0,this._adapter.register({onReady:()=>{this._eventListeners.ready.forEach(t=>{t()})},getState:()=>this._mode.state,onClick:t=>{this._mode.onClick(t)},onMouseMove:t=>{this._mode.onMouseMove(t)},onKeyDown:t=>{this._mode.onKeyDown(t)},onKeyUp:t=>{this._mode.onKeyUp(t)},onDragStart:(t,e)=>{this._mode.onDragStart(t,e)},onDrag:(t,e)=>{this._mode.onDrag(t,e)},onDragEnd:(t,e)=>{this._mode.onDragEnd(t,e)},onClear:()=>{this._mode.cleanUp(),this._store.clear()}}))}getFeaturesAtLngLat(t,e){const{lng:i,lat:o}=t;return this.featuresAtLocation({lng:i,lat:o},e)}getFeaturesAtPointerEvent(t,e){const i=this._adapter.getLngLatFromEvent.bind(this._adapter)(t);return i===null?[]:this.featuresAtLocation(i,e)}stop(){this._enabled&&(this._enabled=!1,this._adapter.unregister())}on(t,e){const i=this._eventListeners[t];i.includes(e)||i.push(e)}off(t,e){const i=this._eventListeners[t];i.includes(e)&&i.splice(i.indexOf(e),1)}}class co extends ro.TerraDrawBaseAdapter{constructor(t){super(t),this._renderBeforeLayerId=void 0,this._prefixId=void 0,this._initialDragPan=void 0,this._initialDragRotate=void 0,this._nextRender=void 0,this._map=void 0,this._container=void 0,this.changedIds={deletion:!1,points:!1,linestrings:!1,polygons:!1,styling:!1},this._map=t.map,this._container=this._map.getContainer(),this._initialDragRotate=this._map.dragRotate.isEnabled(),this._initialDragPan=this._map.dragPan.isEnabled(),this._renderBeforeLayerId=t.renderBelowLayerId,this._prefixId=t.prefixId||"td"}_addGeoJSONSource(t,e){this._map.addSource(t,{type:"geojson",data:{type:"FeatureCollection",features:e},tolerance:0})}_addFillLayer(t){return this._map.addLayer({id:t,source:t,type:"fill",layout:{"fill-sort-key":["get","zIndex"]},paint:{"fill-color":["get","polygonFillColor"],"fill-opacity":["get","polygonFillOpacity"]}})}_addFillOutlineLayer(t){return this._map.addLayer({id:t+"-outline",source:t,type:"line",layout:{"line-sort-key":["get","zIndex"]},paint:{"line-width":["get","polygonOutlineWidth"],"line-color":["get","polygonOutlineColor"]}})}_addLineLayer(t){return this._map.addLayer({id:t,source:t,type:"line",layout:{"line-sort-key":["get","zIndex"]},paint:{"line-width":["get","lineStringWidth"],"line-color":["get","lineStringColor"]}})}_addPointLayer(t){return this._map.addLayer({id:t,source:t,type:"circle",layout:{"circle-sort-key":["get","zIndex"]},paint:{"circle-stroke-color":["get","pointOutlineColor"],"circle-stroke-width":["get","pointOutlineWidth"],"circle-radius":["get","pointWidth"],"circle-color":["get","pointColor"]}})}_addLayer(t,e){e==="Point"&&this._addPointLayer(t),e==="LineString"&&this._addLineLayer(t),e==="Polygon"&&(this._addFillLayer(t),this._addFillOutlineLayer(t))}_addGeoJSONLayer(t,e){const i=`${this._prefixId}-${t.toLowerCase()}`;return this._addGeoJSONSource(i,e),this._addLayer(i,t),i}_setGeoJSONLayerData(t,e){const i=`${this._prefixId}-${t.toLowerCase()}`;return this._map.getSource(i).setData({type:"FeatureCollection",features:e}),i}updateChangedIds(t){[...t.updated,...t.created].forEach(e=>{e.geometry.type==="Point"?this.changedIds.points=!0:e.geometry.type==="LineString"?this.changedIds.linestrings=!0:e.geometry.type==="Polygon"&&(this.changedIds.polygons=!0)}),t.deletedIds.length>0&&(this.changedIds.deletion=!0),t.created.length===0&&t.updated.length===0&&t.deletedIds.length===0&&(this.changedIds.styling=!0)}getLngLatFromEvent(t){const{left:e,top:i}=this._container.getBoundingClientRect();return this.unproject(t.clientX-e,t.clientY-i)}getMapEventElement(){return this._map.getCanvas()}setDraggability(t){t?(this._initialDragRotate&&this._map.dragRotate.enable(),this._initialDragPan&&this._map.dragPan.enable()):(this._initialDragRotate&&this._map.dragRotate.disable(),this._initialDragPan&&this._map.dragPan.disable())}project(t,e){const{x:i,y:o}=this._map.project({lng:t,lat:e});return{x:i,y:o}}unproject(t,e){const{lng:i,lat:o}=this._map.unproject({x:t,y:e});return{lng:i,lat:o}}setCursor(t){const e=this._map.getCanvas();t==="unset"?e.style.removeProperty("cursor"):e.style.cursor=t}setDoubleClickToZoom(t){t?this._map.doubleClickZoom.enable():this._map.doubleClickZoom.disable()}render(t,e){this.updateChangedIds(t),this._nextRender&&cancelAnimationFrame(this._nextRender),this._nextRender=requestAnimationFrame(()=>{if(!this._currentModeCallbacks)return;const i=[...t.created,...t.updated,...t.unchanged],o=[],s=[],n=[];for(let c=0;c<i.length;c++){const h=i[c],{properties:u}=h,p=e[u.mode](h);h.geometry.type==="Point"?(u.pointColor=p.pointColor,u.pointOutlineColor=p.pointOutlineColor,u.pointOutlineWidth=p.pointOutlineWidth,u.pointWidth=p.pointWidth,u.zIndex=p.zIndex,o.push(h)):h.geometry.type==="LineString"?(u.lineStringColor=p.lineStringColor,u.lineStringWidth=p.lineStringWidth,s.push(h)):h.geometry.type==="Polygon"&&(u.polygonFillColor=p.polygonFillColor,u.polygonFillOpacity=p.polygonFillOpacity,u.polygonOutlineColor=p.polygonOutlineColor,u.polygonOutlineWidth=p.polygonOutlineWidth,n.push(h))}const a=this.changedIds.deletion||this.changedIds.styling,l=a||this.changedIds.linestrings,d=a||this.changedIds.polygons;(a||this.changedIds.points)&&this._setGeoJSONLayerData("Point",o),l&&this._setGeoJSONLayerData("LineString",s),d&&this._setGeoJSONLayerData("Polygon",n),this.changedIds={points:!1,linestrings:!1,polygons:!1,deletion:!1,styling:!1}})}clear(){this._currentModeCallbacks&&(this._currentModeCallbacks.onClear(),this._nextRender&&(cancelAnimationFrame(this._nextRender),this._nextRender=void 0),this._setGeoJSONLayerData("Point",[]),this._setGeoJSONLayerData("LineString",[]),this._setGeoJSONLayerData("Polygon",[]))}getCoordinatePrecision(){return super.getCoordinatePrecision()}unregister(){super.unregister(),this.changedIds={points:!1,linestrings:!1,polygons:!1,deletion:!1,styling:!1},this._map.removeLayer(`${this._prefixId}-point`),this._map.removeSource(`${this._prefixId}-point`),this._map.removeLayer(`${this._prefixId}-linestring`),this._map.removeSource(`${this._prefixId}-linestring`),this._map.removeLayer(`${this._prefixId}-polygon`),this._map.removeLayer(`${this._prefixId}-polygon-outline`),this._map.removeSource(`${this._prefixId}-polygon`)}register(t){var e;super.register(t);const i=this._addGeoJSONLayer("Polygon",[]),o=this._addGeoJSONLayer("LineString",[]),s=this._addGeoJSONLayer("Point",[]);this._renderBeforeLayerId&&(this._map.moveLayer(s,this._renderBeforeLayerId),this._map.moveLayer(o,s),this._map.moveLayer(i+"-outline",o),this._map.moveLayer(i,o)),(e=this._currentModeCallbacks)!=null&&e.onReady&&this._currentModeCallbacks.onReady()}}const ho=["render","point","linestring","polygon","rectangle","circle","freehand","freehand-linestring","angled-rectangle","sensor","sector","select","delete-selection","delete","download"],uo=["render","linestring","point","select","delete-selection","delete","download","settings"],Be={modes:["render","point","linestring","polygon","rectangle","angled-rectangle","sensor","sector","circle","freehand","freehand-linestring","select","delete-selection","delete","download"],open:!1},ot={modes:["render","point","linestring","polygon","rectangle","angled-rectangle","sensor","sector","circle","freehand","freehand-linestring","select","delete-selection","delete","download"],open:!1,modeOptions:{point:new jt({editable:!0,styles:{pointColor:"#FFFFFF",pointWidth:5,pointOutlineColor:"#666666",pointOutlineWidth:1}}),linestring:new Bt({editable:!0,styles:{lineStringColor:"#666666",lineStringWidth:2,closingPointColor:"#FFFFFF",closingPointWidth:3,closingPointOutlineColor:"#666666",closingPointOutlineWidth:1}}),polygon:new Ce({editable:!0,styles:{fillColor:"#EDEFF0",fillOpacity:.7,outlineColor:"#666666",outlineWidth:2,closingPointColor:"#FAFAFA",closingPointWidth:3,closingPointOutlineColor:"#666666",closingPointOutlineWidth:1}}),rectangle:new Pe({styles:{fillColor:"#EDEFF0",fillOpacity:.7,outlineColor:"#666666",outlineWidth:2}}),"angled-rectangle":new _e({styles:{fillColor:"#EDEFF0",fillOpacity:.7,outlineColor:"#666666",outlineWidth:2}}),circle:new ce({styles:{fillColor:"#EDEFF0",fillOpacity:.7,outlineColor:"#666666",outlineWidth:2}}),freehand:new he({styles:{fillColor:"#EDEFF0",fillOpacity:.7,outlineColor:"#666666",outlineWidth:2,closingPointColor:"#FAFAFA",closingPointWidth:3,closingPointOutlineColor:"#666666",closingPointOutlineWidth:1}}),"freehand-linestring":new We({styles:{lineStringColor:"#666666",lineStringWidth:2,closingPointColor:"#FFFFFF",closingPointWidth:3,closingPointOutlineColor:"#666666",closingPointOutlineWidth:1}}),sensor:new Te({styles:{fillColor:"#EDEFF0",fillOpacity:.7,outlineColor:"#666666",outlineWidth:2,centerPointColor:"#FAFAFA",centerPointWidth:3,centerPointOutlineColor:"#666666",centerPointOutlineWidth:1}}),sector:new Ne({styles:{fillColor:"#EDEFF0",fillOpacity:.7,outlineColor:"#666666",outlineWidth:2}}),select:new Gt({flags:{point:{feature:{draggable:!1}},polygon:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},linestring:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},freehand:{feature:{draggable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},"freehand-linestring":{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},circle:{feature:{draggable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},rectangle:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},"angled-rectangle":{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},sensor:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},sector:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}}}})},pointLayerLabelSpec:{id:"{prefix}-point-label",type:"symbol",source:"{prefix}-point-source",filter:["all",["==","$type","Point"],["==","mode","point"]],layout:{"text-field":["case",["all",["has","elevation"],[">",["get","elevation"],0]],["concat","Alt. ",["to-string",["floor",["get","elevation"]]]," m"],""],"symbol-placement":"point","text-size":["interpolate",["linear"],["zoom"],5,10,10,12,13,14,14,16,18,18],"text-overlap":"always","text-variable-anchor":["left","right","top","bottom"],"text-radial-offset":.5,"text-justify":"center","text-letter-spacing":.05},paint:{"text-halo-color":"#F7F7F7","text-halo-width":2,"text-color":"#232E3D"}},lineLayerLabelSpec:{id:"{prefix}-line-label",type:"symbol",source:"{prefix}-line-source",filter:["==","$type","Point"],layout:{"text-field":["concat",["to-string",["get","distance"]]," ",["get","unit"],["case",["==",["get","total"],0],"",["concat",`
(`,["to-string",["get","total"]]," ",["get","totalUnit"],")"]],["case",["all",["has","elevation"],[">",["get","elevation"],0]],["concat",`
Alt. `,["to-string",["floor",["get","elevation"]]]," m"],""]],"symbol-placement":"point","text-size":["interpolate",["linear"],["zoom"],5,10,10,12,13,14,14,16,18,18],"text-overlap":"always","text-variable-anchor":["left","right","top","bottom"],"text-radial-offset":.5,"text-justify":"center","text-letter-spacing":.05},paint:{"text-halo-color":"#F7F7F7","text-halo-width":2,"text-color":"#232E3D"}},routingLineLayerNodeSpec:{id:"{prefix}-line-node",type:"circle",source:"{prefix}-line-source",filter:["==","$type","Point"],layout:{},paint:{"circle-radius":3,"circle-color":"#FFFFFF","circle-stroke-color":"#000000","circle-stroke-width":1}},polygonLayerSpec:{id:"{prefix}-polygon-label",type:"symbol",source:"{prefix}-polygon-source",filter:["==","$type","Point"],layout:{"text-field":["concat",["to-string",["get","area"]]," ",["get","unit"]],"symbol-placement":"point","text-size":["interpolate",["linear"],["zoom"],5,10,10,12,13,14,14,16,18,18],"text-overlap":"always","text-letter-spacing":.05},paint:{"text-halo-color":"#F7F7F7","text-halo-width":2,"text-color":"#232E3D"}},computeElevation:!1,terrainSource:{url:"https://s3.amazonaws.com/elevation-tiles-prod/terrarium/{z}/{x}/{y}.png",encoding:"terrarium",tileSize:256,minzoom:5,maxzoom:15,tms:!1},distanceUnit:"kilometers",distancePrecision:2,forceDistanceUnit:"auto",areaUnit:"metric",areaPrecision:2,forceAreaUnit:"auto",elevationCacheConfig:{enabled:!0,maxSize:1e3,ttl:3600*1e3,precision:9},adapterOptions:{prefixId:"td-measure"}},z={modes:["render","linestring","point","select","delete-selection","delete","download","settings"],open:!1,modeOptions:{point:new jt({editable:!1,styles:{pointColor:"#FFFFFF",pointWidth:5,pointOutlineColor:"#666666",pointOutlineWidth:1}}),linestring:new Bt({editable:!1,styles:{lineStringColor:"#FF0000",lineStringWidth:2,closingPointColor:"#FF0000",closingPointWidth:3,closingPointOutlineColor:"#666666",closingPointOutlineWidth:1}}),select:new Gt({flags:{point:{feature:{draggable:!1}},linestring:{feature:{draggable:!1,rotateable:!1,scaleable:!1,coordinates:{midpoints:!1,draggable:!1,deletable:!1}}}}}),settings:new Q({modeName:"settings",styles:{}})},valhallaOptions:{url:"",routingOptions:{costingModel:"auto",distanceUnit:"kilometers"},isochroneOptions:{contourType:"time",costingModel:"auto",contours:[{time:3,distance:1,color:"#ff0000"},{time:5,distance:2,color:"#ffff00"},{time:10,distance:3,color:"#0000ff"},{time:15,distance:4,color:"#ff00ff"}]}},adapterOptions:{prefixId:"td-valhalla"},routingLineLayerNodeLabelSpec:{id:"{prefix}-routing-node-label",type:"symbol",source:"{prefix}-routing-source",filter:["==","$type","Point"],layout:{"text-field":["case",["all",["has","distance"],["has","distance_unit"],["has","time"]],["concat",["to-string",["get","text"]],`
`,["to-string",["/",["round",["*",["get","distance"],10]],10]],["to-string",["get","distance_unit"]],`
`,["to-string",["get","time"]],"min"],["all",["has","costingModel"]],["concat",["to-string",["get","text"]],`
(`,["to-string",["get","costingModel"]],")"],["concat",["to-string",["get","text"]]]],"symbol-placement":"point","text-size":["interpolate",["linear"],["zoom"],5,10,10,12,13,14,14,16,18,18],"text-overlap":"always","text-variable-anchor":["left","right","top","bottom"],"text-radial-offset":.5,"text-justify":"left","text-letter-spacing":.05},paint:{"text-halo-color":"#F7F7F7","text-halo-width":2,"text-color":"#232E3D"}},routingLineLayerNodeSpec:{id:"{prefix}-routing-node",type:"circle",source:"{prefix}-routing-source",filter:["==","$type","Point"],layout:{},paint:{"circle-radius":3,"circle-color":["case",["==",["get","text"],"Start"],"#0000FF",["==",["get","text"],"Goal"],"#FFFF00","#FFFFFF"],"circle-stroke-color":"#000000","circle-stroke-width":1}},isochronePolygonLayerSpec:{id:"{prefix}-isochrone-polygon",type:"fill",source:"{prefix}-isochrone-source",layout:{},paint:{"fill-color":["get","fillColor"],"fill-opacity":["get","fillOpacity"]}},isochroneLineLayerSpec:{id:"{prefix}-isochrone-line",type:"line",source:"{prefix}-isochrone-source",layout:{"line-join":"round","line-cap":"round"},paint:{"line-color":["get","fillColor"],"line-width":3}},isochroneLabelLayerSpec:{id:"{prefix}-isochrone-label",type:"symbol",source:"{prefix}-isochrone-source",layout:{"symbol-placement":"line","text-pitch-alignment":"viewport","text-field":["concat",["get","contour"]," ",["case",["==",["get","metric"],"time"],"min",["==",["get","metric"],"distance"],"km",""]],"text-size":12,"symbol-spacing":100,"text-max-angle":45},paint:{"text-color":"rgb(0, 0, 0)","text-halo-width":1,"text-halo-color":"rgb(255, 255, 255)"}}},je=()=>({render:new Q({modeName:"render",styles:{}}),point:new jt({editable:!0}),linestring:new Bt({editable:!0}),polygon:new Ce({editable:!0,validation:(t,e)=>{const i=e.updateType;return i==="finish"||i==="commit"?Zi(t):{valid:!0}}}),rectangle:new Pe,"angled-rectangle":new _e,circle:new ce,freehand:new he,"freehand-linestring":new We,sensor:new Te,sector:new Ne,select:new Gt({flags:{point:{feature:{draggable:!0}},polygon:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},linestring:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},freehand:{feature:{draggable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},"freehand-linestring":{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},circle:{feature:{draggable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},rectangle:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},"angled-rectangle":{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},sensor:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},sector:{feature:{draggable:!0,rotateable:!0,scaleable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}}}}),delete:new Q({modeName:"delete",styles:{}}),"delete-selection":new Q({modeName:"delete-selection",styles:{}}),download:new Q({modeName:"download",styles:{}})});var B=63710088e-1,po={centimeters:B*100,centimetres:B*100,degrees:360/(2*Math.PI),feet:B*3.28084,inches:B*39.37,kilometers:B/1e3,kilometres:B/1e3,meters:B,metres:B,miles:B/1609.344,millimeters:B*1e3,millimetres:B*1e3,nauticalmiles:B/1852,radians:1,yards:B*1.0936};function go(r,t,e={}){const i={type:"Feature"};return(e.id===0||e.id)&&(i.id=e.id),e.bbox&&(i.bbox=e.bbox),i.properties=t||{},i.geometry=r,i}function yo(r,t,e={}){if(!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!Ae(r[0])||!Ae(r[1]))throw new Error("coordinates must contain numbers");return go({type:"Point",coordinates:r},t,e)}function fo(r,t="kilometers"){const e=po[t];if(!e)throw new Error(t+" units is invalid");return r*e}function xt(r){return r%360*Math.PI/180}function Ae(r){return!isNaN(r)&&r!==null&&!Array.isArray(r)}function Re(r,t,e){if(r!==null)for(var i,o,s,n,a,l,d,c=0,h=0,u,p=r.type,g=p==="FeatureCollection",y=p==="Feature",m=g?r.features.length:1,v=0;v<m;v++){d=g?r.features[v].geometry:y?r.geometry:r,u=d?d.type==="GeometryCollection":!1,a=u?d.geometries.length:1;for(var C=0;C<a;C++){var f=0,P=0;if(n=u?d.geometries[C]:d,n!==null){l=n.coordinates;var I=n.type;switch(c=I==="Polygon"||I==="MultiPolygon"?1:0,I){case null:break;case"Point":if(t(l,h,v,f,P)===!1)return!1;h++,f++;break;case"LineString":case"MultiPoint":for(i=0;i<l.length;i++){if(t(l[i],h,v,f,P)===!1)return!1;h++,I==="MultiPoint"&&f++}I==="LineString"&&f++;break;case"Polygon":case"MultiLineString":for(i=0;i<l.length;i++){for(o=0;o<l[i].length-c;o++){if(t(l[i][o],h,v,f,P)===!1)return!1;h++}I==="MultiLineString"&&f++,I==="Polygon"&&P++}I==="Polygon"&&f++;break;case"MultiPolygon":for(i=0;i<l.length;i++){for(P=0,o=0;o<l[i].length;o++){for(s=0;s<l[i][o].length-c;s++){if(t(l[i][o][s],h,v,f,P)===!1)return!1;h++}P++}f++}break;case"GeometryCollection":for(i=0;i<n.geometries.length;i++)if(Re(n.geometries[i],t)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function mo(r,t){var e,i,o,s,n,a,l,d,c,h,u=0,p=r.type==="FeatureCollection",g=r.type==="Feature",y=p?r.features.length:1;for(e=0;e<y;e++){for(a=p?r.features[e].geometry:g?r.geometry:r,d=p?r.features[e].properties:g?r.properties:{},c=p?r.features[e].bbox:g?r.bbox:void 0,h=p?r.features[e].id:g?r.id:void 0,l=a?a.type==="GeometryCollection":!1,n=l?a.geometries.length:1,o=0;o<n;o++){if(s=l?a.geometries[o]:a,s===null){if(t(null,u,d,c,h)===!1)return!1;continue}switch(s.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(t(s,u,d,c,h)===!1)return!1;break}case"GeometryCollection":{for(i=0;i<s.geometries.length;i++)if(t(s.geometries[i],u,d,c,h)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}u++}}function vo(r,t,e){var i=e;return mo(r,function(o,s,n,a,l){s===0&&e===void 0?i=o:i=t(i,o,s,n,a,l)}),i}function Co(r){return vo(r,(t,e)=>t+Po(e),0)}function Po(r){let t=0,e;switch(r.type){case"Polygon":return Ue(r.coordinates);case"MultiPolygon":for(e=0;e<r.coordinates.length;e++)t+=Ue(r.coordinates[e]);return t;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}function Ue(r){let t=0;if(r&&r.length>0){t+=Math.abs(Ge(r[0]));for(let e=1;e<r.length;e++)t-=Math.abs(Ge(r[e]))}return t}var So=B*B/2,Yt=Math.PI/180;function Ge(r){const t=r.length-1;if(t<=2)return 0;let e=0,i=0;for(;i<t;){const o=r[i],s=r[i+1===t?0:i+1],n=r[i+2>=t?(i+2)%t:i+2],a=o[0]*Yt,l=s[1]*Yt,d=n[0]*Yt;e+=(d-a)*Math.sin(l),i++}return e*So}var Io=Co;const Ve=(r,t,e="auto")=>{const i=["m2","km2","a","ha"],o=["ft2","yd2","acre","mi2"];let s=e;if(e!=="auto"){const n=i.includes(e),a=o.includes(e);(t==="metric"&&!n||t==="imperial"&&!a)&&(s="auto")}return t==="metric"?s!=="auto"?pt(r,s):r>=1e6?pt(r,"km2"):r>=1e4?pt(r,"ha"):r>=100?pt(r,"a"):pt(r,"m2"):s!=="auto"?gt(r,s):r>=258998811e-2?gt(r,"mi2"):r>=4046.856?gt(r,"acre"):r>=.83612736?gt(r,"yd2"):gt(r,"ft2")},pt=(r,t)=>{let e=r,i="m²";switch(t){case"m2":e=r,i="m²";break;case"a":e=r/100,i="a";break;case"ha":e=r/1e4,i="ha";break;case"km2":e=r/1e6,i="km²";break}return{area:e,unit:i}},gt=(r,t)=>{let e=r/258998811e-2,i="m²";switch(t){case"ft2":e=r/.09290304,i="ft²";break;case"yd2":e=r/.83612736,i="yd²";break;case"acre":e=r/4046.856,i="acre";break;case"mi2":e=r/258998811e-2,i="mi²";break}return{area:e,unit:i}},Kt=(r,t,e,i)=>{if(r.geometry.type!=="Polygon")return r;const o=Io(r.geometry),s=Ve(o,t,i);return s.area=parseFloat(s.area.toFixed(e)),r.properties.area=s.area,r.properties.unit=s.unit,r};function ze(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if(r.type==="Feature"&&r.geometry!==null&&r.geometry.type==="Point")return[...r.geometry.coordinates];if(r.type==="Point")return[...r.coordinates]}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return[...r];throw new Error("coord must be GeoJSON Point or an Array of numbers")}function Oo(r,t,e={}){var i=ze(r),o=ze(t),s=xt(o[1]-i[1]),n=xt(o[0]-i[0]),a=xt(i[1]),l=xt(o[1]),d=Math.pow(Math.sin(s/2),2)+Math.pow(Math.sin(n/2),2)*Math.cos(a)*Math.cos(l);return fo(2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d)),e.units)}var xo=Oo;const bt=(r,t="kilometers",e="auto")=>{const i=["cm","m","km"],o=["in","ft","mi"];let s=e;if(e!=="auto"){const a=i.includes(e),l=o.includes(e);(t==="kilometers"&&!a||t==="miles"&&!l)&&(s="auto")}let n={distance:r,unit:"km"};return t==="kilometers"?n=Et(r,s):t==="degrees"?n.unit="°":t==="miles"?n=wt(r,s):t==="radians"&&(n.unit="rad"),n},Et=(r,t)=>{let e={distance:r,unit:"km"};switch(t){case"km":e.distance=r,e.unit="km";break;case"m":e.distance=r*1e3,e.unit="m";break;case"cm":e.distance=r*1e5,e.unit="cm";break;case"auto":r>=1?e=Et(r,"km"):r*1e3>=1?e=Et(r,"m"):e=Et(r,"cm");break;default:e.distance=r,e.unit="km";break}return e},wt=(r,t)=>{let e={distance:r,unit:"mi"};switch(t){case"mi":e.distance=r,e.unit="mi";break;case"ft":e.distance=r*5280,e.unit="ft";break;case"in":e.distance=r*63360,e.unit="in";break;case"auto":r>=1?e=wt(r,"mi"):r*5280>=1?e=wt(r,"ft"):e=wt(r,"in");break;default:e.distance=r,e.unit="mi";break}return e},Xt=(r,t,e,i,o,s,n)=>{if(r.geometry.type!=="LineString")return r;const a=r.geometry.coordinates;let l=0;const d=[];for(let h=0;h<a.length-1;h++){const u=a[h],p=a[h+1],g=xo(u,p,{units:t});l+=g;const y=JSON.parse(JSON.stringify(r));if(y.id=`${y.id}-${h}`,y.geometry.coordinates=[u,p],y.properties.originalId=r.id,y.properties.distance=g,y.properties.total=l,s===!0&&n===void 0){const m=o?.queryTerrainElevation(u);m&&(y.properties.elevation_start=m);const v=o?.queryTerrainElevation(p);v&&(y.properties.elevation_end=v)}d.push(y)}r.properties.distance=d[d.length-1].properties.total,r.properties.segments=JSON.parse(JSON.stringify(d));const c=bt(r.properties.distance,t,i);return r.properties.distance=c.distance,r.properties.unit=c.unit,r.properties.segments.forEach(h=>{const u=bt(h.properties.distance,t,i);h.properties.distance=u.distance,h.properties.unit=u.unit;const p=bt(h.properties.total,t,i);h.properties.total=p.distance,h.properties.totalUnit=p.unit}),r.properties.distance=parseFloat(r.properties.distance.toFixed(e)),r.properties.segments.forEach(h=>{h.properties.distance=parseFloat(h.properties.distance.toFixed(e)),h.properties.total=parseFloat(h.properties.total.toFixed(e))}),r},Ht=r=>r.charAt(0).toUpperCase()+r.slice(1),J=["{prefix}-point","{prefix}-point-lower","{prefix}-linestring","{prefix}-polygon","{prefix}-polygon-outline"],bo=[...J,ot.polygonLayerSpec?.source,ot.lineLayerLabelSpec?.source,ot.pointLayerLabelSpec?.source],Eo=[...J,z.routingLineLayerNodeLabelSpec?.source,z.routingLineLayerNodeSpec?.source,z.isochronePolygonLayerSpec?.source,z.isochroneLineLayerSpec?.source,z.isochroneLabelLayerSpec?.source],Lt=(r,t,e=J,i="td")=>{e=e.map(s=>s.replace("{prefix}",i));const o=JSON.parse(JSON.stringify(r));return t&&(t.onlyTerraDrawLayers===!0?(o.layers=o.layers.filter(s=>"source"in s&&e.includes(s.source)),Object.keys(o.sources).forEach(s=>{e.includes(s)||delete o.sources[s]})):t.excludeTerraDrawLayers===!0&&(o.layers=o.layers.filter(s=>"source"in s&&!e.includes(s.source)||s.type==="background"),Object.keys(o.sources).forEach(s=>{e.includes(s)&&delete o.sources[s]}))),o},Jt=(r,t=250)=>{let e;return(...i)=>{clearTimeout(e),e=setTimeout(()=>r(...i),t)}};class qt{cache=new Map;maxSize;ttl;constructor(t=1e3,e){this.maxSize=t,this.ttl=e}get(t){const e=this.cache.get(t);if(e){if(e.expiry&&Date.now()>e.expiry){this.cache.delete(t);return}return e.value}}set(t,e){if(this.maxSize===0)return;if(this.cache.size>=this.maxSize){const o=this.cache.keys().next().value;o&&this.cache.delete(o)}const i=this.ttl?Date.now()+this.ttl:void 0;this.cache.set(t,{value:e,expiry:i})}has(t){return this.get(t)!==void 0}delete(t){return this.cache.delete(t)}clear(){this.cache.clear()}get size(){return this.cache.size}cleanupExpired(){if(!this.ttl)return;const t=Date.now();for(const[e,i]of this.cache.entries())i.expiry&&t>i.expiry&&this.cache.delete(e)}getStats(){return{size:this.size,maxSize:this.maxSize,ttl:this.ttl}}}class $e{className;dialog;title;constructor(t,e){this.className=t,this.title=e}create(t,e){const i=document.getElementsByClassName(this.className);i.length>0&&Array.from(i).forEach(l=>{l.remove()}),this.dialog=document.createElement("dialog"),this.dialog.classList.add(this.className);const o=document.createElement("div");o.classList.add("dialog-header");const s=document.createElement("h3");s.textContent=this.title,s.classList.add("dialog-title"),o.appendChild(s);const n=document.createElement("button");n.type="button",n.classList.add("close-button"),n.innerHTML="×",n.setAttribute("aria-label","Close dialog"),n.addEventListener("click",()=>{this.close()}),o.appendChild(n),this.dialog.appendChild(o);const a=document.createElement("div");a.classList.add("content"),this.dialog.appendChild(e(a)),this.dialog.addEventListener("click",l=>{const d=l.target;if(!d)return;const c=d.getBoundingClientRect();(c.left>l.clientX||c.right<l.clientX||c.top>l.clientY||c.bottom<l.clientY)&&this.close()}),t.appendChild(this.dialog)}open(){this.dialog?.showModal()}close(){this.dialog?.close()}createSegmentButtons(t,e,i=()=>{}){const o=document.createElement("div");return o.classList.add("segment-buttons"),t.forEach(s=>{const n=document.createElement("button");n.type="button",n.classList.add("segment-button"),n.value=s.value,n.textContent=s.label,s.value===e&&n.classList.add("active"),n.addEventListener("click",()=>{o.querySelectorAll(".segment-button").forEach(a=>a.classList.remove("active")),n.classList.add("active"),i(n.value)}),o.appendChild(n)}),o}}const Zt=(r,t,e,i)=>{if(r.geometry.type!=="Point")return r;const o=r.geometry.coordinates;if(e===!0&&i===void 0){const s=t?.queryTerrainElevation(o);s&&(r.properties.elevation=s)}return r};var wo=Object.defineProperty,Lo=(r,t,e)=>t in r?wo(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,yt=(r,t,e)=>Lo(r,typeof t!="symbol"?t+"":t,e),Mt=2*Math.PI*6378137/2;function Mo(r){return r=r||256,2*Math.PI*6378137/r}function Fo(r,t,e={enable:!0,decimal:1}){r=Qt(r);var i=r[0],o=r[1],s=i*Mt/180,n=Math.log(Math.tan((90+o)*Math.PI/360))/(Math.PI/180);return n=n*Mt/180,e.enable&&(s=Number(s.toFixed(e.decimal)),n=Number(n.toFixed(e.decimal))),[s,n]}function Do(r,t,e){var i=r[0],o=r[1],s=Bo(t,e),n=(i+Mt)/s,a=(o+Mt)/s;return[n,a,t]}function Ye(r,t,e){r=Qt(r);var i=Fo(r),o=Do(i,t);return ko(o)}function _o(r,t,e){if(r=Qt(r),t===0)return[0,0,0];var i=Ye(r,t);return No(i)}function ko(r,t,e){t=t||256;var i=r[0],o=r[1],s=r[2];if(s===0)return[0,0,0];Ke(s);var n=Math.ceil(i/t)-1,a=Math.ceil(o/t)-1;return n<0&&(n=0),a<0&&(a=0),[n,a,s]}function No(r,t){To(r);var e=r[0],i=r[1],o=r[2];if(o===0)return[0,0,0];var s=e,n=Math.pow(2,o)-1-i;return[s,n,o]}function To(r,t){var e=r[0],i=r[1],o=r[2];if(o==null)throw new Error("<zoom> is required");if(e==null)throw new Error("<x> is required");if(i==null)throw new Error("<y> is required");return o=Ke(o),r=Wo(r),r}function Wo(r){var t=r[0],e=r[1],i=r[2],o=Math.pow(2,i);return t=t%o,t<0&&(t=t+o),[t,e,i]}function Ke(r){if(r===!1)return r;if(r==null)throw new Error("<zoom> is required");if(r<0)throw new Error("<zoom> cannot be less than 0");if(r>32)throw new Error("<zoom> cannot be greater than 32");return r}function Qt(r,t){var e=Ao(r[0]),i=jo(r[1]);return i>85&&(i=85),i<-85&&(i=-85),[e,i]}function Bo(r,t){return Mo(t)/Math.pow(2,r)}function jo(r){if(r==null)throw new Error("lat is required");return(r>90||r<-90)&&(r=r%180,r>90&&(r=-180+r),r<-90&&(r=180+r),r===0&&(r=0)),r}function Ao(r){if(r==null)throw new Error("lng is required");return(r>180||r<-180)&&(r=r%360,r>180&&(r=-360+r),r<-180&&(r=360+r),r===0&&(r=0)),r}class Xe{constructor(t,e,i,o,s){yt(this,"url"),yt(this,"tileSize"),yt(this,"tms"),yt(this,"minzoom"),yt(this,"maxzoom"),this.url=t,this.tileSize=e,this.tms=s,this.minzoom=i,this.maxzoom=o,this.tms=s}getValue(t,e){return new Promise((i,o)=>{const s=t[0],n=t[1];let a=e;e>this.maxzoom?a=this.maxzoom:e<this.minzoom&&(a=this.minzoom);const l=this.tms?Ye([s,n],a):_o([s,n],a),d=this.url.replace(/{x}/g,l[0].toString()).replace(/{y}/g,l[1].toString()).replace(/{z}/g,l[2].toString());let c=this.getUrlExtension(d);switch(c||(c="png"),c){case"png":case"webp":this.getValueFromRaster(d,l,s,n).then(h=>{i(h)});break;default:o(new Error(`Invalid file extension: ${c}`));break}})}async getValueFromRaster(t,e,i,o){const s=await fetch(t);if(!s.ok){if(s.status===404)return;throw new Error(`Failed to fetch tile: ${s.statusText}`)}const n=await s.blob();return new Promise((a,l)=>{const d=new Image;d.onload=()=>{const c=document.createElement("canvas");c.width=d.width,c.height=d.height;const h=c.getContext("2d");if(!h)return l(new Error("Failed to create canvas context"));h.drawImage(d,0,0);const u=h.getImageData(0,0,d.width,d.height).data,p=this.pixels2rgba(new Uint8Array(u),e,i,o),g=this.calc(p[0],p[1],p[2],p[3]);a(g)},d.onerror=()=>a(void 0),d.src=URL.createObjectURL(n)})}pixels2rgba(t,e,i,o){const s=[];for(let d=0;d<t.length;d+=4){const c=t[d],h=t[d+1],u=t[d+2],p=t[d+3],g=[c,h,u,p];s.push(g)}const n=this.tileToBBOX(e),a=this.getPixelPosition(i,o,n),l=a[0]+a[1]*this.tileSize;return s[l]}getPixelPosition(t,e,i){const o=this.tileSize,s=this.tileSize,n=i[2]-i[0],a=i[3]-i[1],l=(t-i[0])/n,d=(e-i[1])/a,c=Math.floor(o*l),h=Math.floor(s*(1-d));return[c,h]}getUrlExtension(t){let e=t.split(/[#?]/)[0].split(".").pop();return e&&(e=e.trim()),e}tileToBBOX(t){const e=this.tile2lon(t[0]+1,t[2]),i=this.tile2lon(t[0],t[2]),o=this.tile2lat(t[1]+1,t[2]),s=this.tile2lat(t[1],t[2]);return[i,o,e,s]}tile2lon(t,e){return t/Math.pow(2,e)*360-180}tile2lat(t,e){const i=180/Math.PI,o=Math.PI-2*Math.PI*t/Math.pow(2,e);return i*Math.atan(.5*(Math.exp(o)-Math.exp(-o)))}}class Ro extends Xe{constructor(t,e,i=5,o=15,s=!1){super(t,e,i,o,s)}async getElevation(t,e){return await this.getValue(t,e)}calc(t,e,i){return-1e4+(t*256*256+e*256+i)*.1}}class Uo extends Xe{constructor(t,e,i=5,o=15,s=!1){super(t,e,i,o,s)}async getElevation(t,e){return await this.getValue(t,e)}calc(t,e,i){const o=t*256+e+i/256-32768;return parseInt(o.toFixed(0))}}const Go=(r,t=8)=>{const[e,i]=r,o=Math.pow(10,t),s=Math.round(e*o)/o,n=Math.round(i*o)/o;return`${s},${n}`},te=async(r,t,e,i)=>{const o=[],s={enabled:!0,maxSize:1e3,ttl:36e5,precision:6,...e};let n;s.enabled&&(n=i||new qt(s.maxSize,s.ttl));let a,l=15;if(t){const d=t.url,c=t.encoding??"mapbox",h=t.tileSize??512,u=t.minzoom??5;l=t.maxzoom??15;const p=t.tms??!1;a=c==="mapbox"?new Ro(d,h,u,l,p):new Uo(d,h,u,l,p)}for(const d of r)o.push(new Promise(c=>{d.geometry.type!=="Point"&&c(d);const h=d.geometry.coordinates,u=Go(h,s.precision);if(n){const p=n.get(u);if(p!==void 0){isNaN(p)||(d.properties.elevation=p),c(d);return}}a?a.getElevation(d.geometry.coordinates,l).then(p=>{p!=null&&typeof p=="number"&&(n&&n.set(u,p),d.properties.elevation=p),c(d)}).catch(()=>{n&&n.has(u)&&n.delete(u),c(d)}):c(d)}));return await Promise.all(o)},Vo=(r,t=9)=>{function e(o){return[Number(o[0].toFixed(t)),Number(o[1].toFixed(t))]}function i(o){const s=o.type;let n=o.coordinates;switch(s){case"Point":n=e(n);break;case"LineString":case"MultiPoint":n=n.map(e);break;case"Polygon":case"MultiLineString":n=n.map(a=>a.map(e));break;case"MultiPolygon":n=n.map(a=>a.map(l=>l.map(e)));break}return{...o,coordinates:n}}return r.map(o=>({...o,geometry:i(o.geometry)}))},He=[{value:"time",label:"Time"},{value:"distance",label:"Distance"}];class Je{url;constructor(t){this.url=t}async calcIsochrone(t,e,i,o,s){const n=JSON.parse(JSON.stringify(s));n.forEach(h=>{i==="time"?delete h.distance:delete h.time});const a={locations:[{lat:e,lon:t}],costing:o,contours:n.map(h=>(h.color=h.color.replace("#",""),h)),polygons:!0},l=`${this.url}/isochrone?json=${JSON.stringify(a)}`;return await(await fetch(l)).json()}}const Ft=[{value:"pedestrian",label:"Pedestrian"},{value:"bicycle",label:"Bicycle"},{value:"auto",label:"Car"}],qe=[{value:"kilometers",label:"km"},{value:"miles",label:"mile"}];class Ze{tripData=[];getTripData(){return this.tripData}url;tripSummary;getTripSummary(){return this.tripSummary}constructor(t){this.url=t}clearFeatures(){this.tripData=[],this.tripSummary=void 0}async calcRoute(t,e,i){if(this.tripData=t,!this.tripData||this.tripData&&this.tripData.length<2){this.tripSummary=void 0;return}const o=`${this.url}/route`,s={locations:this.tripData.map(f=>({lon:f.lng,lat:f.lat})),costing:e,costing_options:{auto:{country_crossing_penalty:2e3}},units:i,id:"my_work_route"},n=`${o}?json=${JSON.stringify(s)}`,l=await(await fetch(n)).json();if("error"in l)throw this.tripData.pop(),new Error(`${l.status} (${l.status_code}): ${l.error} (${l.error_code})`);const d=l.trip.legs.map(f=>this.decodeShape(f.shape));let c=[];d.forEach(f=>{c=[...c,...f]}),this.tripSummary=l.trip.summary,this.tripSummary.length=Number(this.tripSummary.length.toFixed(2)),this.tripSummary.time=Number((this.tripSummary.time/60).toFixed());const h=[];let u=0,p=0;const g=[],y=this.geoPoint(this.tripData.map(f=>[f.lng,f.lat]));l.trip.legs.forEach((f,P)=>{const I=this.decodeShape(f.shape);h.push(...I),u+=Number(f.summary.length.toFixed(2)),p+=Number((f.summary.time/60).toFixed()),g.push(...f.maneuvers);const w=y.features[P+1];w.properties={...w.properties,distance:u,distance_unit:i==="kilometers"?"km":"mi",time:p,maneuvers:f.maneuvers}});const m=Ft.find(f=>f.value===e)?.label,v=this.geoLineString(h,{costingModel:m,distance:u,distance_unit:i==="kilometers"?"km":"mi",time:p,maneuvers:g}),C=y.features[0];return C.properties={...C.properties,costingModel:m},{feature:v,pointFeatures:y}}geoLineString(t=[],e={}){return{type:"Feature",properties:e,geometry:{type:"LineString",coordinates:t}}}geoPoint(t=[]){return{type:"FeatureCollection",features:t.map((e,i)=>{let o=(i+1).toString();return i===0?o="Start":i===t.length-1?o="Goal":o=`No.${o}`,{type:"Feature",id:`node-${i}`,properties:{sequence:i,text:o},geometry:{type:"Point",coordinates:e}}})}}decodeShape(t,e=6){let i=0,o=0,s=0,n=[],a=0,l=0,d=null,c,h,u=Math.pow(10,e||6);for(;i<t.length;){d=null,a=0,l=0;do d=t.charCodeAt(i++)-63,l|=(d&31)<<a,a+=5;while(d>=32);c=l&1?~(l>>1):l>>1,a=l=0;do d=t.charCodeAt(i++)-63,l|=(d&31)<<a,a+=5;while(d>=32);h=l&1?~(l>>1):l>>1,o+=c,s+=h,n.push([s/u,o/u])}return n}}class ee{controlContainer;map;modeButtons={};_isExpanded=!1;_cssPrefix="";get isExpanded(){return this._isExpanded}get cssPrefix(){return this._cssPrefix}set isExpanded(t){this._isExpanded=t;const e=document.getElementsByClassName(`maplibregl-terradraw-${this.cssPrefix}add-control`);for(let o=0;o<e.length;o++){const s=e.item(o);s&&(this.isExpanded?s.classList.remove("hidden"):s.classList.add("hidden"))}const i=document.getElementsByClassName(`maplibregl-terradraw-${this.cssPrefix}render-button`);i&&i.length>0&&(this.isExpanded?i.item(0)?.classList.add("enabled"):(i.item(0)?.classList.remove("enabled"),this.resetActiveMode())),this.toggleDeleteSelectionButton(),this.toggleButtonsWhenNoFeature(),this.isExpanded?this.dispatchEvent("expanded"):this.dispatchEvent("collapsed")}terradraw;options=Be;events={};defaultMode="render";constructor(t){this.modeButtons={},t&&(this.options=Object.assign(this.options,t));const e=this.options.adapterOptions?.prefixId??"td";this.options.adapterOptions||(this.options.adapterOptions={}),this.options.adapterOptions?.prefixId||(this.options.adapterOptions.prefixId=e)}getDefaultPosition(){return"top-right"}onAdd(t){if(this.options&&this.options.modes&&this.options.modes.length===0)throw new Error("At least a mode must be enabled.");this.map=t;const e=je(),i=[];return this.options?.modes?.forEach(o=>{if(this.options.modeOptions&&this.options.modeOptions[o]){const s=this.options.modeOptions[o];if(o==="select"){const n=e[o];if(n){const a=n.flags;Object.keys(a).forEach(l=>{s.flags[l]||(s.flags[l]=a[l])})}}i.push(s)}else e[o]&&i.push(e[o])}),i.forEach(o=>{o.state!=="unregistered"&&(o._state="unregistered")}),this.options?.modes?.includes("render")||(i.push(new Q({modeName:"default",styles:{}})),this.defaultMode="default"),this.isExpanded=this.options.open===!0,this.terradraw=new lo({adapter:new co({map:t,...this.options.adapterOptions}),modes:i}),this.map?.loaded()?this.terradraw.start():this.map?.once("load",()=>{this.terradraw?.start()}),this.controlContainer=document.createElement("div"),this.controlContainer.classList.add("maplibregl-ctrl"),this.controlContainer.classList.add("maplibregl-ctrl-group"),i.forEach(o=>{o.mode!=="default"&&this.addTerradrawButton(o.mode)}),Object.values(this.modeButtons).forEach(o=>{this.controlContainer?.appendChild(o)}),this.terradraw?.on("change",this.toggleButtonsWhenNoFeature.bind(this)),this.toggleButtonsWhenNoFeature(),this.controlContainer}onRemove(){!this.controlContainer||!this.controlContainer.parentNode||!this.map||(this.deactivate(),this.modeButtons={},this.terradraw=void 0,this.map=void 0,this.controlContainer.parentNode.removeChild(this.controlContainer))}on(t,e){this.events[t]?this.events[t].push(e):this.events[t]=[e]}off(t,e){if(!this.events[t])return;const i=this.events[t].findIndex(o=>o===e);i!==-1&&this.events[t].splice(i,1)}dispatchEvent(t,e){this.events[t]&&this.events[t].forEach(i=>{const s=this.terradraw?.getSnapshot()?.filter(n=>n.properties.selected===!0);i({feature:s,mode:this.terradraw?.getMode(),...e})})}activate(){this.terradraw&&(this.terradraw.enabled||this.terradraw.start())}deactivate(){this.terradraw&&this.terradraw.enabled&&(this.resetActiveMode(),this.dispatchEvent("mode-changed"),this.terradraw.stop())}getTerraDrawInstance(){return this.terradraw}toggleEditor(){this.terradraw&&(this.isExpanded=!this.isExpanded)}resetActiveMode(){if(!this.terradraw)return;this.terradraw.enabled||this.terradraw.start();const t=document.getElementsByClassName(`maplibregl-terradraw-${this.cssPrefix}add-control`);for(let e=0;e<t.length;e++){const i=t.item(e);i&&i.classList.remove("active")}this.terradraw?.setMode(this.defaultMode)}addTerradrawButton(t){const e=document.createElement("button");e.type="button",this.modeButtons[t]=e,t==="render"?(e.classList.add(`maplibregl-terradraw-${this.cssPrefix}${t}-button`),this.isExpanded&&e.classList.add("enabled"),e.type="button",e.title=Ht("expand or collapse drawing tool"),e.addEventListener("click",this.toggleEditor.bind(this))):(e.classList.add(`maplibregl-terradraw-${this.cssPrefix}add-control`),this.isExpanded||e.classList.add("hidden"),e.title=Ht(t.replace(/-/g," ")),t==="delete"?(e.classList.add(`maplibregl-terradraw-${this.cssPrefix}${t}-button`),e.addEventListener("click",()=>{this.terradraw&&this.terradraw.enabled&&(this.terradraw.clear(),this.deactivate(),this.toggleDeleteSelectionButton(),this.toggleButtonsWhenNoFeature(),this.dispatchEvent("feature-deleted"))})):t==="delete-selection"?(e.classList.add(`maplibregl-terradraw-${this.cssPrefix}${t}-button`),e.classList.add("hidden-delete-selection"),e.addEventListener("click",()=>{if(!this.terradraw||!this.terradraw.enabled)return;const o=(this.terradraw?.getSnapshot()).filter(s=>s.properties.selected===!0);if(o.length>0){const s=o.map(n=>n.id);this.terradraw.removeFeatures(s);for(const n of s)this.terradraw.deselectFeature(n);this.dispatchEvent("feature-deleted",{deletedIds:s})}this.toggleDeleteSelectionButton(),this.toggleButtonsWhenNoFeature()})):t==="download"?(e.classList.add(`maplibregl-terradraw-${this.cssPrefix}${t}-button`),e.addEventListener("click",this.handleDownload.bind(this))):(e.classList.add(`maplibregl-terradraw-${this.cssPrefix}add-${t}-button`),e.addEventListener("click",()=>{if(!this.terradraw)return;const i=e.classList.contains("active");this.activate(),this.resetActiveMode(),i||(this.terradraw.setMode(t),e.classList.add("active")),this.dispatchEvent("mode-changed"),this.toggleDeleteSelectionButton(),this.toggleButtonsWhenNoFeature()})))}getFeatures(t=!1){if(!this.terradraw)return;const o={type:"FeatureCollection",features:(this.terradraw?.getSnapshot()).filter(s=>s.properties.mode!=="select")};return t!==!0||(o.features=o.features.filter(s=>s.properties.selected===!0)),o}cleanStyle(t,e){return Lt(t,e,J,this.options.adapterOptions?.prefixId)}handleDownload(){const t=this.getFeatures(!1),e="data:application/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(t)),i=document.createElement("a");i.setAttribute("href",e),i.setAttribute("download","data.geojson"),document.body.appendChild(i),i.click(),i.remove()}toggleButtonsWhenNoFeature(){if(!this.controlContainer)return;const t=this.getFeatures(!1),e=!!(t&&t.features.length>0),i=[`maplibregl-terradraw-${this.cssPrefix}add-select-button`,`maplibregl-terradraw-${this.cssPrefix}download-button`,`maplibregl-terradraw-${this.cssPrefix}delete-button`];for(const o of i){const s=this.controlContainer.getElementsByClassName(o);for(let n=0;n<s.length;n++){const a=s.item(n);a&&(a.disabled=!e)}}}toggleDeleteSelectionButton(){const t=this.terradraw?.enabled||!1,e=this.terradraw?.getMode(),i=this.getFeatures(!1),o=i&&i.features.length>0,s=o&&t&&e==="select",n=document.getElementsByClassName(`maplibregl-terradraw-${this.cssPrefix}delete-selection-button`);for(let a=0;a<n.length;a++){const l=n.item(a);l&&(s?l.classList.remove("hidden-delete-selection"):l.classList.add("hidden-delete-selection"))}if(!o){const a=document.getElementsByClassName(`maplibregl-terradraw-${this.cssPrefix}add-select-button`);for(let l=0;l<a.length;l++){const d=a.item(l);d&&d.classList.remove("active")}}}clearExtendedFeatures(t,e=void 0){if(this.map)for(const i of t){const o=this.map.getStyle().sources[i];o&&typeof o.data!="string"&&o.data.type==="FeatureCollection"&&(e===void 0?o.data.features=[]:o.data.features=o.data.features.filter(s=>s.properties?.originalId?!e.includes(s.properties.originalId):!e.includes(s.id)),this.map.getSource(i)?.setData(o.data))}}}function zo(r,t={}){let e=0,i=0,o=0;return Re(r,function(s){e+=s[0],i+=s[1],o++}),yo([e/o,i/o],t.properties)}class $o extends ee{measureOptions;elevationCache;get distanceUnit(){return this.measureOptions.distanceUnit??"kilometers"}set distanceUnit(t){const e=this.measureOptions.distanceUnit===t;this.measureOptions.distanceUnit=t,e||this.recalc()}get distancePrecision(){let t=2;return this.measureOptions.distanceUnit==="degrees"&&(t=6),this.measureOptions.distancePrecision??t}set distancePrecision(t){const e=this.measureOptions.distancePrecision===t;this.measureOptions.distancePrecision=t,e||this.recalc()}get forceDistanceUnit(){return this.measureOptions.forceDistanceUnit??"auto"}set forceDistanceUnit(t){const e=this.measureOptions.forceDistanceUnit===t;this.measureOptions.forceDistanceUnit=t,e||this.recalc()}get areaUnit(){return this.measureOptions.areaUnit??"metric"}set areaUnit(t){const e=this.measureOptions.areaUnit===t;this.measureOptions.areaUnit=t,e||this.recalc()}get areaPrecision(){return this.measureOptions.areaPrecision??2}set areaPrecision(t){const e=this.measureOptions.areaPrecision===t;this.measureOptions.areaPrecision=t,e||this.recalc()}get forceAreaUnit(){return this.measureOptions.forceAreaUnit??"auto"}set forceAreaUnit(t){const e=this.measureOptions.forceAreaUnit===t;this.measureOptions.forceAreaUnit=t,e||this.recalc()}get computeElevation(){return this.measureOptions.computeElevation??!1}set computeElevation(t){const e=this.measureOptions.computeElevation===t;this.measureOptions.computeElevation=t,e||this.recalc()}get fontGlyphs(){const e=[this.measureOptions.pointLayerLabelSpec,this.measureOptions.lineLayerLabelSpec,this.measureOptions.polygonLayerSpec][0];return e&&e.layout&&e.layout["text-font"]}set fontGlyphs(t){const e=[this.measureOptions.pointLayerLabelSpec,this.measureOptions.lineLayerLabelSpec,this.measureOptions.polygonLayerSpec];for(const i of e)i&&i.layout&&(i.layout["text-font"]=t),this.map&&i&&this.map.getLayer(i.id)&&this.map.setLayoutProperty(i.id,"text-font",t)}constructor(t){let e={...JSON.parse(JSON.stringify(ot)),modeOptions:{...ot.modeOptions}};t&&(e=Object.assign(e,t));const i=e.adapterOptions?.prefixId??"td-measure";e.adapterOptions&&!e.adapterOptions?.prefixId&&(e.adapterOptions.prefixId=i),e.pointLayerLabelSpec.id=e.pointLayerLabelSpec?.id.replace("{prefix}",i),e.pointLayerLabelSpec.source=e.pointLayerLabelSpec?.source.replace("{prefix}",i),e.routingLineLayerNodeSpec.id=e.routingLineLayerNodeSpec?.id.replace("{prefix}",i),e.routingLineLayerNodeSpec.source=e.routingLineLayerNodeSpec?.source.replace("{prefix}",i),e.lineLayerLabelSpec.id=e.lineLayerLabelSpec?.id.replace("{prefix}",i),e.lineLayerLabelSpec.source=e.lineLayerLabelSpec?.source.replace("{prefix}",i),e.polygonLayerSpec.id=e.polygonLayerSpec?.id.replace("{prefix}",i),e.polygonLayerSpec.source=e.polygonLayerSpec?.source.replace("{prefix}",i),super({modes:e.modes,open:e.open,modeOptions:e.modeOptions,adapterOptions:e.adapterOptions}),this._cssPrefix="measure-",this.measureOptions=e,this.measureOptions.elevationCacheConfig&&this.measureOptions.elevationCacheConfig?.enabled&&(this.elevationCache=new qt(this.measureOptions.elevationCacheConfig.maxSize,this.measureOptions.elevationCacheConfig.ttl))}onAdd(t){return this.controlContainer=super.onAdd(t),this.controlContainer}onRemove(){this.unregisterMesureControl(),super.onRemove()}activate(){super.activate(),this.registerMesureControl()}recalc(){const t=this.getTerraDrawInstance();if(t){this.registerMesureControl();const e=t.getSnapshot();for(const i of e){const o=i.id,s=i.geometry.type,n=i.properties.mode;["linestring","freehand-linestring"].includes(n)&&s==="LineString"?(this.measureLine(o),this.computeElevationByLineFeatureID(o)):n==="point"&&s==="Point"?(this.measurePoint(o),this.computeElevationByPointFeatureID(o)):!["point","linestring","freehand-linestring","select","render"].includes(n)&&s==="Polygon"&&this.measurePolygon(o)}}}cleanStyle(t,e){const i=J,o=this.measureOptions.polygonLayerSpec?.source;o&&i.push(o);const s=this.measureOptions.lineLayerLabelSpec?.source;s&&i.push(s);const n=this.measureOptions.pointLayerLabelSpec?.source;return n&&i.push(n),Lt(t,e,i,this.measureOptions.adapterOptions?.prefixId)}registerMesureControl(){if(!this.map)return;const t=this.options.modes?.filter(o=>["linestring","freehand-linestring"].includes(o));this.options.modes?.find(o=>o==="point")&&(this.map.getSource(this.measureOptions.pointLayerLabelSpec.source)||this.map.addSource(this.measureOptions.pointLayerLabelSpec.source,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.getLayer(this.measureOptions.pointLayerLabelSpec.id)||this.map.addLayer(this.measureOptions.pointLayerLabelSpec)),t&&t.length>0&&(this.map.getSource(this.measureOptions.lineLayerLabelSpec.source)||this.map.addSource(this.measureOptions.lineLayerLabelSpec.source,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.getLayer(this.measureOptions.routingLineLayerNodeSpec.id)||this.map.addLayer(this.measureOptions.routingLineLayerNodeSpec),this.map.getLayer(this.measureOptions.lineLayerLabelSpec.id)||this.map.addLayer(this.measureOptions.lineLayerLabelSpec));const i=this.options.modes?.filter(o=>["polygon","rectangle","angled-rectangle","circle","sector","sensor","freehand"].includes(o));if(i&&i.length>0&&(this.map.getSource(this.measureOptions.polygonLayerSpec.source)||this.map.addSource(this.measureOptions.polygonLayerSpec.source,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.getLayer(this.measureOptions.polygonLayerSpec.id)||this.map.addLayer(this.measureOptions.polygonLayerSpec)),t&&t.length>0||i&&i.length>0){const o=this.getTerraDrawInstance();o&&(o.on("change",this.handleTerradrawFeatureChanged.bind(this)),o.on("finish",this.handleTerradrawFeatureReady.bind(this)),o.on("deselect",this.handleTerradrawDeselect.bind(this)),this.on("feature-deleted",this.onFeatureDeleted.bind(this)))}}handleTerradrawDeselect=()=>{if(this.map&&this.computeElevation===!0&&this.measureOptions.terrainSource!==void 0){const t=this.getTerraDrawInstance();if(!t)return;const e=t.getSnapshot(),i=e.filter(s=>s.properties.mode&&["linestring","freehand-linestring"].includes(s.properties.mode)&&s.geometry.type==="LineString");if(i.length>0)for(const s of i)this.computeElevationByLineFeatureID(s.id);const o=e.filter(s=>s.properties.mode==="point"&&s.geometry.type==="Point");if(o.length>0)for(const s of o)this.computeElevationByPointFeatureID(s.id)}};handleTerradrawFeatureReady=Jt(t=>{this.map&&(this.computeElevationByLineFeatureID(t),this.computeElevationByPointFeatureID(t))},300);handleTerradrawFeatureChanged(t,e){if(!this.map||e==="styling")return;const o=[this.measureOptions.pointLayerLabelSpec,this.measureOptions.lineLayerLabelSpec,this.measureOptions.routingLineLayerNodeSpec,this.measureOptions.polygonLayerSpec].map(a=>a.source);if(e==="delete"){this.clearExtendedFeatures(o,t);return}const s=this.getTerraDrawInstance();if(!s)return;const n=s.getSnapshot();for(const a of t){const l=n.find(d=>d.id===a);if(l){const d=l.geometry.type,c=l.properties.mode;["linestring","freehand-linestring"].includes(c)&&d==="LineString"?this.measureLine(a):c==="point"&&d==="Point"?this.measurePoint(a):!["point","linestring","freehand-linestring","select","render"].includes(c)&&d==="Polygon"&&this.measurePolygon(a)}else this.clearExtendedFeatures(o,[a])}}unregisterMesureControl(){this.off("feature-deleted",this.onFeatureDeleted.bind(this)),this.map&&(this.map.getLayer(this.measureOptions.pointLayerLabelSpec.id)&&this.map.removeLayer(this.measureOptions.pointLayerLabelSpec.id),this.map.getLayer(this.measureOptions.lineLayerLabelSpec.id)&&this.map.removeLayer(this.measureOptions.lineLayerLabelSpec.id),this.map.getLayer(this.measureOptions.routingLineLayerNodeSpec.id)&&this.map.removeLayer(this.measureOptions.routingLineLayerNodeSpec.id),this.map.getLayer(this.measureOptions.polygonLayerSpec.id)&&this.map.removeLayer(this.measureOptions.polygonLayerSpec.id),this.map.getSource(this.measureOptions.pointLayerLabelSpec.source)&&this.map.removeSource(this.measureOptions.pointLayerLabelSpec.source),this.map.getSource(this.measureOptions.lineLayerLabelSpec.source)&&this.map.removeSource(this.measureOptions.lineLayerLabelSpec.source),this.map.getSource(this.measureOptions.polygonLayerSpec.source)&&this.map.removeSource(this.measureOptions.polygonLayerSpec.source))}replaceGeoJSONSource(t,e,i){if(!this.map)return;const o=this.map.getStyle().sources[e];if(o&&typeof o.data!="string"&&o.data.type==="FeatureCollection"){const s=[];for(const a of t)(this.terradraw?.getSnapshotFeature(a.id)||this.terradraw?.getSnapshotFeature(a.properties.originalId))&&s.push(a);const n=s.map(a=>a.id);if(typeof o.data!="string"&&o.data.type==="FeatureCollection"){i==="linestring"?o.data.features=[...o.data.features=o.data.features.filter(l=>!(n.includes(l.properties?.originalId)&&l.geometry.type==="Point")),...s]:i==="point"&&(o.data.features=[...o.data.features=o.data.features.filter(l=>!(n.includes(l.id)&&l.geometry.type==="Point")),...s]);const a={};o.data.features.forEach(l=>{const d=l.id;a[d]?!a[d].properties.elevation&&l.properties?.elevation&&(a[d]=l):a[d]=l}),o.data.features=Array.from(Object.values(a)),this.map.getSource(e)?.setData(o.data)}}}computeElevationByLineFeatureID=async t=>{if(this.map&&this.computeElevation===!0){const e=this.map.getStyle().sources[this.measureOptions.lineLayerLabelSpec.source];if(e&&typeof e.data!="string"&&e.data.type==="FeatureCollection"){const i=e.data.features.filter(o=>o.properties?.originalId===t&&o.geometry.type==="Point");if(i&&i.length>0){const o=await te(i,this.measureOptions.terrainSource,this.measureOptions.elevationCacheConfig,this.elevationCache);this.replaceGeoJSONSource(o,this.measureOptions.lineLayerLabelSpec.source,"linestring")}}}};computeElevationByPointFeatureID=async t=>{if(this.map&&this.computeElevation===!0){const e=this.map.getStyle().sources[this.measureOptions.pointLayerLabelSpec.source];if(e&&typeof e.data!="string"&&e.data.type==="FeatureCollection"){const i=e.data.features.filter(o=>o.id===t&&o.geometry.type==="Point"&&o.properties?.mode==="point");if(i&&i.length>0){const o=await te(i,this.measureOptions.terrainSource,this.measureOptions.elevationCacheConfig,this.elevationCache);this.replaceGeoJSONSource(o,this.measureOptions.pointLayerLabelSpec.source,"point")}}}};measurePolygon(t){if(!this.map)return;const e=this.getTerraDrawInstance();if(!e)return;let o=e.getSnapshot()?.find(s=>s.id===t&&s.geometry.type==="Polygon");if(o){const s=this.map.getStyle().sources[this.measureOptions.polygonLayerSpec.source];if(s){typeof s.data!="string"&&s.data.type==="FeatureCollection"&&(s.data.features=s.data.features.filter(a=>a.properties?.originalId!==t));const n=JSON.parse(JSON.stringify(o));n.id=n.id+"-area-label",n.geometry=zo(o.geometry).geometry,n.properties.originalId=o.id,o=Kt(o,this.areaUnit,this.areaPrecision,this.forceAreaUnit),n.properties.area=o.properties.area,n.properties.unit=o.properties.unit,typeof s.data!="string"&&s.data.type==="FeatureCollection"&&s.data.features.push(n),this.map.getSource(this.measureOptions.polygonLayerSpec.source)?.setData(s.data),this.map.moveLayer(this.measureOptions.polygonLayerSpec.id),this.map.getLayer(this.measureOptions.lineLayerLabelSpec.id)&&this.map.moveLayer(this.measureOptions.lineLayerLabelSpec.id),this.map.getLayer(this.measureOptions.routingLineLayerNodeSpec.id)&&this.map.moveLayer(this.measureOptions.routingLineLayerNodeSpec.id),this.map.getLayer(this.measureOptions.pointLayerLabelSpec.id)&&this.map.moveLayer(this.measureOptions.pointLayerLabelSpec.id)}}}measureLine(t){if(!this.map)return;const e=this.getTerraDrawInstance();if(!e)return;let o=e.getSnapshot()?.find(s=>s.id===t&&s.geometry.type==="LineString");if(o){const s=this.map.getStyle().sources[this.measureOptions.lineLayerLabelSpec.source];if(s){typeof s.data!="string"&&s.data.type==="FeatureCollection"&&(s.data.features=s.data.features.filter(a=>a.properties?.originalId!==t)),o=Xt(o,this.distanceUnit,this.distancePrecision,this.forceDistanceUnit,this.map,this.computeElevation,this.measureOptions.terrainSource);const n=o.properties.segments;for(let a=0;a<n.length;a++){const l=n[a],d=l.geometry.coordinates,c=d[0],h=d[1];if(a===0){const p=JSON.parse(JSON.stringify(l));p.id=`${l.id}-node-${a}`,p.geometry={type:"Point",coordinates:c},p.properties.distance=0,p.properties.total=0,l.properties.elevation_start&&(p.properties.elevation=l.properties.elevation_start),typeof s.data!="string"&&s.data.type==="FeatureCollection"&&s.data.features.push(p)}const u=JSON.parse(JSON.stringify(l));u.id=`${l.id}-node-${a+1}`,u.geometry={type:"Point",coordinates:h},l.properties.elevation_end&&(u.properties.elevation=l.properties.elevation_end),typeof s.data!="string"&&s.data.type==="FeatureCollection"&&s.data.features.push(u)}this.map.getSource(this.measureOptions.lineLayerLabelSpec.source)?.setData(s.data),this.map.getLayer(this.measureOptions.polygonLayerSpec.id)&&this.map.moveLayer(this.measureOptions.polygonLayerSpec.id),this.map.moveLayer(this.measureOptions.lineLayerLabelSpec.id),this.map.moveLayer(this.measureOptions.routingLineLayerNodeSpec.id),this.map.getLayer(this.measureOptions.pointLayerLabelSpec.id)&&this.map.moveLayer(this.measureOptions.pointLayerLabelSpec.id)}}}measurePoint(t){if(!this.map)return;const e=this.getTerraDrawInstance();if(!e)return;let o=e.getSnapshot()?.find(s=>s.id===t&&s.geometry.type==="Point");if(o){const s=this.map.getStyle().sources[this.measureOptions.pointLayerLabelSpec.source];s&&(typeof s.data!="string"&&s.data.type==="FeatureCollection"&&(s.data.features=s.data.features.filter(n=>n.id!==t)),o=Zt(o,this.map,this.computeElevation,this.measureOptions.terrainSource),this.computeElevation===!0&&typeof s.data!="string"&&s.data.type==="FeatureCollection"&&s.data.features.push(o),this.map.getSource(this.measureOptions.pointLayerLabelSpec.source)?.setData(s.data),this.map.getLayer(this.measureOptions.polygonLayerSpec.id)&&this.map.moveLayer(this.measureOptions.polygonLayerSpec.id),this.map.getLayer(this.measureOptions.lineLayerLabelSpec.id)&&(this.map.moveLayer(this.measureOptions.lineLayerLabelSpec.id),this.map.moveLayer(this.measureOptions.routingLineLayerNodeSpec.id)),this.map.moveLayer(this.measureOptions.pointLayerLabelSpec.id))}}onFeatureDeleted(t){if(!this.map)return;if(this.getTerraDrawInstance()){let i=[];typeof t=="object"&&t!==null&&"deletedIds"in t&&(i=t.deletedIds);const s=[this.measureOptions.pointLayerLabelSpec,this.measureOptions.lineLayerLabelSpec,this.measureOptions.routingLineLayerNodeSpec,this.measureOptions.polygonLayerSpec].map(n=>n.source);i&&i.length>0?this.clearExtendedFeatures(s,i):this.clearExtendedFeatures(s,void 0)}}getFeatures(t=!1){const e=super.getFeatures(t);if(!e||!this.terradraw)return e;for(let i=0;i<e.features.length;i++){const o=e.features[i];if(!this.map||!this.map.loaded())continue;const s=o.geometry.type;s==="LineString"?e.features[i]=Xt(o,this.distanceUnit,this.distancePrecision,this.forceDistanceUnit,this.map,this.computeElevation,this.measureOptions.terrainSource):s==="Polygon"?e.features[i]=Kt(o,this.areaUnit,this.areaPrecision,this.forceAreaUnit):s==="Point"&&(e.features[i]=Zt(o,this.map,this.computeElevation,this.measureOptions.terrainSource))}return e}}class Yo extends ee{controlOptions;valhallaOptions;_modalDialog;get valhallaUrl(){return this.valhallaOptions.url}set valhallaUrl(t){this.valhallaOptions.url=t}get routingCostingModel(){return this.valhallaOptions.routingOptions?.costingModel}set routingCostingModel(t){this.valhallaOptions.routingOptions||(this.valhallaOptions.routingOptions={}),this.valhallaOptions.routingOptions.costingModel=t,this.createSettingsDialog()}get routingDistanceUnit(){return this.valhallaOptions.routingOptions?.distanceUnit}set routingDistanceUnit(t){this.valhallaOptions.routingOptions||(this.valhallaOptions.routingOptions={}),this.valhallaOptions.routingOptions.distanceUnit=t,this.createSettingsDialog()}get isochroneContourType(){return this.valhallaOptions.isochroneOptions?.contourType}set isochroneContourType(t){this.valhallaOptions.isochroneOptions||(this.valhallaOptions.isochroneOptions={}),this.valhallaOptions.isochroneOptions.contourType=t,this.createSettingsDialog()}get isochroneCostingModel(){return this.valhallaOptions.isochroneOptions?.costingModel}set isochroneCostingModel(t){this.valhallaOptions.isochroneOptions||(this.valhallaOptions.isochroneOptions={}),this.valhallaOptions.isochroneOptions.costingModel=t,this.createSettingsDialog()}get isochroneContours(){return this.valhallaOptions.isochroneOptions?.contours}set isochroneContours(t){this.valhallaOptions.isochroneOptions||(this.valhallaOptions.isochroneOptions={}),this.valhallaOptions.isochroneOptions.contours=t,this.createSettingsDialog()}get fontGlyphs(){const e=[this.controlOptions.routingLineLayerNodeLabelSpec][0];return e&&e.layout&&e.layout["text-font"]}set fontGlyphs(t){const e=[this.controlOptions.routingLineLayerNodeLabelSpec];for(const i of e)i&&i.layout&&(i.layout["text-font"]=t),this.map&&i&&this.map.getLayer(i.id)&&this.map.setLayoutProperty(i.id,"text-font",t)}get settingDialog(){return this._modalDialog}set settingDialog(t){this._modalDialog=t}constructor(t){let e={...JSON.parse(JSON.stringify(z)),modeOptions:{...z.modeOptions}};t&&(e=Object.assign(e,t),e.valhallaOptions=Object.assign(JSON.parse(JSON.stringify(z.valhallaOptions)),e.valhallaOptions)),e.adapterOptions||(e.adapterOptions={}),e.adapterOptions.prefixId=e.adapterOptions?.prefixId??"td-valhalla";const i=e.adapterOptions?.prefixId??"td-valhalla";if(e.routingLineLayerNodeLabelSpec.id=e.routingLineLayerNodeLabelSpec?.id.replace("{prefix}",i),e.routingLineLayerNodeLabelSpec.source=e.routingLineLayerNodeLabelSpec?.source.replace("{prefix}",i),e.routingLineLayerNodeSpec.id=e.routingLineLayerNodeSpec?.id.replace("{prefix}",i),e.routingLineLayerNodeSpec.source=e.routingLineLayerNodeSpec?.source.replace("{prefix}",i),e.isochronePolygonLayerSpec.id=e.isochronePolygonLayerSpec?.id.replace("{prefix}",i),e.isochronePolygonLayerSpec.source=e.isochronePolygonLayerSpec?.source.replace("{prefix}",i),e.isochroneLineLayerSpec.id=e.isochroneLineLayerSpec?.id.replace("{prefix}",i),e.isochroneLineLayerSpec.source=e.isochroneLineLayerSpec?.source.replace("{prefix}",i),e.isochroneLabelLayerSpec.id=e.isochroneLabelLayerSpec?.id.replace("{prefix}",i),e.isochroneLabelLayerSpec.source=e.isochroneLabelLayerSpec?.source.replace("{prefix}",i),super({modes:e.modes,open:e.open,modeOptions:e.modeOptions,adapterOptions:e.adapterOptions}),this.valhallaOptions=e.valhallaOptions,!this.valhallaOptions.url)throw new Error("Valhalla URL is required for this control. Please set valhallaOptions.url in options.");this._cssPrefix="valhalla-",this.controlOptions=e}onAdd(t){return this.controlContainer=super.onAdd(t),this.createSettingsDialog(),this.controlContainer}onRemove(){this.unregisterValhallaControl(),super.onRemove()}activate(){super.activate(),this.registerValhallaControl()}cleanStyle(t,e){const i=J,o=this.controlOptions.routingLineLayerNodeSpec?.source;o&&i.push(o);const s=this.controlOptions.isochronePolygonLayerSpec?.source;return s&&i.push(s),Lt(t,e,i,this.options.adapterOptions?.prefixId)}createSettingsDialog(){this.settingDialog=new $e(`maplibregl-terradraw-${this.cssPrefix}settings-dialog`,"Settings"),this.settingDialog.create(this.map?.getContainer().parentElement,t=>{const e=document.createElement("div");e.classList.add("tab-container");const i=document.createElement("div");i.classList.add("tab-buttons");const o=document.createElement("button");o.type="button",o.classList.add("tab-button","active"),o.textContent="Routing",o.addEventListener("click",d=>{d.stopPropagation(),this.switchTab("routing",i,n)}),i.appendChild(o);const s=document.createElement("button");s.type="button",s.classList.add("tab-button"),s.textContent="Isochrone",s.addEventListener("click",d=>{d.stopPropagation(),this.switchTab("isochrone",i,n)}),i.appendChild(s),e.appendChild(i);const n=document.createElement("div");n.classList.add("tab-contents");const a=this.createRoutingContent();a.classList.add("tab-content","active"),a.setAttribute("data-tab","routing"),n.appendChild(a);const l=this.createIsochroneContent();return l.classList.add("tab-content"),l.setAttribute("data-tab","isochrone"),n.appendChild(l),e.appendChild(n),t.appendChild(e),t})}switchTab(t,e,i){e.querySelectorAll(".tab-button").forEach(o=>o.classList.remove("active")),e.querySelector(`[data-tab="${t}"], :nth-child(${t==="routing"?"1":"2"})`)?.classList.add("active"),i.querySelectorAll(".tab-content").forEach(o=>o.classList.remove("active")),i.querySelector(`[data-tab="${t}"]`)?.classList.add("active")}createRoutingContent(){const t=document.createElement("div"),e=document.createElement("div");e.classList.add("setting-section");const i=document.createElement("label");i.textContent="Means of Transport",i.classList.add("setting-label"),e.appendChild(i),e.appendChild(this.settingDialog.createSegmentButtons(Ft,this.routingCostingModel,n=>{this.valhallaOptions.routingOptions||(this.valhallaOptions.routingOptions={}),this.valhallaOptions.routingOptions.costingModel=n,this.dispatchEvent("setting-changed")})),t.appendChild(e);const o=document.createElement("div");o.classList.add("setting-section");const s=document.createElement("label");return s.textContent="Distance Unit",s.classList.add("setting-label"),o.appendChild(s),o.appendChild(this.settingDialog.createSegmentButtons(qe,this.routingDistanceUnit,n=>{this.valhallaOptions.routingOptions||(this.valhallaOptions.routingOptions={}),this.valhallaOptions.routingOptions.distanceUnit=n,this.dispatchEvent("setting-changed")})),t.appendChild(o),t}createIsochroneContent(){const t=document.createElement("div"),e=document.createElement("div");e.classList.add("setting-section");const i=document.createElement("label");i.textContent="Contour Type",i.classList.add("setting-label"),e.appendChild(i),e.appendChild(this.settingDialog.createSegmentButtons(He,this.controlOptions.valhallaOptions?.isochroneOptions?.contourType||"time",d=>{this.valhallaOptions.isochroneOptions||(this.valhallaOptions.isochroneOptions={}),this.valhallaOptions.isochroneOptions.contourType=d,this.dispatchEvent("setting-changed")})),t.appendChild(e);const o=document.createElement("div");o.classList.add("setting-section");const s=document.createElement("label");s.textContent="Means of Transport",s.classList.add("setting-label"),o.appendChild(s),o.appendChild(this.settingDialog.createSegmentButtons(Ft,this.controlOptions.valhallaOptions?.isochroneOptions?.costingModel||"auto",d=>{this.valhallaOptions.isochroneOptions||(this.valhallaOptions.isochroneOptions={}),this.valhallaOptions.isochroneOptions.costingModel=d,this.dispatchEvent("setting-changed")})),t.appendChild(o);const n=document.createElement("div");n.classList.add("setting-section");const a=document.createElement("label");a.textContent="Contours",a.classList.add("setting-label"),n.appendChild(a);const l=this.createContoursTable();return n.appendChild(l),t.appendChild(n),t}createContoursTable(){const t=document.createElement("div");t.classList.add("contours-table");const e=document.createElement("table");e.classList.add("contours-table-element");const i=document.createElement("thead"),o=document.createElement("tr"),s=document.createElement("th");s.textContent="Color",o.appendChild(s);const n=document.createElement("th");n.textContent="Time (min)",o.appendChild(n);const a=document.createElement("th");a.textContent="Distance (km)",o.appendChild(a);const l=document.createElement("th");o.appendChild(l),i.appendChild(o),e.appendChild(i);const d=document.createElement("tbody"),c=this.controlOptions.valhallaOptions?.isochroneOptions?.contours;c.forEach((u,p)=>{const g=this.createContourRow(u,p);d.appendChild(g)}),e.appendChild(d),t.appendChild(e);const h=document.createElement("button");return h.type="button",h.classList.add("add-row-button"),h.textContent="Add Contour",h.hidden=c.length>=4,h.addEventListener("click",u=>{u.stopPropagation();const p=this.valhallaOptions.isochroneOptions?.contours,g=JSON.parse(JSON.stringify(p[p.length-1])),y=d.children.length,m=this.createContourRow(g,y);d.appendChild(m),p.push(g),this.updateAddRowButtonState(),this.dispatchEvent("setting-changed")}),t.appendChild(h),t}createContourRow(t,e){const i=document.createElement("tr");i.setAttribute("data-index",e.toString());const o=document.createElement("td"),s=document.createElement("input");s.type="color",s.value=t.color,s.classList.add("color-picker"),s.addEventListener("change",h=>{h.stopPropagation(),this.valhallaOptions.isochroneOptions?.contours&&(this.valhallaOptions.isochroneOptions.contours[e].color=h.target.value,this.dispatchEvent("setting-changed"))}),o.appendChild(s),i.appendChild(o);const n=document.createElement("td"),a=document.createElement("input");a.type="number",a.value=t.time.toString(),a.min="1",a.classList.add("number-input"),a.addEventListener("change",h=>{h.stopPropagation(),this.valhallaOptions.isochroneOptions?.contours&&(this.valhallaOptions.isochroneOptions.contours[e].time=parseFloat(h.target.value),this.dispatchEvent("setting-changed"))}),n.appendChild(a),i.appendChild(n);const l=document.createElement("td"),d=document.createElement("input");d.type="number",d.value=t.distance.toString(),d.min="0.1",d.step="0.1",d.classList.add("number-input"),d.addEventListener("change",h=>{h.stopPropagation(),this.valhallaOptions.isochroneOptions?.contours&&(this.valhallaOptions.isochroneOptions.contours[e].distance=parseFloat(h.target.value),this.dispatchEvent("setting-changed"))}),l.appendChild(d),i.appendChild(l);const c=document.createElement("td");if(e>0){const h=document.createElement("button");h.type="button",h.textContent="×",h.classList.add("delete-button"),h.addEventListener("click",u=>{u.stopPropagation();const p=parseInt(i.getAttribute("data-index")||"0");i.remove(),this.valhallaOptions.isochroneOptions?.contours&&this.valhallaOptions.isochroneOptions.contours.splice(p,1);const g=i.parentElement;g&&Array.from(g.children).forEach((y,m)=>{y.setAttribute("data-index",m.toString())}),this.updateAddRowButtonState(),this.dispatchEvent("setting-changed")}),c.appendChild(h)}return i.appendChild(c),i}updateAddRowButtonState=()=>{const t=document.getElementsByClassName("add-row-button");if(t&&t.length>0){const e=t.item(0);if(e){const i=this.controlOptions.valhallaOptions?.isochroneOptions?.contours;e.hidden=i.length>=4}}};addTerradrawButton(t){const e=document.createElement("button");e.type="button",this.modeButtons[t]=e,t==="settings"?(e.classList.add(`maplibregl-terradraw-${this.cssPrefix}add-control`),e.classList.add(`maplibregl-terradraw-${this.cssPrefix}${t}-button`),e.addEventListener("click",this.handleSettingDialog.bind(this))):super.addTerradrawButton(t)}handleSettingDialog(){this.settingDialog?.open()}registerValhallaControl(){if(!this.map)return;const t=this.options.modes?.filter(i=>["linestring"].includes(i));t&&t.length>0&&(this.map.getSource(this.controlOptions.routingLineLayerNodeSpec.source)||this.map.addSource(this.controlOptions.routingLineLayerNodeSpec.source,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.getLayer(this.controlOptions.routingLineLayerNodeSpec.id)||this.map.addLayer(this.controlOptions.routingLineLayerNodeSpec),this.map.getLayer(this.controlOptions.routingLineLayerNodeLabelSpec.id)||this.map.addLayer(this.controlOptions.routingLineLayerNodeLabelSpec));const e=this.options.modes?.filter(i=>["point"].includes(i));if(e&&e.length>0&&(this.map.getSource(this.controlOptions.isochronePolygonLayerSpec.source)||this.map.addSource(this.controlOptions.isochronePolygonLayerSpec.source,{type:"geojson",data:{type:"FeatureCollection",features:[]}}),this.map.getLayer(this.controlOptions.isochronePolygonLayerSpec.id)||this.map.addLayer(this.controlOptions.isochronePolygonLayerSpec),this.map.getLayer(this.controlOptions.isochroneLineLayerSpec.id)||this.map.addLayer(this.controlOptions.isochroneLineLayerSpec),this.map.getLayer(this.controlOptions.isochroneLabelLayerSpec.id)||this.map.addLayer(this.controlOptions.isochroneLabelLayerSpec)),(t&&t.length>0||e&&e.length>0)&&this.map){const i=this.getTerraDrawInstance();i&&(i.on("finish",this.handleTerradrawFeatureReady.bind(this)),this.on("feature-deleted",this.onFeatureDeleted.bind(this)))}}unregisterValhallaControl(){if(this.off("feature-deleted",this.onFeatureDeleted.bind(this)),!this.map)return;this.map.getLayer(this.controlOptions.routingLineLayerNodeSpec.id)&&this.map.removeLayer(this.controlOptions.routingLineLayerNodeSpec.id),this.map.getLayer(this.controlOptions.routingLineLayerNodeLabelSpec.id)&&this.map.removeLayer(this.controlOptions.routingLineLayerNodeLabelSpec.id),this.map.getSource(this.controlOptions.routingLineLayerNodeSpec.source)&&this.map.removeSource(this.controlOptions.routingLineLayerNodeSpec.source),this.map.getLayer(this.controlOptions.isochronePolygonLayerSpec.id)&&this.map.removeLayer(this.controlOptions.isochronePolygonLayerSpec.id),this.map.getLayer(this.controlOptions.isochroneLineLayerSpec.id)&&this.map.removeLayer(this.controlOptions.isochroneLineLayerSpec.id),this.map.getLayer(this.controlOptions.isochroneLabelLayerSpec.id)&&this.map.removeLayer(this.controlOptions.isochroneLabelLayerSpec.id),this.map.getSource(this.controlOptions.isochronePolygonLayerSpec.source)&&this.map.removeSource(this.controlOptions.isochronePolygonLayerSpec.source);const t=this.getTerraDrawInstance();t&&t.off("finish",this.handleTerradrawFeatureReady.bind(this))}handleTerradrawFeatureReady=Jt(t=>{this.map&&(this.computeRouteByLineFeatureID(t),this.computeIsochroneByPointFeatureID(t))},300);computeIsochroneByPointFeatureID=async t=>{if(!this.map||!this.valhallaOptions.url)return;const e=this.terradraw?.getSnapshotFeature(t);if(!e||e&&e.geometry.type!=="Point")return;const i=e.geometry.coordinates,n=(await new Je(this.valhallaUrl).calcIsochrone(i[0],i[1],this.isochroneContourType,this.isochroneCostingModel,this.isochroneContours)).features.map(d=>(d.id=`${t}-${d.properties.contour}`,d.properties.originalId=t,d)),a={contourType:this.isochroneContourType,costingModel:this.isochroneCostingModel,result:n};e.properties={...e.properties,...a},this.terradraw?.updateFeatureProperties(t,a);const l=this.map.getStyle().sources[this.controlOptions.isochronePolygonLayerSpec.source];l&&(typeof l.data!="string"&&l.data.type==="FeatureCollection"&&(l.data.features=l.data.features.filter(d=>d.properties?.originalId!==t)),typeof l.data!="string"&&l.data.type==="FeatureCollection"&&l.data.features.push(...n),this.map.getSource(this.controlOptions.isochronePolygonLayerSpec.source)?.setData(l.data),this.map.moveLayer(this.controlOptions.isochronePolygonLayerSpec.id),this.map.moveLayer(this.controlOptions.isochroneLineLayerSpec.id),this.map.moveLayer(this.controlOptions.isochroneLabelLayerSpec.id))};computeRouteByLineFeatureID=async t=>{if(!this.map||!this.valhallaOptions.url)return;const e=this.terradraw?.getSnapshotFeature(t);if(!e||e&&e.geometry.type!=="LineString")return;const i=new Ze(this.valhallaUrl),o=e.geometry.coordinates.map(c=>{const h=c;return new st.LngLat(h[0],h[1])});if(!o||o&&o.length<2)return;const s=await i.calcRoute(o,this.routingCostingModel,this.routingDistanceUnit);if(!s||!s.feature)return;const n=s?.feature.geometry;this.terradraw?.updateFeatureGeometry(t,n),e.geometry=n,e.properties={...e.properties,...s?.feature.properties},this.terradraw?.updateFeatureProperties(t,s?.feature.properties);const l=(s?.pointFeatures).features.map(c=>(c.id=`${t}-${c.id}`,c.properties.originalId=t,c)),d=this.map.getStyle().sources[this.controlOptions.routingLineLayerNodeSpec.source];d&&(typeof d.data!="string"&&d.data.type==="FeatureCollection"&&(d.data.features=d.data.features.filter(c=>c.properties?.originalId!==t)),typeof d.data!="string"&&d.data.type==="FeatureCollection"&&d.data.features.push(...l),this.map.getSource(this.controlOptions.routingLineLayerNodeSpec.source)?.setData(d.data),this.map.moveLayer(this.controlOptions.routingLineLayerNodeSpec.id),this.map.moveLayer(this.controlOptions.routingLineLayerNodeLabelSpec.id))};onFeatureDeleted(t){if(!this.map)return;if(this.getTerraDrawInstance()){let i=[];typeof t=="object"&&t!==null&&"deletedIds"in t&&(i=t.deletedIds);const s=[this.controlOptions.routingLineLayerNodeSpec,this.controlOptions.isochronePolygonLayerSpec].map(n=>n.source);i&&i.length>0?this.clearExtendedFeatures(s,i):this.clearExtendedFeatures(s,void 0)}}getFeatures(t=!1){const e=super.getFeatures(t);if(!e||!this.terradraw||!this.map)return e;const i=this.map.getStyle().sources[this.controlOptions.isochronePolygonLayerSpec.source],o=[];for(let s=0;s<e.features.length;s++){const n=e.features[s];if(n.geometry.type==="Point"){const l=n.id;if(i&&typeof i.data!="string"&&i.data.type==="FeatureCollection"){const d=i.data.features.filter(c=>c.properties?.originalId===l);o.push(n),d.length>0&&o.push(...d)}}else o.push(n)}return{type:"FeatureCollection",features:o}}}E.AvailableModes=ho,E.AvailableValhallaModes=uo,E.MaplibreMeasureControl=$o,E.MaplibreTerradrawControl=ee,E.MaplibreValhallaControl=Yo,E.MemoryCache=qt,E.ModalDialog=$e,E.TERRADRAW_MEASURE_SOURCE_IDS=bo,E.TERRADRAW_SOURCE_IDS=J,E.TERRADRAW_VALHALLA_SOURCE_IDS=Eo,E.ValhallaIsochrone=Je,E.ValhallaRouting=Ze,E.calcArea=Kt,E.calcDistance=Xt,E.capitalize=Ht,E.cleanMaplibreStyle=Lt,E.contourTypeOptions=He,E.convertAreaUnit=Ve,E.convertDistance=bt,E.costingModelOptions=Ft,E.debounce=Jt,E.defaultControlOptions=Be,E.defaultMeasureControlOptions=ot,E.defaultValhallaControlOptions=z,E.getDefaultModeOptions=je,E.queryElevationByPoint=Zt,E.queryElevationFromRasterDEM=te,E.roundFeatureCoordinates=Vo,E.routingDistanceUnitOptions=qe,Object.defineProperty(E,Symbol.toStringTag,{value:"Module"})}));
//# sourceMappingURL=maplibre-gl-terradraw.umd.js.map
