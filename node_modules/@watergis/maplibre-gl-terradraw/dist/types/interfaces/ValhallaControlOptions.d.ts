import type { ModeOptions } from './ModeOptions';
import type { TerraDrawExtend } from 'terra-draw';
import type { TerradrawValhallaMode } from './TerradrawMode';
import type { Contour, ContourType, routingDistanceUnitType, costingModelType } from '../helpers';
import type { CircleLayerSpecification, FillLayerSpecification, LineLayerSpecification, SymbolLayerSpecification } from 'maplibre-gl';
export interface ValhallaControlOptions {
    modes?: TerradrawValhallaMode[];
    open?: boolean;
    modeOptions?: ModeOptions;
    valhallaOptions?: ValhallaOptions;
    adapterOptions?: TerraDrawExtend.BaseAdapterConfig & {
        prefixId?: string;
    };
    routingLineLayerNodeLabelSpec?: SymbolLayerSpecification;
    routingLineLayerNodeSpec?: CircleLayerSpecification;
    isochronePolygonLayerSpec?: FillLayerSpecification;
    isochroneLineLayerSpec?: LineLayerSpecification;
    isochroneLabelLayerSpec?: SymbolLayerSpecification;
}
export interface ValhallaOptions {
    url?: string;
    routingOptions?: {
        costingModel?: costingModelType;
        distanceUnit?: routingDistanceUnitType;
    };
    isochroneOptions?: {
        contourType?: ContourType;
        costingModel?: costingModelType;
        contours?: Contour[];
    };
}
//# sourceMappingURL=ValhallaControlOptions.d.ts.map