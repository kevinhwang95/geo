import{TerraDrawExtend as e}from"terra-draw";class t extends e.TerraDrawBaseAdapter{constructor(e){super(e),this._cursor=void 0,this._cursorStyleSheet=void 0,this._lib=void 0,this._map=void 0,this._overlay=void 0,this._clickEventListener=void 0,this._mouseMoveEventListener=void 0,this._readyCalled=!1,this.renderedFeatureIds=new Set,this._lib=e.lib,this._map=e.map,this._coordinatePrecision="number"==typeof e.coordinatePrecision?e.coordinatePrecision:9}get _layers(){var e;return Boolean((null==(e=this.renderedFeatureIds)?void 0:e.size)>0)}circlePath(e,t,r){const o=2*r;return`M ${e} ${t} m -${r}, 0 a ${r},${r} 0 1,0 ${o},0 a ${r},${r} 0 1,0 -${o},0`}register(e){super.register(e),this._overlay=new this._lib.OverlayView,this._overlay.draw=function(){},this._overlay.onAdd=()=>{var e;null!=(e=this._currentModeCallbacks)&&e.onReady&&!this._readyCalled&&(this._currentModeCallbacks.onReady(),this._readyCalled=!0)},this._overlay.setMap(this._map),this._overlay.onRemove=()=>{},this._clickEventListener=this._map.data.addListener("click",e=>{const t=this._listeners.find(({name:e})=>"click"===e);t&&t.callback(e)}),this._mouseMoveEventListener=this._map.data.addListener("mousemove",e=>{const t=this._listeners.find(({name:e})=>"mousemove"===e);t&&t.callback(e)})}unregister(){var e,t;super.unregister(),null==(e=this._clickEventListener)||e.remove(),null==(t=this._mouseMoveEventListener)||t.remove(),this._overlay&&this._overlay.getMap()&&this._overlay.setMap(null),this._overlay=void 0,this._readyCalled=!1}getLngLatFromEvent(e){if(!this._overlay)throw new Error("cannot get overlay");const t=this._map.getBounds();if(!t)return null;const r=t.getNorthEast(),o=t.getSouthWest(),i=new this._lib.LatLngBounds(o,r),n=this._map.getDiv(),s=e.clientX-n.getBoundingClientRect().left,a=e.clientY-n.getBoundingClientRect().top,l=new this._lib.Point(s,a),d=this._overlay.getProjection();if(!d)return null;const c=d.fromContainerPixelToLatLng(l);return c&&i.contains(c)?{lng:c.lng(),lat:c.lat()}:null}getMapEventElement(){return this._map.getDiv().querySelector('div[style*="z-index: 3;"]')}project(e,t){if(!this._overlay)throw new Error("cannot get overlay");if(void 0===this._map.getBounds())throw new Error("cannot get bounds");const r=this._overlay.getProjection();if(void 0===r)throw new Error("cannot get projection");const o=r.fromLatLngToContainerPixel(new this._lib.LatLng(t,e));if(null===o)throw new Error("cannot project coordinates");return{x:o.x,y:o.y}}unproject(e,t){if(!this._overlay)throw new Error("cannot get overlay");const r=this._overlay.getProjection();if(void 0===r)throw new Error("cannot get projection");const o=r.fromContainerPixelToLatLng(new this._lib.Point(e,t));if(null===o)throw new Error("cannot unproject coordinates");return{lng:o.lng(),lat:o.lat()}}setCursor(e){if(e!==this._cursor){if(this._cursorStyleSheet&&(this._cursorStyleSheet.remove(),this._cursorStyleSheet=void 0),"unset"!==e){const t=this._map.getDiv().querySelector(".gm-style > div");if(t){t.classList.add("terra-draw-google-maps");const r=document.createElement("style");r.innerHTML=`.terra-draw-google-maps { cursor: ${e} !important; }`,document.getElementsByTagName("head")[0].appendChild(r),this._cursorStyleSheet=r}}this._cursor=e}}setDoubleClickToZoom(e){this._map.setOptions(e?{disableDoubleClickZoom:!1}:{disableDoubleClickZoom:!0})}setDraggability(e){this._map.setOptions({draggable:e})}render(e,t){this._layers&&(e.deletedIds.forEach(e=>{const t=this._map.data.getFeatureById(e);t&&(this._map.data.remove(t),this.renderedFeatureIds.delete(e))}),e.updated.forEach(e=>{if(!e||!e.id)throw new Error("Feature is not valid");const t=this._map.data.getFeatureById(e.id);if(!t)throw new Error("Feature could not be found by Google Maps API");switch(t.forEachProperty((e,r)=>{t.setProperty(r,void 0)}),Object.keys(e.properties).forEach(r=>{t.setProperty(r,e.properties[r])}),e.geometry.type){case"Point":{const r=e.geometry.coordinates;t.setGeometry(new this._lib.Data.Point(new this._lib.LatLng(r[1],r[0])))}break;case"LineString":{const r=e.geometry.coordinates,o=[];for(let e=0;e<r.length;e++){const t=r[e],i=new this._lib.LatLng(t[1],t[0]);o.push(i)}t.setGeometry(new this._lib.Data.LineString(o))}break;case"Polygon":{const r=e.geometry.coordinates,o=[];for(let e=0;e<r.length;e++){const t=[];for(let o=0;o<r[e].length;o++){const i=new this._lib.LatLng(r[e][o][1],r[e][o][0]);t.push(i)}o.push(t)}t.setGeometry(new this._lib.Data.Polygon(o))}}}),e.created.forEach(e=>{this.renderedFeatureIds.add(e.id),this._map.data.addGeoJson(e)})),e.created.forEach(e=>{this.renderedFeatureIds.add(e.id)});const r={type:"FeatureCollection",features:[...e.created]};this._map.data.addGeoJson(r),this._map.data.setStyle(e=>{const r=e.getProperty("mode"),o=e.getGeometry();if(!o)throw new Error("Google Maps geometry not found");const i=o.getType(),n={},s=e.getId();e.forEachProperty((e,t)=>{n[t]=e});const a=t[r]({type:"Feature",id:s,geometry:{type:i,coordinates:[]},properties:n});switch(i){case"Point":return{clickable:!1,icon:{path:this.circlePath(0,0,a.pointWidth),fillColor:a.pointColor,fillOpacity:1,strokeColor:a.pointOutlineColor,strokeWeight:a.pointOutlineWidth,rotation:0,scale:1},zIndex:a.zIndex};case"LineString":return{strokeColor:a.lineStringColor,strokeWeight:a.lineStringWidth,zIndex:a.zIndex};case"Polygon":return{strokeColor:a.polygonOutlineColor,strokeWeight:a.polygonOutlineWidth,fillOpacity:a.polygonFillOpacity,fillColor:a.polygonFillColor,zIndex:a.zIndex}}throw Error("Unknown feature type")})}clearLayers(){this._layers&&(this._map.data.forEach(e=>{const t=e.getId();this.renderedFeatureIds.has(t)&&this._map.data.remove(e)}),this.renderedFeatureIds=new Set)}clear(){this._currentModeCallbacks&&(this._currentModeCallbacks.onClear(),this.clearLayers())}getCoordinatePrecision(){return super.getCoordinatePrecision()}}export{t as TerraDrawGoogleMapsAdapter};
//# sourceMappingURL=terra-draw-google-maps-adapter.modern.js.map
