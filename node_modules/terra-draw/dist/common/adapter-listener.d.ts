export declare class AdapterListener<Callback extends (...args: any[]) => any> {
    name: string;
    callback: (...args: any[]) => any;
    registered: boolean;
    register: any;
    unregister: any;
    /**
     * Creates a new AdapterListener instance with the provided configuration.
     *
     * @param {Object} config - The configuration object for the listener.
     * @param {string} config.name - The name of the event listener.
     * @param {Function} config.callback - The callback function to be called when the event is triggered.
     * @param {Function} config.unregister - The function to unregister the event listeners.
     * @param {Function} config.register - The function to register the event listeners.
     */
    constructor({ name, callback, unregister, register, }: {
        name: string;
        callback: Callback;
        unregister: (callbacks: Callback) => void;
        register: (callback: Callback) => void;
    });
}
