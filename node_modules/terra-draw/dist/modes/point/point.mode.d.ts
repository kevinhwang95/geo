import { TerraDrawMouseEvent, TerraDrawAdapterStyling, NumericStyling, HexColorStyling, Cursor } from "../../common";
import { GeoJSONStoreFeatures, StoreValidation } from "../../store/store";
import { BaseModeOptions, CustomStyling, TerraDrawBaseDrawMode } from "../base.mode";
import { BehaviorConfig } from "../base.behavior";
type PointModeStyling = {
    pointWidth: NumericStyling;
    pointColor: HexColorStyling;
    pointOutlineColor: HexColorStyling;
    pointOutlineWidth: NumericStyling;
    editedPointColor: HexColorStyling;
    editedPointWidth: NumericStyling;
    editedPointOutlineColor: HexColorStyling;
    editedPointOutlineWidth: NumericStyling;
};
interface Cursors {
    create?: Cursor;
    dragStart?: Cursor;
    dragEnd?: Cursor;
}
interface TerraDrawPointModeOptions<T extends CustomStyling> extends BaseModeOptions<T> {
    cursors?: Cursors;
    editable?: boolean;
}
export declare class TerraDrawPointMode extends TerraDrawBaseDrawMode<PointModeStyling> {
    mode: "point";
    private cursors;
    private editable;
    private editedFeatureId;
    private pixelDistance;
    private clickBoundingBox;
    constructor(options?: TerraDrawPointModeOptions<PointModeStyling>);
    updateOptions(options?: TerraDrawPointModeOptions<PointModeStyling> | undefined): void;
    /** @internal */
    start(): void;
    /** @internal */
    stop(): void;
    /** @internal */
    onClick(event: TerraDrawMouseEvent): void;
    /** @internal */
    onMouseMove(): void;
    /** @internal */
    onKeyDown(): void;
    /** @internal */
    onKeyUp(): void;
    /** @internal */
    cleanUp(): void;
    onDragStart(event: TerraDrawMouseEvent, setMapDraggability: (enabled: boolean) => void): void;
    /** @internal */
    onDrag(event: TerraDrawMouseEvent, setMapDraggability: (enabled: boolean) => void): void;
    /** @internal */
    onDragEnd(event: TerraDrawMouseEvent, setMapDraggability: (enabled: boolean) => void): void;
    registerBehaviors(config: BehaviorConfig): void;
    /** @internal */
    styleFeature(feature: GeoJSONStoreFeatures): TerraDrawAdapterStyling;
    validateFeature(feature: unknown): StoreValidation;
    private onLeftClick;
    private onRightClick;
    private getNearestPointFeature;
    afterFeatureUpdated(feature: GeoJSONStoreFeatures): void;
}
export {};
