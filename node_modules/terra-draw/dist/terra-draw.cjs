function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var i=0,o=Array(e);i<e;i++)o[i]=t[i];return o}function e(t,e){for(var i=0;i<e.length;i++){var o=e[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,a(o.key),o)}}function i(t,i,o){return i&&e(t.prototype,i),o&&e(t,o),Object.defineProperty(t,"prototype",{writable:!1}),t}function o(e,i){var o="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(o)return(o=o.call(e)).next.bind(o);if(Array.isArray(e)||(o=function(e,i){if(e){if("string"==typeof e)return t(e,i);var o={}.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(e,i):void 0}}(e))||i&&e&&"number"==typeof e.length){o&&(e=o);var n=0;return function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function n(){return n=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var o in i)({}).hasOwnProperty.call(i,o)&&(t[o]=i[o])}return t},n.apply(null,arguments)}function r(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,s(t,e)}function s(t,e){return s=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},s(t,e)}function a(t){var e=function(t){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==typeof e?e:e+""}var d;!function(t){t.Commit="commit",t.Provisional="provisional",t.Finish="finish"}(d||(d={}));var l={SELECTED:"selected",MID_POINT:"midPoint",SELECTION_POINT_FEATURE_ID:"selectionPointFeatureId",SELECTION_POINT:"selectionPoint"},c={MODE:"mode",CURRENTLY_DRAWING:"currentlyDrawing",EDITED:"edited",CLOSING_POINT:"closingPoint",SNAPPING_POINT:"snappingPoint",COORDINATE_POINT:"coordinatePoint",COORDINATE_POINT_FEATURE_ID:"coordinatePointFeatureId",COORDINATE_POINT_IDS:"coordinatePointIds",PROVISIONAL_COORDINATE_COUNT:"provisionalCoordinateCount",COMMITTED_COORDINATE_COUNT:"committedCoordinateCount"},h=10;function u(t){return Boolean(t&&"object"==typeof t&&null!==t&&!Array.isArray(t))}function p(t){return Boolean(t&&"object"==typeof t&&"properties"in t&&"object"==typeof t.properties&&null!==t.properties&&"mode"in t.properties)}function g(t){return!!function(t){return"number"==typeof t&&!isNaN(new Date(t).valueOf())}(t)}var f,y="Feature is not a Polygon",v="Feature mode property does not match the mode being added to";!function(t){t.Drawing="drawing",t.Select="select",t.Static="static",t.Render="render"}(f||(f={}));var m={rightClick:!0,contextMenu:!1,leftClick:!0,onDragStart:!0,onDrag:!0,onDragEnd:!0},C=/*#__PURE__*/function(){function t(t,e){void 0===e&&(e=!1),this._state="unregistered",this._styles={},this.pointerEvents=m,this.behaviors=[],this.validate=void 0,this.pointerDistance=40,this.coordinatePrecision=void 0,this.onStyleChange=void 0,this.store=void 0,this.projection="web-mercator",this.setDoubleClickToZoom=void 0,this.unproject=void 0,this.project=void 0,this.setCursor=void 0,this.type=f.Drawing,this.mode="base",e||this.updateOptions(t)}var e=t.prototype;return e.registerBehaviors=function(t){},e.updateOptions=function(t){null!=t&&t.styles&&(this.styles=n({},this._styles,t.styles)),null!=t&&t.pointerDistance&&(this.pointerDistance=t.pointerDistance),null!=t&&t.validation&&(this.validate=t&&t.validation),null!=t&&t.projection&&(this.projection=t.projection),void 0!==(null==t?void 0:t.pointerEvents)&&(this.pointerEvents=t.pointerEvents)},e.allowPointerEvent=function(t,e){return"boolean"==typeof t?t:"function"!=typeof t||t(e)},e.setDrawing=function(){if("started"!==this._state)throw new Error("Mode must be unregistered or stopped to start");this._state="drawing"},e.setStarted=function(){if("stopped"!==this._state&&"registered"!==this._state&&"drawing"!==this._state&&"selecting"!==this._state)throw new Error("Mode must be unregistered or stopped to start");this._state="started",this.setDoubleClickToZoom(!1)},e.setStopped=function(){if("started"!==this._state)throw new Error("Mode must be started to be stopped");this._state="stopped",this.setDoubleClickToZoom(!0)},e.register=function(t){if("unregistered"!==this._state)throw new Error("Can not register unless mode is unregistered");this._state="registered",this.store=t.store,this.store.registerOnChange(t.onChange),this.setDoubleClickToZoom=t.setDoubleClickToZoom,this.project=t.project,this.unproject=t.unproject,this.onSelect=t.onSelect,this.onDeselect=t.onDeselect,this.setCursor=t.setCursor,this.onStyleChange=t.onChange,this.onFinish=t.onFinish,this.coordinatePrecision=t.coordinatePrecision,this.registerBehaviors({mode:t.mode,store:this.store,project:this.project,unproject:this.unproject,pointerDistance:this.pointerDistance,coordinatePrecision:t.coordinatePrecision,projection:this.projection})},e.validateFeature=function(t){return this.performFeatureValidation(t)},e.afterFeatureAdded=function(t){},e.afterFeatureUpdated=function(t){},e.performFeatureValidation=function(t){if("unregistered"===this._state)throw new Error("Mode must be registered");var e=function(t,e){var i;if(u(t))if(null==t.id)i="Feature has no id";else if("string"!=typeof t.id&&"number"!=typeof t.id)i="Feature must be string or number as per GeoJSON spec";else if(e(t.id))if(u(t.geometry))if(u(t.properties))if("string"==typeof t.geometry.type&&["Polygon","LineString","Point"].includes(t.geometry.type))if(Array.isArray(t.geometry.coordinates)){if(!t.properties.mode||"string"!=typeof t.properties.mode)return{valid:!1,reason:"Feature does not have a valid mode property"}}else i="Feature coordinates is not an array";else i="Feature is not Point, LineString or Polygon";else i="Feature has no properties";else i="Feature has no geometry";else i="Feature must match the id strategy (default is UUID4)";else i="Feature is not object";return i?{valid:!1,reason:i}:{valid:!0}}(t,this.store.idStrategy.isValidId);if(this.validate){var i=this.validate(t,{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Provisional});return{valid:e.valid&&i.valid,reason:i.reason}}return{valid:e.valid,reason:e.reason}},e.validateModeFeature=function(t,e){var i=this.performFeatureValidation(t);return i.valid?t.properties.mode===this.mode?e(t):{valid:!1,reason:v}:{valid:!1,reason:i.reason}},e.onFinish=function(t,e){},e.onDeselect=function(t){},e.onSelect=function(t){},e.onKeyDown=function(t){},e.onKeyUp=function(t){},e.onMouseMove=function(t){},e.onClick=function(t){},e.onDragStart=function(t,e){},e.onDrag=function(t,e){},e.onDragEnd=function(t,e){},e.getHexColorStylingValue=function(t,e,i){return this.getStylingValue(t,e,i)},e.getNumericStylingValue=function(t,e,i){return this.getStylingValue(t,e,i)},e.getStylingValue=function(t,e,i){return void 0===t?e:"function"==typeof t?t(i):t},i(t,[{key:"state",get:function(){return this._state},set:function(t){throw new Error("Please use the modes lifecycle methods")}},{key:"styles",get:function(){return this._styles},set:function(t){if("object"!=typeof t)throw new Error("Styling must be an object");this.onStyleChange&&this.onStyleChange([],"styling"),this._styles=t}}])}(),P=/*#__PURE__*/function(t){function e(){for(var e,i=arguments.length,o=new Array(i),n=0;n<i;n++)o[n]=arguments[n];return(e=t.call.apply(t,[this].concat(o))||this).type=f.Select,e}return r(e,t),e}(C);function I(t,e){var i=function(t){return t*Math.PI/180},o=i(t[1]),n=i(t[0]),r=i(e[1]),s=r-o,a=i(e[0])-n,d=Math.sin(s/2)*Math.sin(s/2)+Math.cos(o)*Math.cos(r)*Math.sin(a/2)*Math.sin(a/2);return 2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d))*6371e3/1e3}var x=6371008.8;function S(t){return t%360*Math.PI/180}function E(t){return t/6371.0088}function M(t){return t%(2*Math.PI)*180/Math.PI}function w(t,e){void 0===e&&(e=9);var i=Math.pow(10,e);return Math.round(t*i)/i}var D=57.29577951308232,F=.017453292519943295,O=6378137,_=function(t,e){return{x:0===t?0:t*F*O,y:0===e?0:Math.log(Math.tan(Math.PI/4+e*F/2))*O}},b=function(t,e){return{lng:0===t?0:D*(t/O),lat:0===e?0:(2*Math.atan(Math.exp(e/O))-Math.PI/2)*D}};function k(t,e,i){var o=S(t[0]),n=S(t[1]),r=S(i),s=E(e),a=Math.asin(Math.sin(n)*Math.cos(s)+Math.cos(n)*Math.sin(s)*Math.cos(r));return[M(o+Math.atan2(Math.sin(r)*Math.sin(s)*Math.cos(n),Math.cos(s)-Math.sin(n)*Math.sin(a))),M(a)]}function N(t){for(var e=t.center,i=t.radiusKilometers,o=t.coordinatePrecision,n=t.steps?t.steps:64,r=[],s=0;s<n;s++){var a=k(e,i,-360*s/n);r.push([w(a[0],o),w(a[1],o)])}return r.push(r[0]),{type:"Feature",geometry:{type:"Polygon",coordinates:[r]},properties:{}}}function T(t){var e;if("Polygon"===t.geometry.type)e=t.geometry.coordinates;else{if("LineString"!==t.geometry.type)throw new Error("Self intersects only accepts Polygons and LineStrings");e=[t.geometry.coordinates]}for(var i=[],o=0;o<e.length;o++)for(var n=0;n<e[o].length-1;n++)for(var r=0;r<e.length;r++)for(var s=0;s<e[r].length-1;s++)d(o,n,r,s);return i.length>0;function a(t){return t<0||t>1}function d(t,o,n,r){var s,d=e[t][o],l=e[t][o+1],c=e[n][r],h=e[n][r+1],u=function(t,e,i,o){if(j(t,i)||j(t,o)||j(e,i)||j(o,i))return null;var n=t[0],r=t[1],s=e[0],a=e[1],d=i[0],l=i[1],c=o[0],h=o[1],u=(n-s)*(l-h)-(r-a)*(d-c);return 0===u?null:[((n*a-r*s)*(d-c)-(n-s)*(d*h-l*c))/u,((n*a-r*s)*(l-h)-(r-a)*(d*h-l*c))/u]}(d,l,c,h);null!==u&&(s=h[0]!==c[0]?(u[0]-c[0])/(h[0]-c[0]):(u[1]-c[1])/(h[1]-c[1]),a(l[0]!==d[0]?(u[0]-d[0])/(l[0]-d[0]):(u[1]-d[1])/(l[1]-d[1]))||a(s)||(u.toString(),i.push(u)))}}function j(t,e){return t[0]===e[0]&&t[1]===e[1]}function W(t,e){return G(t[0])<=e&&G(t[1])<=e}function B(t){return 2===t.length&&"number"==typeof t[0]&&"number"==typeof t[1]&&Infinity!==t[0]&&Infinity!==t[1]&&(i=t[0])>=-180&&i<=180&&(e=t[1])>=-90&&e<=90;var e,i}function G(t){for(var e=1,i=0;Math.round(t*e)/e!==t;)e*=10,i++;return i}var R="Feature has holes",L="Feature has less than 4 coordinates",A="Feature has invalid coordinates",U="Feature coordinates are not closed";function V(t,e){if("Polygon"!==t.geometry.type)return{valid:!1,reason:"Feature is not a Polygon"};if(1!==t.geometry.coordinates.length)return{valid:!1,reason:R};if(t.geometry.coordinates[0].length<4)return{valid:!1,reason:L};for(var i=0;i<t.geometry.coordinates[0].length;i++){if(!B(t.geometry.coordinates[0][i]))return{valid:!1,reason:A};if(!W(t.geometry.coordinates[0][i],e))return{valid:!1,reason:"Feature has coordinates with excessive precision"}}return(o=t.geometry.coordinates[0][0])[0]!==(n=t.geometry.coordinates[0][t.geometry.coordinates[0].length-1])[0]||o[1]!==n[1]?{valid:!1,reason:U}:{valid:!0};var o,n}function Y(t,e){var i=V(t,e);return i.valid?T(t)?{valid:!1,reason:"Feature intersects itself"}:{valid:!0}:i}var K={cancel:"Escape",finish:"Enter"},z={start:"crosshair"},X=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="circle",i.center=void 0,i.clickCount=0,i.currentCircleId=void 0,i.keyEvents=K,i.cursors=z,i.startingRadiusKilometers=1e-5,i.cursorMovedAfterInitialCursorDown=!1,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),null!=e&&e.startingRadiusKilometers&&(this.startingRadiusKilometers=e.startingRadiusKilometers)},i.close=function(){if(void 0!==this.currentCircleId){this.store.updateProperty([{id:this.currentCircleId,property:c.CURRENTLY_DRAWING,value:void 0}]);var t=this.currentCircleId;if(this.validate&&t){var e=this.store.getGeometryCopy(t);if(!this.validate({type:"Feature",id:t,geometry:e,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Finish}).valid)return}this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,"drawing"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onClick=function(t){if("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(0===this.clickCount){var e;this.center=[t.lng,t.lat];var i=N({center:this.center,radiusKilometers:this.startingRadiusKilometers,coordinatePrecision:this.coordinatePrecision}),o=this.store.create([{geometry:i.geometry,properties:(e={mode:this.mode,radiusKilometers:this.startingRadiusKilometers},e[c.CURRENTLY_DRAWING]=!0,e)}]);this.currentCircleId=o[0],this.clickCount++,this.cursorMovedAfterInitialCursorDown=!1,this.setDrawing()}else 1===this.clickCount&&this.center&&void 0!==this.currentCircleId&&this.cursorMovedAfterInitialCursorDown&&this.updateCircle(t),this.close()},i.onMouseMove=function(t){this.cursorMovedAfterInitialCursorDown=!0,this.updateCircle(t)},i.onKeyDown=function(){},i.onKeyUp=function(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.cleanUp=function(){var t=this.currentCircleId;this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,"drawing"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t])}catch(t){}},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return"Feature"===t.type&&"Polygon"===t.geometry.type&&t.properties.mode===this.mode?(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=h,e):e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return Y(t,e.coordinatePrecision)})},i.updateCircle=function(t){if(1===this.clickCount&&this.center&&this.currentCircleId){var e,i=I(this.center,[t.lng,t.lat]);if("web-mercator"===this.projection){var o=function(t,e){var i=1e3*I(t,e);if(0===i)return 1;var o=_(t[0],t[1]),n=o.x,r=o.y,s=_(e[0],e[1]),a=s.y;return Math.sqrt(Math.pow(s.x-n,2)+Math.pow(a-r,2))/i}(this.center,[t.lng,t.lat]);e=function(t){for(var e=t.center,i=t.coordinatePrecision,o=t.steps?t.steps:64,n=1e3*t.radiusKilometers,r=_(e[0],e[1]),s=r.x,a=r.y,d=[],l=0;l<o;l++){var c=360*l/o*Math.PI/180,h=n*Math.cos(c),u=n*Math.sin(c),p=b(s+h,a+u),g=p.lat;d.push([w(p.lng,i),w(g,i)])}return d.push(d[0]),{type:"Feature",geometry:{type:"Polygon",coordinates:[d]},properties:{}}}({center:this.center,radiusKilometers:i*o,coordinatePrecision:this.coordinatePrecision})}else{if("globe"!==this.projection)throw new Error("Invalid projection");e=N({center:this.center,radiusKilometers:i,coordinatePrecision:this.coordinatePrecision})}if(this.validate&&!this.validate({type:"Feature",id:this.currentCircleId,geometry:e.geometry,properties:{radiusKilometers:i}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Provisional}).valid)return;this.store.updateGeometry([{id:this.currentCircleId,geometry:e.geometry}]),this.store.updateProperty([{id:this.currentCircleId,property:"radiusKilometers",value:i}])}},i.afterFeatureUpdated=function(t){this.currentCircleId===t.id&&(this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,"drawing"===this.state&&this.setStarted())},e}(C),H=function(t,e){var i=e.x-t.x,o=e.y-t.y;return Math.sqrt(o*o+i*i)};function q(t){var e=function(t){for(var e=t.coordinates[0],i=0,o=0;o<e.length-1;o++){var n=e[o],r=e[o+1];i+=(r[0]-n[0])*(r[1]+n[1])}return i<0}(t);if(!e)return{type:"Polygon",coordinates:[t.coordinates[0].reverse()]}}var Z={cancel:"Escape",finish:"Enter"},J={start:"crosshair",close:"pointer"},$=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="freehand",i.startingClick=!1,i.currentId=void 0,i.closingPointId=void 0,i.minDistance=20,i.keyEvents=Z,i.cursors=J,i.preventPointsNearClose=!0,i.autoClose=!1,i.autoCloseTimeout=500,i.hasLeftStartingPoint=!1,i.preventNewFeature=!1,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.minDistance&&(this.minDistance=e.minDistance),void 0!==(null==e?void 0:e.preventPointsNearClose)&&(this.preventPointsNearClose=e.preventPointsNearClose),void 0!==(null==e?void 0:e.autoClose)&&(this.autoClose=e.autoClose),null!=e&&e.autoCloseTimeout&&(this.autoCloseTimeout=e.autoCloseTimeout),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors))},i.close=function(){if(void 0!==this.currentId){if(this.currentId){var t=q(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}]),this.store.updateProperty([{id:this.currentId,property:c.CURRENTLY_DRAWING,value:void 0}])}var e=this.currentId;if(this.validate&&e){var i=this.store.getGeometryCopy(e);if(!this.validate({type:"Feature",id:e,geometry:i,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1,"drawing"===this.state&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onMouseMove=function(t){var e=this;if(void 0!==this.currentId&&!1!==this.startingClick){var i=this.store.getGeometryCopy(this.currentId),o=i.coordinates[0][i.coordinates[0].length-2],n=this.project(o[0],o[1]),r=H({x:n.x,y:n.y},{x:t.containerX,y:t.containerY}),s=i.coordinates[0][0],a=this.project(s[0],s[1]);if(H({x:a.x,y:a.y},{x:t.containerX,y:t.containerY})<this.pointerDistance){if(this.autoClose&&this.hasLeftStartingPoint&&(this.preventNewFeature=!0,setTimeout(function(){e.preventNewFeature=!1},this.autoCloseTimeout),this.close()),this.setCursor(this.cursors.close),this.preventPointsNearClose)return}else this.hasLeftStartingPoint=!0,this.setCursor(this.cursors.start);if(!(r<this.minDistance)){i.coordinates[0].pop();var l={type:"Polygon",coordinates:[[].concat(i.coordinates[0],[[t.lng,t.lat],i.coordinates[0][0]])]};if(this.validate&&!this.validate({type:"Feature",id:this.currentId,geometry:l,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Provisional}).valid)return;this.store.updateGeometry([{id:this.currentId,geometry:l}])}}else this.setCursor(this.cursors.start)},i.onClick=function(t){if("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)){if(this.preventNewFeature)return;if(!1===this.startingClick){var e,i,o=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:(e={mode:this.mode},e[c.CURRENTLY_DRAWING]=!0,e)},{geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:(i={mode:this.mode},i[c.CLOSING_POINT]=!0,i)}]),n=o[1];return this.currentId=o[0],this.closingPointId=n,this.startingClick=!0,void("drawing"!==this.state&&this.setDrawing())}this.close()}},i.onKeyDown=function(){},i.onKeyUp=function(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&!0===this.startingClick&&this.close()},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.cleanUp=function(){var t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,"drawing"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==e&&this.store.delete([e])}catch(t){}},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return"Feature"===t.type&&"Polygon"===t.geometry.type&&t.properties.mode===this.mode?(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=h,e):"Feature"===t.type&&"Point"===t.geometry.type&&t.properties.mode===this.mode?(e.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,t),e.zIndex=50,e):e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return V(t,e.coordinatePrecision)})},i.afterFeatureUpdated=function(t){this.currentId===t.id&&(this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1)},e}(C),Q=function(t){var e=t.store,i=t.mode,o=t.project,n=t.unproject,r=t.pointerDistance,s=t.coordinatePrecision,a=t.projection;this.store=void 0,this.mode=void 0,this.project=void 0,this.unproject=void 0,this.pointerDistance=void 0,this.coordinatePrecision=void 0,this.projection=void 0,this.store=e,this.mode=i,this.project=o,this.unproject=n,this.pointerDistance=r,this.coordinatePrecision=s,this.projection=a};function tt(t){var e=t.unproject,i=t.point,o=t.pointerDistance/2,n=i.x,r=i.y;return{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[e(n-o,r-o),e(n+o,r-o),e(n+o,r+o),e(n-o,r+o),e(n-o,r-o)].map(function(t){return[t.lng,t.lat]})]}}}var et=/*#__PURE__*/function(t){function e(e){return t.call(this,e)||this}return r(e,t),e.prototype.create=function(t){return tt({unproject:this.unproject,point:{x:t.containerX,y:t.containerY},pointerDistance:this.pointerDistance})},e}(Q),it=/*#__PURE__*/function(t){function e(e){return t.call(this,e)||this}return r(e,t),e.prototype.measure=function(t,e){var i=this.project(e[0],e[1]);return H({x:i.x,y:i.y},{x:t.containerX,y:t.containerY})},e}(Q),ot=/*#__PURE__*/function(t){function e(e,i,o){var n;return(n=t.call(this,e)||this).config=void 0,n.pixelDistance=void 0,n.clickBoundingBox=void 0,n.getSnappableCoordinateFirstClick=function(t){return n.getSnappable(t,function(t){return Boolean(t.properties&&t.properties.mode===n.mode)}).coordinate},n.getSnappableCoordinate=function(t,e){return n.getSnappable(t,function(t){return Boolean(t.properties&&t.properties.mode===n.mode&&t.id!==e)}).coordinate},n.config=e,n.pixelDistance=i,n.clickBoundingBox=o,n}return r(e,t),e.prototype.getSnappable=function(t,e){var i=this,o=this.clickBoundingBox.create(t),n=this.store.search(o,e),r={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDist:Infinity};return n.forEach(function(e){var o;if("Polygon"===e.geometry.type)o=e.geometry.coordinates[0];else{if("LineString"!==e.geometry.type)return;o=e.geometry.coordinates}o.forEach(function(o,n){var s=i.pixelDistance.measure(t,o);s<r.minDist&&s<i.pointerDistance&&(r.coordinate=o,r.minDist=s,r.featureId=e.id,r.featureCoordinateIndex=n)})}),r},e}(Q);function nt(t,e,i){var o=S(t[0]),n=S(t[1]),r=S(i),s=E(e),a=Math.asin(Math.sin(n)*Math.cos(s)+Math.cos(n)*Math.sin(s)*Math.cos(r));return[M(o+Math.atan2(Math.sin(r)*Math.sin(s)*Math.cos(n),Math.cos(s)-Math.sin(n)*Math.sin(a))),M(a)]}function rt(t,e,i){var o=t.x,n=t.y,r=S(i);return{x:o+e*Math.cos(r),y:n+e*Math.sin(r)}}function st(t,e){var i=S(t[0]),o=S(e[0]),n=S(t[1]),r=S(e[1]),s=Math.sin(o-i)*Math.cos(r),a=Math.cos(n)*Math.sin(r)-Math.sin(n)*Math.cos(r)*Math.cos(o-i);return M(Math.atan2(s,a))}function at(t,e){var i=e.x-t.x,o=e.y-t.y;if(0===i&&0===o)return 0;var n=Math.atan2(o,i);return(n*=180/Math.PI)>180?n-=360:n<-180&&(n+=360),n}function dt(t){return(t+360)%360}function lt(t,e,i){for(var o,n,r,s=[],a=t.length,d=0,l=0;l<t.length&&!(e>=d&&l===t.length-1);l++){if(d>e&&0===s.length){if(!(o=e-d))return s.push(t[l]),s;n=st(t[l],t[l-1])-180,r=nt(t[l],o,n),s.push(r)}if(d>=i)return(o=i-d)?(n=st(t[l],t[l-1])-180,r=nt(t[l],o,n),s.push(r),s):(s.push(t[l]),s);if(d>=e&&s.push(t[l]),l===t.length-1)return s;d+=I(t[l],t[l+1])}if(d<e&&t.length===a)throw new Error("Start position is beyond line");var c=t[t.length-1];return[c,c]}function ct(t){return t*(Math.PI/180)}function ht(t){return t*(180/Math.PI)}var ut=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e)||this).config=void 0,i.config=e,i}r(e,t);var i=e.prototype;return i.generateInsertionCoordinates=function(t,e,i){for(var o=[t,e],n=0,r=0;r<o.length-1;r++)n+=I(o[0],o[1]);if(n<=i)return o;var s=n/i-1;Number.isInteger(s)||(s=Math.floor(s)+1);for(var a=[],d=0;d<s;d++){var l=lt(o,i*d,i*(d+1));a.push(l)}for(var c=[],h=0;h<a.length;h++)c.push(a[h][1]);return this.limitCoordinates(c)},i.generateInsertionGeodesicCoordinates=function(t,e,i){var o=I(t,e),n=function(t,e,i){var o=[],n=ct(t[1]),r=ct(t[0]),s=ct(e[1]),a=ct(e[0]);i+=1;var d=2*Math.asin(Math.sqrt(Math.pow(Math.sin((s-n)/2),2)+Math.cos(n)*Math.cos(s)*Math.pow(Math.sin((a-r)/2),2)));if(0===d||isNaN(d))return o;for(var l=0;l<=i;l++){var c=l/i,h=Math.sin((1-c)*d)/Math.sin(d),u=Math.sin(c*d)/Math.sin(d),p=h*Math.cos(n)*Math.cos(r)+u*Math.cos(s)*Math.cos(a),g=h*Math.cos(n)*Math.sin(r)+u*Math.cos(s)*Math.sin(a),f=h*Math.sin(n)+u*Math.sin(s);if(!(isNaN(p)||isNaN(g)||isNaN(f))){var y=Math.atan2(f,Math.sqrt(Math.pow(p,2)+Math.pow(g,2))),v=Math.atan2(g,p);isNaN(y)||isNaN(v)||o.push([ht(v),ht(y)])}}return o.slice(1,-1)}(t,e,Math.floor(o/i));return this.limitCoordinates(n)},i.limitCoordinates=function(t){var e=this;return t.map(function(t){return[w(t[0],e.config.coordinatePrecision),w(t[1],e.config.coordinatePrecision)]})},e}(Q);function pt(t,e){return t[0]===e[0]&&t[1]===e[1]}function gt(t,e){if("LineString"!==t.geometry.type)return{valid:!1,reason:"Feature is not a LineString"};if(t.geometry.coordinates.length<2)return{valid:!1,reason:"Feature has less than 2 coordinates"};for(var i=0;i<t.geometry.coordinates.length;i++){if(!B(t.geometry.coordinates[i]))return{valid:!1,reason:"Feature has invalid coordinates"};if(!W(t.geometry.coordinates[i],e))return{valid:!1,reason:"Feature has coordinates with excessive precision"}}return{valid:!0}}function ft(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2))}function yt(t,e){var i=function(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}(t,e)/(ft(t)*ft(e));return Math.acos(Math.min(Math.max(i,-1),1))}function vt(t){var e=S(t[1]),i=S(t[0]);return[Math.cos(e)*Math.cos(i),Math.cos(e)*Math.sin(i),Math.sin(e)]}function mt(t){var e=t[0],i=t[1],o=M(Math.asin(t[2]));return[M(Math.atan2(i,e)),o]}var Ct=/*#__PURE__*/function(t){function e(e,i,o){var n;return(n=t.call(this,e)||this).config=void 0,n.pixelDistance=void 0,n.clickBoundingBox=void 0,n.getSnappableCoordinateFirstClick=function(t){var e=n.getSnappable(t,function(t){return Boolean(t.properties&&t.properties.mode===n.mode)});return e.coordinate?[w(e.coordinate[0],n.config.coordinatePrecision),w(e.coordinate[1],n.config.coordinatePrecision)]:void 0},n.getSnappableCoordinate=function(t,e){var i=n.getSnappable(t,function(t){return Boolean(t.properties&&t.properties.mode===n.mode&&t.id!==e)});return i.coordinate?[w(i.coordinate[0],n.config.coordinatePrecision),w(i.coordinate[1],n.config.coordinatePrecision)]:void 0},n.config=e,n.pixelDistance=i,n.clickBoundingBox=o,n}return r(e,t),e.prototype.getSnappable=function(t,e){var i=this,n=this.clickBoundingBox.create(t),r=this.store.search(n,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDistance:Infinity};return r.forEach(function(e){var n;if("Polygon"===e.geometry.type)n=e.geometry.coordinates[0];else{if("LineString"!==e.geometry.type)return;n=e.geometry.coordinates}for(var r,a=[],d=0;d<n.length-1;d++)a.push([n[d],n[d+1]]);var l=[t.lng,t.lat];if("web-mercator"===i.config.projection?r=function(t,e){for(var i,n,r,s,a,d,l,c,h=[Infinity,Infinity],u=Infinity,p=0,g=o(e);!(i=g()).done;){var f=i.value,y=f[0],v=f[1],m=void 0,C=Infinity,P=_(y[0],y[1]),I=_(v[0],v[1]),x=_(t[0],t[1]);if(y[0]===t[0]&&y[1]===t[1])m=y;else if(v[0]===t[0]&&v[1]===t[1])m=v;else{var S=(l=(d={x:(s=x).x-(n=P).x,y:s.y-n.y}).x*(a={x:(r=I).x-n.x,y:r.y-n.y}).x+d.y*a.y,c=Math.max(0,Math.min(1,l/(a.x*a.x+a.y*a.y))),{x:n.x+c*a.x,y:n.y+c*a.y}),E=b(S.x,S.y);m=[E.lng,E.lat]}m&&(C=H(x,_(m[0],m[1])))<u&&(h=m,u=C,p=e.indexOf(f))}return Infinity===u?void 0:{coordinate:h,lineIndex:p,distance:u}}(l,a):"globe"===i.config.projection&&(r=function(t,e){for(var i,n=[Infinity,Infinity],r=Infinity,s=0,a=o(e);!(i=a()).done;){var d,l=i.value,c=l[0],h=l[1],u=Infinity;(d=c[0]===t[0]&&c[1]===t[1]?c:h[0]===t[0]&&h[1]===t[1]?h:(p=c,g=h,f=t,w=vt(p),D=vt(g),F=vt(f),O=F[0],_=F[1],b=F[2],k=[(C=(y=w)[1])*(E=(v=D)[2])-(P=y[2])*(S=v[1]),P*(x=v[0])-(m=y[0])*E,m*S-C*x],N=k[0],T=k[1],j=k[2],W=T*b-j*_,B=j*O-N*b,G=N*_-T*O,R=G*T-B*j,L=W*j-G*N,A=B*N-W*T,U=1/Math.sqrt(Math.pow(R,2)+Math.pow(L,2)+Math.pow(A,2)),V=[R*U,L*U,A*U],Y=[-1*R*U,-1*L*U,-1*A*U],K=yt(w,D),z=yt(w,V),X=yt(D,V),H=yt(w,Y),q=yt(D,Y),yt(w,M=z<H&&z<q||X<H&&X<q?V:Y)>K||yt(D,M)>K?I(mt(M),mt(w))<=I(mt(M),mt(D))?[mt(w),!0,!1]:[mt(D),!1,!0]:[mt(M),!1,!1])[0])&&(u=I(t,d))<r&&(n=d,r=u,s=e.indexOf(l))}var p,g,f,y,v,m,C,P,x,S,E,M,w,D,F,O,_,b,k,N,T,j,W,B,G,R,L,A,U,V,Y,K,z,X,H,q;return Infinity===r?void 0:{coordinate:n,distance:r,lineIndex:s}}(l,a)),r){var c=i.pixelDistance.measure(t,r.coordinate);c<s.minDistance&&c<i.pointerDistance&&(s.featureId=e.id,s.coordinate=[w(r.coordinate[0],i.config.coordinatePrecision),w(r.coordinate[1],i.config.coordinatePrecision)],s.featureCoordinateIndex=r.lineIndex,s.minDistance=c)}}),s},e}(Q),Pt={cancel:"Escape",finish:"Enter"},It={start:"crosshair",close:"pointer",dragStart:"grabbing",dragEnd:"crosshair"},xt=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="linestring",i.currentCoordinate=0,i.currentId=void 0,i.closingPointId=void 0,i.keyEvents=Pt,i.snapping=void 0,i.cursors=It,i.mouseMove=!1,i.insertCoordinates=void 0,i.lastCommittedCoordinates=void 0,i.snappedPointId=void 0,i.lastMouseMoveEvent=void 0,i.editable=!1,i.editedFeatureId=void 0,i.editedFeatureCoordinateIndex=void 0,i.editedSnapType=void 0,i.editedInsertIndex=void 0,i.editedPointId=void 0,i.coordinateSnapping=void 0,i.insertPoint=void 0,i.lineSnapping=void 0,i.pixelDistance=void 0,i.clickBoundingBox=void 0,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null!=e&&e.snapping&&(this.snapping=e.snapping),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),null!=e&&e.insertCoordinates&&(this.insertCoordinates=e.insertCoordinates),e&&e.editable&&(this.editable=e.editable)},i.updateSnappedCoordinate=function(t){var e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:"Point",coordinates:e}}]);else{var i,o=this.store.create([{geometry:{type:"Point",coordinates:e},properties:(i={mode:this.mode},i[c.SNAPPING_POINT]=!0,i)}]);this.snappedPointId=o[0]}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);return e},i.close=function(){if(void 0!==this.currentId){var t=this.store.getGeometryCopy(this.currentId);t.coordinates.pop(),this.updateGeometries([].concat(t.coordinates),void 0,d.Commit),this.store.updateProperty([{id:this.currentId,property:c.CURRENTLY_DRAWING,value:void 0}]);var e=this.currentId;this.closingPointId&&this.store.delete([this.closingPointId]),this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.snappedPointId=void 0,this.lastCommittedCoordinates=void 0,"drawing"===this.state&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}},i.updateGeometries=function(t,e,i){if(this.currentId){var o={type:"LineString",coordinates:t};if(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid)return;var n=[{id:this.currentId,geometry:o}];this.closingPointId&&e&&n.push({id:this.closingPointId,geometry:{type:"Point",coordinates:e}}),"commit"===i&&(this.lastCommittedCoordinates=o.coordinates),this.store.updateGeometry(n)}},i.generateInsertCoordinates=function(t,e){if(!this.insertCoordinates||!this.lastCommittedCoordinates)throw new Error("Not able to insert coordinates");if("amount"!==this.insertCoordinates.strategy)throw new Error("Strategy does not exist");var i=I(t,e)/(this.insertCoordinates.value+1),o=[];return"globe"===this.projection?o=this.insertPoint.generateInsertionGeodesicCoordinates(t,e,i):"web-mercator"===this.projection&&(o=this.insertPoint.generateInsertionCoordinates(t,e,i)),o},i.createLine=function(t){var e,i=this.store.create([{geometry:{type:"LineString",coordinates:[t,t]},properties:(e={mode:this.mode},e[c.CURRENTLY_DRAWING]=!0,e)}])[0];this.lastCommittedCoordinates=[t,t],this.currentId=i,this.currentCoordinate++,this.setDrawing()},i.firstUpdateToLine=function(t){var e;if(this.currentId){var i=this.store.getGeometryCopy(this.currentId).coordinates,o=this.store.create([{geometry:{type:"Point",coordinates:[].concat(t)},properties:(e={mode:this.mode},e[c.CLOSING_POINT]=!0,e)}]);this.closingPointId=o[0],this.setCursor(this.cursors.close);var n=[].concat(i,[t]);this.updateGeometries(n,void 0,d.Commit),this.currentCoordinate++}},i.updateToLine=function(t,e){if(this.currentId){var i=this.store.getGeometryCopy(this.currentId).coordinates,o=this.lastCommittedCoordinates?this.lastCommittedCoordinates[this.lastCommittedCoordinates.length-1]:i[i.length-2],n=this.project(o[0],o[1]);if(H({x:n.x,y:n.y},{x:e.x,y:e.y})<this.pointerDistance)this.close();else{this.setCursor(this.cursors.close);var r=[].concat(i,[t]);this.updateGeometries(r,i[i.length-1],d.Commit),this.currentCoordinate++}}},i.registerBehaviors=function(t){this.coordinateSnapping=new ot(t,new it(t),new et(t)),this.insertPoint=new ut(t),this.clickBoundingBox=new et(t),this.pixelDistance=new it(t),this.lineSnapping=new Ct(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new ot(t,this.pixelDistance,this.clickBoundingBox)},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onMouseMove=function(t){this.mouseMove=!0,this.setCursor(this.cursors.start),this.lastMouseMoveEvent=t;var e=this.updateSnappedCoordinate(t)||[t.lng,t.lat];if(void 0!==this.currentId&&0!==this.currentCoordinate){var i=this.store.getGeometryCopy(this.currentId).coordinates;if(i.pop(),this.closingPointId){var o=i[i.length-1],n=this.project(o[0],o[1]);H({x:n.x,y:n.y},{x:t.containerX,y:t.containerY})<this.pointerDistance&&this.setCursor(this.cursors.close)}var r=[].concat(i,[e]);if(this.insertCoordinates&&this.currentId&&this.lastCommittedCoordinates){var s=this.lastCommittedCoordinates[this.lastCommittedCoordinates.length-1],a=e;if(!pt(s,a)){var l=this.generateInsertCoordinates(s,a);r=[].concat(this.lastCommittedCoordinates.slice(0,-1),l,[e])}}this.updateGeometries(r,void 0,d.Provisional)}},i.onRightClick=function(t){var e=this;if(this.editable&&"started"===this.state){var i=this.coordinateSnapping.getSnappable(t,function(t){return e.lineStringFilter(t)}),o=i.featureId,n=i.featureCoordinateIndex;if(o&&void 0!==n){var r,s=this.store.getGeometryCopy(o);if("LineString"===s.type&&!((r=s.coordinates).length<=2)){if(r.splice(n,1),this.validate&&!this.validate({id:o,type:"Feature",geometry:s,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Commit}).valid)return;this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:o,geometry:s}]),this.onFinish(o,{mode:this.mode,action:"edit"})}}}},i.onLeftClick=function(t){this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);var e=this.snapCoordinate(t)||[t.lng,t.lat];0===this.currentCoordinate?this.createLine(e):1===this.currentCoordinate&&this.currentId?this.firstUpdateToLine(e):this.currentId&&this.updateToLine(e,{x:t.containerX,y:t.containerY})},i.onClick=function(t){("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))&&(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,"right"===t.button?this.onRightClick(t):"left"===t.button&&this.onLeftClick(t))},i.onKeyDown=function(){},i.onKeyUp=function(t){t.key===this.keyEvents.cancel&&this.cleanUp(),t.key===this.keyEvents.finish&&this.close()},i.onDragStart=function(t,e){var i=this;if(this.allowPointerEvent(this.pointerEvents.onDragStart,t)&&this.editable){var o=void 0;if("started"===this.state){var n=this.lineSnapping.getSnappable(t,function(t){return i.lineStringFilter(t)});n.coordinate&&(this.editedSnapType="line",this.editedFeatureCoordinateIndex=n.featureCoordinateIndex,this.editedFeatureId=n.featureId,o=n.coordinate);var r=this.coordinateSnapping.getSnappable(t,function(t){return i.lineStringFilter(t)});r.coordinate&&(this.editedSnapType="coordinate",this.editedFeatureCoordinateIndex=r.featureCoordinateIndex,this.editedFeatureId=r.featureId,o=r.coordinate)}if(this.editedFeatureId&&o){if(!this.editedPointId){var s,a=this.store.create([{geometry:{type:"Point",coordinates:o},properties:(s={mode:this.mode},s[c.EDITED]=!0,s)}]);this.editedPointId=a[0]}this.setCursor(this.cursors.dragStart),e(!1)}}},i.onDrag=function(t,e){if(this.allowPointerEvent(this.pointerEvents.onDrag,t)&&void 0!==this.editedFeatureId&&void 0!==this.editedFeatureCoordinateIndex){var i=this.store.getGeometryCopy(this.editedFeatureId);"coordinate"===this.editedSnapType||"line"===this.editedSnapType&&void 0!==this.editedInsertIndex?i.coordinates[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:"line"===this.editedSnapType&&void 0===this.editedInsertIndex&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,i.coordinates.splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);var o={type:"LineString",coordinates:i.coordinates};if(this.validate&&!this.validate({type:"Feature",geometry:o,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Provisional}).valid)return;this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:o}]),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:c.EDITED,value:!0}])}},i.onDragEnd=function(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&void 0!==this.editedFeatureId&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:c.EDITED,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))},i.cleanUp=function(){var t=this.currentId,e=this.closingPointId,i=this.snappedPointId;this.closingPointId=void 0,this.snappedPointId=void 0,this.currentId=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==i&&this.store.delete([i]),void 0!==e&&this.store.delete([e])}catch(t){}},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if("Feature"===t.type&&"LineString"===t.geometry.type&&t.properties.mode===this.mode)return e.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,e.lineStringWidth,t),e.zIndex=h,e;if("Feature"===t.type&&"Point"===t.geometry.type&&t.properties.mode===this.mode){var i=t.properties[c.CLOSING_POINT];return e.pointColor=this.getHexColorStylingValue(i?this.styles.closingPointColor:this.styles.snappingPointColor,e.pointColor,t),e.pointWidth=this.getNumericStylingValue(i?this.styles.closingPointWidth:this.styles.snappingPointWidth,e.pointWidth,t),e.pointOutlineColor=this.getHexColorStylingValue(i?this.styles.closingPointOutlineColor:this.styles.snappingPointOutlineColor,"#ffffff",t),e.pointOutlineWidth=this.getNumericStylingValue(i?this.styles.closingPointOutlineWidth:this.styles.snappingPointOutlineWidth,2,t),e.zIndex=50,e}return e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return gt(t,e.coordinatePrecision)})},i.lineStringFilter=function(t){return Boolean("LineString"===t.geometry.type&&t.properties&&t.properties.mode===this.mode)},i.snapCoordinate=function(t){var e,i,o,n,r,s=this;return null!=(e=this.snapping)&&e.toLine&&(r=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t))&&(n=r),null!=(i=this.snapping)&&i.toCoordinate&&(n=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t)),null!=(o=this.snapping)&&o.toCustom&&(n=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?function(){return s.store.getGeometryCopy(s.currentId)}:function(){return null},project:this.project,unproject:this.unproject})),n},i.afterFeatureUpdated=function(t){this.editedFeatureId===t.id&&this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0),this.snappedPointId&&this.lastMouseMoveEvent&&this.updateSnappedCoordinate(this.lastMouseMoveEvent),this.currentId===t.id&&(this.closingPointId&&(this.store.delete([this.closingPointId]),this.closingPointId=void 0),this.currentCoordinate=0,this.currentId=void 0,"drawing"===this.state&&this.setStarted())},e}(C),St="Feature is not a Point",Et="Feature has invalid coordinates",Mt="Feature has coordinates with excessive precision";function wt(t,e){return"Point"!==t.geometry.type?{valid:!1,reason:St}:B(t.geometry.coordinates)?W(t.geometry.coordinates,e)?{valid:!0}:{valid:!1,reason:Mt}:{valid:!1,reason:Et}}var Dt={create:"crosshair",dragStart:"grabbing",dragEnd:"crosshair"},Ft=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="point",i.cursors=Dt,i.editable=!1,i.editedFeatureId=void 0,i.pixelDistance=void 0,i.clickBoundingBox=void 0,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null!=e&&e.editable&&(this.editable=e.editable)},i.start=function(){this.setStarted(),this.setCursor(this.cursors.create)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onClick=function(t){"right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)},i.onMouseMove=function(){},i.onKeyDown=function(){},i.onKeyUp=function(){},i.cleanUp=function(){this.editedFeatureId=void 0},i.onDragStart=function(t,e){if(this.allowPointerEvent(this.pointerEvents.onDragStart,t)){if(this.editable){var i=this.getNearestPointFeature(t);this.editedFeatureId=null==i?void 0:i.id}this.editedFeatureId&&(this.setCursor(this.cursors.dragStart),e(!1))}},i.onDrag=function(t,e){if(this.allowPointerEvent(this.pointerEvents.onDrag,t)&&void 0!==this.editedFeatureId){if(this.validate&&!this.validate({type:"Feature",geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Finish}).valid)return;this.store.updateGeometry([{id:this.editedFeatureId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:c.EDITED,value:!0}])}},i.onDragEnd=function(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&void 0!==this.editedFeatureId&&(this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.setCursor(this.cursors.dragEnd),this.store.updateProperty([{id:this.editedFeatureId,property:c.EDITED,value:!1}]),this.editedFeatureId=void 0,e(!0))},i.registerBehaviors=function(t){this.pixelDistance=new it(t),this.clickBoundingBox=new et(t)},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if("Feature"===t.type&&"Point"===t.geometry.type&&t.properties.mode===this.mode){var i=Boolean(t.id&&this.editedFeatureId===t.id);e.pointWidth=this.getNumericStylingValue(i?this.styles.editedPointWidth:this.styles.pointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(i?this.styles.editedPointColor:this.styles.pointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(i?this.styles.editedPointOutlineColor:this.styles.pointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(i?this.styles.editedPointOutlineWidth:this.styles.pointOutlineWidth,2,t),e.zIndex=30}return e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return wt(t,e.coordinatePrecision)})},i.onLeftClick=function(t){var e={type:"Point",coordinates:[t.lng,t.lat]},i={mode:this.mode};if(!this.validate||this.validate({type:"Feature",geometry:e,properties:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Finish}).valid){var o=this.store.create([{geometry:e,properties:i}]);this.onFinish(o[0],{mode:this.mode,action:"draw"})}},i.onRightClick=function(t){if(this.editable){var e=this.getNearestPointFeature(t);e&&this.store.delete([e.id])}},i.getNearestPointFeature=function(t){for(var e=this.clickBoundingBox.create(t),i=this.store.search(e),o=Infinity,n=void 0,r=0;r<i.length;r++){var s=i[r];if("Point"===s.geometry.type&&s.properties.mode===this.mode){var a=this.pixelDistance.measure(t,s.geometry.coordinates);a>o||a>this.pointerDistance||(o=a,n=s)}}return n},i.afterFeatureUpdated=function(t){this.editedFeatureId===t.id&&(this.editedFeatureId=void 0,this.setCursor(this.cursors.create))},e}(C),Ot=/*#__PURE__*/function(t){function e(e,i){var o;return(o=t.call(this,e)||this).config=void 0,o.pixelDistance=void 0,o._startEndPoints=[],o.config=e,o.pixelDistance=i,o}r(e,t);var o=e.prototype;return o.create=function(t,e){var i,o;if(this.ids.length)throw new Error("Opening and closing points already created");if(t.length<=3)throw new Error("Requires at least 4 coordinates");this._startEndPoints=this.store.create([{geometry:{type:"Point",coordinates:t[0]},properties:(i={mode:e},i[c.CLOSING_POINT]=!0,i)},{geometry:{type:"Point",coordinates:t[t.length-2]},properties:(o={mode:e},o[c.CLOSING_POINT]=!0,o)}])},o.delete=function(){this.ids.length&&(this.store.delete(this.ids),this._startEndPoints=[])},o.update=function(t){if(2!==this.ids.length)throw new Error("No closing points to update");this.store.updateGeometry([{id:this.ids[0],geometry:{type:"Point",coordinates:t[0]}},{id:this.ids[1],geometry:{type:"Point",coordinates:t[t.length-3]}}])},o.isClosingPoint=function(t){var e=this.store.getGeometryCopy(this.ids[0]),i=this.store.getGeometryCopy(this.ids[1]),o=this.pixelDistance.measure(t,e.coordinates),n=this.pixelDistance.measure(t,i.coordinates);return{isClosing:o<this.pointerDistance,isPreviousClosing:n<this.pointerDistance}},i(e,[{key:"ids",get:function(){return this._startEndPoints.concat()},set:function(t){}}])}(Q),_t=/*#__PURE__*/function(t){function e(e){return t.call(this,e)||this}r(e,t);var i=e.prototype;return i.createOrUpdate=function(t){var e,i=this,o=this.store.getGeometryCopy(t),n=this.store.getPropertiesCopy(t);if("Polygon"===o.type)e=o.coordinates[0].slice(0,-1);else{if("LineString"!==o.type)return;e=o.coordinates}var r=this.store.getPropertiesCopy(t),s=r.coordinatePointIds;if(s)if(s&&s.every(function(t){return i.store.has(t)})){var a=r.coordinatePointIds,d=a.map(function(t){return i.store.getGeometryCopy(t).coordinates});if(a.length!==e.length){this.deleteCoordinatePoints(a);var l=this.createPoints(e,n.mode,t);this.setFeatureCoordinatePoints(t,l)}else e.forEach(function(t,e){t[0]===d[e][0]&&t[1]===d[e][1]||i.store.updateGeometry([{id:a[e],geometry:{type:"Point",coordinates:t}}])})}else{var c=s.filter(function(t){return i.store.has(t)});c.length&&this.deleteCoordinatePoints(c);var h=this.createPoints(e,n.mode,t);this.setFeatureCoordinatePoints(t,h)}else{var u=this.createPoints(e,n.mode,t);this.setFeatureCoordinatePoints(t,u)}},i.deletePointsByFeatureIds=function(t){for(var e,i=o(t);!(e=i()).done;)this.deleteIfPresent(e.value)},i.getUpdated=function(t,e){var i=this,o=this.store.getPropertiesCopy(t);if(o.coordinatePointIds)return o.coordinatePointIds.map(function(t,o){return{id:t,geometry:n({},i.store.getGeometryCopy(t),{coordinates:e[o]})}})},i.createPoints=function(t,e,i){return this.store.create(t.map(function(t,o){var n;return{geometry:{type:"Point",coordinates:t},properties:(n={mode:e},n[c.COORDINATE_POINT]=!0,n[c.COORDINATE_POINT_FEATURE_ID]=i,n.index=o,n)}}))},i.setFeatureCoordinatePoints=function(t,e){this.store.updateProperty([{id:t,property:c.COORDINATE_POINT_IDS,value:e}])},i.deleteCoordinatePoints=function(t){var e=this,i=t.filter(function(t){return e.store.has(t)});this.store.delete(i)},i.deleteIfPresent=function(t){var e=this.store.getPropertiesCopy(t).coordinatePointIds;e&&(this.deleteCoordinatePoints(e),this.setFeatureCoordinatePoints(t,null))},e}(Q),bt={cancel:"Escape",finish:"Enter"},kt={start:"crosshair",close:"pointer",dragStart:"grabbing",dragEnd:"crosshair"},Nt=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="polygon",i.currentCoordinate=0,i.currentId=void 0,i.keyEvents=bt,i.cursors=kt,i.mouseMove=!1,i.showCoordinatePoints=!1,i.lastMouseMoveEvent=void 0,i.snapping=void 0,i.snappedPointId=void 0,i.editable=!1,i.editedFeatureId=void 0,i.editedFeatureCoordinateIndex=void 0,i.editedSnapType=void 0,i.editedInsertIndex=void 0,i.editedPointId=void 0,i.coordinatePoints=void 0,i.lineSnapping=void 0,i.coordinateSnapping=void 0,i.pixelDistance=void 0,i.closingPoints=void 0,i.clickBoundingBox=void 0,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){var i=this;if(t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),null!=e&&e.snapping&&(this.snapping=e.snapping),void 0!==(null==e?void 0:e.editable)&&(this.editable=e.editable),void 0!==(null==e?void 0:e.pointerEvents)&&(this.pointerEvents=e.pointerEvents),void 0!==(null==e?void 0:e.showCoordinatePoints))if(this.showCoordinatePoints=e.showCoordinatePoints,this.coordinatePoints&&!0===e.showCoordinatePoints)this.store.copyAllWhere(function(t){return t.mode===i.mode}).map(function(t){return t.id}).forEach(function(t){i.coordinatePoints.createOrUpdate(t)});else if(this.coordinatePoints&&!1===this.showCoordinatePoints){var o=this.store.copyAllWhere(function(t){return t.mode===i.mode&&Boolean(t[c.COORDINATE_POINT_IDS])});this.coordinatePoints.deletePointsByFeatureIds(o.map(function(t){return t.id}))}},i.close=function(){if(void 0!==this.currentId){var t=this.store.getGeometryCopy(this.currentId).coordinates[0];if(!(t.length<5)&&this.updatePolygonGeometry([].concat(t.slice(0,-2),[t[0]]),d.Finish)){var e=this.currentId;if(this.currentId){var i=q(this.store.getGeometryCopy(this.currentId));i&&(this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId)),this.store.updateProperty([{id:this.currentId,property:c.CURRENTLY_DRAWING,value:void 0},{id:this.currentId,property:c.COMMITTED_COORDINATE_COUNT,value:void 0},{id:this.currentId,property:c.PROVISIONAL_COORDINATE_COUNT,value:void 0}])}this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.snappedPointId=void 0,this.closingPoints.delete(),"drawing"===this.state&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}}},i.registerBehaviors=function(t){this.clickBoundingBox=new et(t),this.pixelDistance=new it(t),this.lineSnapping=new Ct(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new ot(t,this.pixelDistance,this.clickBoundingBox),this.closingPoints=new Ot(t,this.pixelDistance),this.coordinatePoints=new _t(t)},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.updateSnappedCoordinate=function(t){var e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:"Point",coordinates:e}}]);else{var i,o=this.store.create([{geometry:{type:"Point",coordinates:e},properties:(i={mode:this.mode},i[c.SNAPPING_POINT]=!0,i)}]);this.snappedPointId=o[0]}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0)},i.onMouseMove=function(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),this.lastMouseMoveEvent=t,this.updateSnappedCoordinate(t),void 0!==this.currentId&&0!==this.currentCoordinate){var e,i=this.store.getGeometryCopy(this.currentId).coordinates[0];if(1===this.currentCoordinate){var o=1/Math.pow(10,this.coordinatePrecision-1),n=Math.max(1e-6,o);e=[i[0],[t.lng,t.lat],[t.lng,t.lat-n],i[0]]}else if(2===this.currentCoordinate)e=[i[0],i[1],[t.lng,t.lat],i[0]];else{var r=this.closingPoints.isClosingPoint(t);r.isPreviousClosing||r.isClosing?(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.setCursor(this.cursors.close),e=[].concat(i.slice(0,-2),[i[0],i[0]])):e=[].concat(i.slice(0,-2),[[t.lng,t.lat],i[0]])}this.store.updateProperty([{id:this.currentId,property:c.PROVISIONAL_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.updatePolygonGeometry(e,d.Provisional)}},i.updatePolygonGeometry=function(t,e){if(!this.currentId)return!1;var i={type:"Polygon",coordinates:[t]};return!(this.validate&&!this.validate({type:"Feature",geometry:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid||(this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId),0))},i.snapCoordinate=function(t){var e,i,o,n,r,s=this,a=void 0;return null!=(e=this.snapping)&&e.toLine&&(n=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t))&&(a=n),null!=(i=this.snapping)&&i.toCoordinate&&(r=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t))&&(a=r),null!=(o=this.snapping)&&o.toCustom&&(a=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?function(){return s.store.getGeometryCopy(s.currentId)}:function(){return null},project:this.project,unproject:this.unproject})),a},i.polygonFilter=function(t){return Boolean("Polygon"===t.geometry.type&&t.properties&&t.properties.mode===this.mode)},i.onRightClick=function(t){var e=this;if(this.editable&&"started"===this.state){var i=this.coordinateSnapping.getSnappable(t,function(t){return e.polygonFilter(t)}),o=i.featureId,n=i.featureCoordinateIndex;if(o&&void 0!==n){var r,s=this.store.getGeometryCopy(o);if("Polygon"===s.type&&!((r=s.coordinates[0]).length<=4)){if("Polygon"!==s.type||0!==n&&n!==r.length-1?r.splice(n,1):(r.shift(),r.pop(),r.push([r[0][0],r[0][1]])),this.validate&&!this.validate({id:o,type:"Feature",geometry:s,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Commit}).valid)return;this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:o,geometry:s}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(o),this.onFinish(o,{mode:this.mode,action:"edit"})}}}},i.onLeftClick=function(t){if(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),0===this.currentCoordinate){var e,i=this.snapCoordinate(t);i&&(t.lng=i[0],t.lat=i[1]);var o=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:(e={mode:this.mode},e[c.CURRENTLY_DRAWING]=!0,e[c.COMMITTED_COORDINATE_COUNT]=this.currentCoordinate+1,e[c.PROVISIONAL_COORDINATE_COUNT]=this.currentCoordinate+1,e)}])[0];this.currentId=o,this.currentCoordinate++,this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(o),this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){var n=this.snapCoordinate(t);n&&(t.lng=n[0],t.lat=n[1]);var r=this.store.getGeometryCopy(this.currentId);if(pt([t.lng,t.lat],r.coordinates[0][0]))return;if(!this.updatePolygonGeometry([r.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],r.coordinates[0][0]],d.Commit))return;this.store.updateProperty([{id:this.currentId,property:c.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++}else if(2===this.currentCoordinate&&this.currentId){var s=this.snapCoordinate(t);s&&(t.lng=s[0],t.lat=s[1]);var a=this.store.getGeometryCopy(this.currentId).coordinates[0];if(pt([t.lng,t.lat],a[1]))return;if(!this.updatePolygonGeometry([a[0],a[1],[t.lng,t.lat],[t.lng,t.lat],a[0]],d.Commit))return;2===this.currentCoordinate&&this.closingPoints.create(a,"polygon"),this.store.updateProperty([{id:this.currentId,property:c.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++}else if(this.currentId){var l=this.store.getGeometryCopy(this.currentId).coordinates[0],h=this.closingPoints.isClosingPoint(t);if(h.isPreviousClosing||h.isClosing)this.close();else{var u=this.snapCoordinate(t);if(u&&(t.lng=u[0],t.lat=u[1]),pt([t.lng,t.lat],l[this.currentCoordinate-1]))return;var p=(void 0===(g=[[].concat(l.slice(0,-1),[[t.lng,t.lat],l[0]])])&&(g=[[[0,0],[0,1],[1,1],[1,0],[0,0]]]),{type:"Feature",geometry:{type:"Polygon",coordinates:g},properties:{}});if(!this.updatePolygonGeometry(p.geometry.coordinates[0],d.Commit))return;this.store.updateProperty([{id:this.currentId,property:c.COMMITTED_COORDINATE_COUNT,value:this.currentCoordinate+1}]),this.currentCoordinate++,this.closingPoints.ids.length&&this.closingPoints.update(p.geometry.coordinates[0])}}var g},i.onClick=function(t){this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,"right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)},i.onKeyUp=function(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()},i.onKeyDown=function(){},i.onDragStart=function(t,e){var i=this;if(this.allowPointerEvent(this.pointerEvents.onDragStart,t)&&this.editable){var o=void 0;if("started"===this.state){var n=this.lineSnapping.getSnappable(t,function(t){return i.polygonFilter(t)});n.coordinate&&(this.editedSnapType="line",this.editedFeatureCoordinateIndex=n.featureCoordinateIndex,this.editedFeatureId=n.featureId,o=n.coordinate);var r=this.coordinateSnapping.getSnappable(t,function(t){return i.polygonFilter(t)});r.coordinate&&(this.editedSnapType="coordinate",this.editedFeatureCoordinateIndex=r.featureCoordinateIndex,this.editedFeatureId=r.featureId,o=r.coordinate)}if(this.editedFeatureId&&o){if(!this.editedPointId){var s,a=this.store.create([{geometry:{type:"Point",coordinates:o},properties:(s={mode:this.mode},s[c.EDITED]=!0,s)}]);this.editedPointId=a[0]}this.setCursor(this.cursors.dragStart),e(!1)}}},i.onDrag=function(t,e){if(this.allowPointerEvent(this.pointerEvents.onDrag,t)&&void 0!==this.editedFeatureId&&void 0!==this.editedFeatureCoordinateIndex){var i=this.store.getGeometryCopy(this.editedFeatureId),o=i.coordinates[0];"coordinate"===this.editedSnapType||"line"===this.editedSnapType&&void 0!==this.editedInsertIndex?0===this.editedFeatureCoordinateIndex||this.editedFeatureCoordinateIndex===i.coordinates[0].length-1?(o[0]=[t.lng,t.lat],o[o.length-1]=[t.lng,t.lat]):o[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:"line"===this.editedSnapType&&void 0===this.editedInsertIndex&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,i.coordinates[0].splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);var n={type:"Polygon",coordinates:i.coordinates};if(this.validate&&!this.validate({type:"Feature",geometry:n,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Provisional}).valid)return;this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:n}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.editedFeatureId),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:c.EDITED,value:!0}])}},i.onDragEnd=function(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&void 0!==this.editedFeatureId&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:c.EDITED,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))},i.cleanUp=function(){var t=this.currentId,e=this.snappedPointId,i=this.editedPointId;this.currentId=void 0,this.snappedPointId=void 0,this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted();try{t&&this.coordinatePoints.deletePointsByFeatureIds([t]),void 0!==t&&this.store.delete([t]),void 0!==i&&this.store.delete([i]),void 0!==e&&this.store.delete([e]),this.closingPoints.ids.length&&this.closingPoints.delete()}catch(t){}},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.properties.mode===this.mode){if("Polygon"===t.geometry.type)return e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=h,e;if("Point"===t.geometry.type){var i=t.properties[c.EDITED],o=t.properties[c.COORDINATE_POINT],r=i?"editedPoint":t.properties[c.CLOSING_POINT]?"closingPoint":t.properties[c.SNAPPING_POINT]?"snappingPoint":o?"coordinatePoint":void 0;if(!r)return e;var s={editedPoint:{width:this.styles.editedPointOutlineWidth,color:this.styles.editedPointColor,outlineColor:this.styles.editedPointOutlineColor,outlineWidth:this.styles.editedPointOutlineWidth},closingPoint:{width:this.styles.closingPointWidth,color:this.styles.closingPointColor,outlineColor:this.styles.closingPointOutlineColor,outlineWidth:this.styles.closingPointOutlineWidth},snappingPoint:{width:this.styles.snappingPointWidth,color:this.styles.snappingPointColor,outlineColor:this.styles.snappingPointOutlineColor,outlineWidth:this.styles.snappingPointOutlineWidth},coordinatePoint:{width:this.styles.coordinatePointWidth,color:this.styles.coordinatePointColor,outlineColor:this.styles.coordinatePointOutlineColor,outlineWidth:this.styles.coordinatePointOutlineWidth}};return e.pointWidth=this.getNumericStylingValue(s[r].width,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(s[r].color,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(s[r].outlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(s[r].outlineWidth,2,t),e.zIndex=i?40:o?20:30,e}}return e},i.afterFeatureAdded=function(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id)},i.afterFeatureUpdated=function(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id),this.editedFeatureId===t.id&&this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0),this.snappedPointId&&this.lastMouseMoveEvent&&this.updateSnappedCoordinate(this.lastMouseMoveEvent),this.currentId===t.id&&(this.currentCoordinate=0,this.currentId=void 0,this.closingPoints.delete(),"drawing"===this.state&&this.setStarted())},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return V(t,e.coordinatePrecision)})},e}(C),Tt={cancel:"Escape",finish:"Enter"},jt={start:"crosshair"},Wt=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="rectangle",i.center=void 0,i.clickCount=0,i.currentRectangleId=void 0,i.keyEvents=Tt,i.cursors=jt,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents))},i.updateRectangle=function(t,e){if(1===this.clickCount&&this.center&&this.currentRectangleId){var i=this.store.getGeometryCopy(this.currentRectangleId).coordinates[0][0],o={type:"Polygon",coordinates:[[i,[t.lng,i[1]],[t.lng,t.lat],[i[0],t.lat],i]]};if(this.validate&&!this.validate({id:this.currentRectangleId,geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid)return;this.store.updateGeometry([{id:this.currentRectangleId,geometry:o}])}},i.close=function(){var t=this.currentRectangleId;if(t){var e=q(this.store.getGeometryCopy(t));e&&this.store.updateGeometry([{id:t,geometry:e}]),this.store.updateProperty([{id:t,property:c.CURRENTLY_DRAWING,value:void 0}])}this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,"drawing"===this.state&&this.setStarted(),void 0!==t&&this.onFinish(t,{mode:this.mode,action:"draw"})},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onClick=function(t){if("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(0===this.clickCount){var e;this.center=[t.lng,t.lat];var i=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:(e={mode:this.mode},e[c.CURRENTLY_DRAWING]=!0,e)}]);this.currentRectangleId=i[0],this.clickCount++,this.setDrawing()}else this.updateRectangle(t,d.Finish),this.close()},i.onMouseMove=function(t){this.updateRectangle(t,d.Provisional)},i.onKeyDown=function(){},i.onKeyUp=function(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.cleanUp=function(){var t=this.currentRectangleId;this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,"drawing"===this.state&&this.setStarted(),void 0!==t&&this.store.delete([t])},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return"Feature"===t.type&&"Polygon"===t.geometry.type&&t.properties.mode===this.mode?(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=h,e):e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return Y(t,e.coordinatePrecision)})},i.afterFeatureUpdated=function(t){this.currentRectangleId===t.id&&(this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,"drawing"===this.state&&this.setStarted())},e}(C),Bt=/*#__PURE__*/function(t){function e(e){var i;if(!e.modeName)throw new Error("Mode name is required for TerraDrawRenderMode");return(i=t.call(this,e,!0)||this).type=f.Render,i.mode="render",i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.modeName&&(this.mode=e.modeName)},i.registerBehaviors=function(t){this.mode=t.mode},i.start=function(){this.setStarted()},i.stop=function(){this.setStopped()},i.onKeyUp=function(){},i.onKeyDown=function(){},i.onClick=function(){},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.onMouseMove=function(){},i.cleanUp=function(){},i.styleFeature=function(t){return{pointColor:this.getHexColorStylingValue(this.styles.pointColor,"#3f97e0",t),pointWidth:this.getNumericStylingValue(this.styles.pointWidth,6,t),pointOutlineColor:this.getHexColorStylingValue(this.styles.pointOutlineColor,"#ffffff",t),pointOutlineWidth:this.getNumericStylingValue(this.styles.pointOutlineWidth,0,t),polygonFillColor:this.getHexColorStylingValue(this.styles.polygonFillColor,"#3f97e0",t),polygonFillOpacity:this.getNumericStylingValue(this.styles.polygonFillOpacity,.3,t),polygonOutlineColor:this.getHexColorStylingValue(this.styles.polygonOutlineColor,"#3f97e0",t),polygonOutlineWidth:this.getNumericStylingValue(this.styles.polygonOutlineWidth,4,t),lineStringWidth:this.getNumericStylingValue(this.styles.lineStringWidth,4,t),lineStringColor:this.getHexColorStylingValue(this.styles.lineStringColor,"#3f97e0",t),zIndex:this.getNumericStylingValue(this.styles.zIndex,0,t)}},i.validateFeature=function(e){var i=t.prototype.validateFeature.call(this,e);if(i.valid){var o=e,n=wt(o,this.coordinatePrecision).valid||V(o,this.coordinatePrecision).valid||gt(o,this.coordinatePrecision).valid;return n?{valid:!0}:{valid:n,reason:"Feature is not a valid Point, Polygon or LineString feature"}}return i},e}(C);function Gt(t,e){var i=t,o=e,n=S(i[1]),r=S(o[1]),s=S(o[0]-i[0]);s>Math.PI&&(s-=2*Math.PI),s<-Math.PI&&(s+=2*Math.PI);var a=Math.log(Math.tan(r/2+Math.PI/4)/Math.tan(n/2+Math.PI/4)),d=(M(Math.atan2(s,a))+360)%360;return d>180?-(360-d):d}function Rt(t,e,i){var o=e;e<0&&(o=-Math.abs(o));var n=o/x,r=t[0]*Math.PI/180,s=S(t[1]),a=S(i),d=n*Math.cos(a),l=s+d;Math.abs(l)>Math.PI/2&&(l=l>0?Math.PI-l:-Math.PI-l);var c=Math.log(Math.tan(l/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),h=Math.abs(c)>1e-11?d/c:Math.cos(s),u=[(180*(r+n*Math.sin(a)/h)/Math.PI+540)%360-180,180*l/Math.PI];return u[0]+=u[0]-t[0]>180?-360:t[0]-u[0]>180?360:0,u}function Lt(t,e,i,o,n){var r=o(t[0],t[1]),s=o(e[0],e[1]),a=n((r.x+s.x)/2,(r.y+s.y)/2),d=a.lat;return[w(a.lng,i),w(d,i)]}function At(t,e,i){var o=Rt(t,1e3*I(t,e)/2,Gt(t,e));return[w(o[0],i),w(o[1],i)]}function Ut(t){for(var e=t.featureCoords,i=t.precision,o=t.unproject,n=t.project,r=t.projection,s=[],a=0;a<e.length-1;a++){var d=void 0;if("web-mercator"===r)d=Lt(e[a],e[a+1],i,n,o);else{if("globe"!==r)throw new Error("Invalid projection");d=At(e[a],e[a+1],i)}s.push(d)}return s}var Vt=/*#__PURE__*/function(t){function e(e,i,o){var n;return(n=t.call(this,e)||this).config=void 0,n.selectionPointBehavior=void 0,n.coordinatePointBehavior=void 0,n._midPoints=[],n.config=e,n.selectionPointBehavior=i,n.coordinatePointBehavior=o,n}r(e,t);var o=e.prototype;return o.insert=function(t,e,i){var o=this.store.getGeometryCopy(e),n=this.store.getPropertiesCopy(e),r=n.midPointFeatureId,s=n.midPointSegment,a=this.store.getGeometryCopy(r),d="Polygon"===a.type?a.coordinates[0]:a.coordinates;d.splice(s+1,0,o.coordinates),a.coordinates="Polygon"===a.type?[d]:d,this.store.updateGeometry([{id:r,geometry:a}]),this.store.getPropertiesCopy(t)[c.COORDINATE_POINT_IDS]&&this.coordinatePointBehavior.createOrUpdate(t),this.store.delete([].concat(this._midPoints,this.selectionPointBehavior.ids)),this.create(d,r,i),this.selectionPointBehavior.create(d,a.type,r)},o.create=function(t,e,i){var o=this;if(!this.store.has(e))throw new Error("Store does not have feature with this id");this._midPoints=this.store.create(function(t,e,i,o,n,r){return Ut({featureCoords:t,precision:i,project:o,unproject:n,projection:r}).map(function(t,i){return{geometry:{type:"Point",coordinates:t},properties:e(i)}})}(t,function(t){var i;return(i={mode:o.mode})[l.MID_POINT]=!0,i.midPointSegment=t,i.midPointFeatureId=e,i},i,this.config.project,this.config.unproject,this.projection))},o.delete=function(){this._midPoints.length&&(this.store.delete(this._midPoints),this._midPoints=[])},o.getUpdated=function(t){var e=this;if(0!==this._midPoints.length)return Ut({featureCoords:t,precision:this.coordinatePrecision,project:this.config.project,unproject:this.config.unproject,projection:this.config.projection}).map(function(t,i){return{id:e._midPoints[i],geometry:{type:"Point",coordinates:t}}})},i(e,[{key:"ids",get:function(){return this._midPoints.concat()},set:function(t){}}])}(Q),Yt=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e)||this)._selectionPoints=[],i}r(e,t);var o=e.prototype;return o.create=function(t,e,i){var o=this;this._selectionPoints=this.store.create(function(t,e,i){for(var o=[],n="Polygon"===e?t.length-1:t.length,r=0;r<n;r++)o.push({geometry:{type:"Point",coordinates:t[r]},properties:i(r)});return o}(t,e,function(t){var e;return(e={mode:o.mode,index:t})[l.SELECTION_POINT]=!0,e[l.SELECTION_POINT_FEATURE_ID]=i,e}))},o.delete=function(){this.ids.length&&(this.store.delete(this.ids),this._selectionPoints=[])},o.getUpdated=function(t){if(0!==this._selectionPoints.length)return this._selectionPoints.map(function(e,i){return{id:e,geometry:{type:"Point",coordinates:t[i]}}})},o.getOneUpdated=function(t,e){if(void 0!==this._selectionPoints[t])return{id:this._selectionPoints[t],geometry:{type:"Point",coordinates:e}}},i(e,[{key:"ids",get:function(){return this._selectionPoints.concat()},set:function(t){}}])}(Q);function Kt(t,e){for(var i,o,n,r=!1,s=0,a=e.length;s<a;s++)for(var d=e[s],l=0,c=d.length,h=c-1;l<c;h=l++)(o=d[l])[1]>(i=t)[1]!=(n=d[h])[1]>i[1]&&i[0]<(n[0]-o[0])*(i[1]-o[1])/(n[1]-o[1])+o[0]&&(r=!r);return r}var zt=function(t,e,i){var o=function(t){return t*t},n=function(t,e){return o(t.x-e.x)+o(t.y-e.y)};return Math.sqrt(function(t,e,i){var o=n(e,i);if(0===o)return n(t,e);var r=((t.x-e.x)*(i.x-e.x)+(t.y-e.y)*(i.y-e.y))/o;return r=Math.max(0,Math.min(1,r)),n(t,{x:e.x+r*(i.x-e.x),y:e.y+r*(i.y-e.y)})}(t,e,i))},Xt=/*#__PURE__*/function(t){function e(e,i,o){var n;return(n=t.call(this,e)||this).config=void 0,n.createClickBoundingBox=void 0,n.pixelDistance=void 0,n.config=e,n.createClickBoundingBox=i,n.pixelDistance=o,n}return r(e,t),e.prototype.find=function(t,e){for(var i=void 0,o=Infinity,n=void 0,r=Infinity,s=void 0,a=Infinity,d=void 0,c=this.createClickBoundingBox.create(t),h=this.store.search(c),u=0;u<h.length;u++){var p=h[u],g=p.geometry;if("Point"===g.type){if(p.properties.selectionPoint||p.properties.coordinatePoint||!e&&p.properties[l.MID_POINT])continue;var f=this.pixelDistance.measure(t,g.coordinates);p.properties[l.MID_POINT]&&f<this.pointerDistance&&f<a?(a=f,s=p):!p.properties[l.MID_POINT]&&f<this.pointerDistance&&f<o&&(o=f,i=p)}else if("LineString"===g.type){if(i)continue;for(var y=0;y<g.coordinates.length-1;y++){var v=g.coordinates[y],m=g.coordinates[y+1],C=zt({x:t.containerX,y:t.containerY},this.project(v[0],v[1]),this.project(m[0],m[1]));C<this.pointerDistance&&C<r&&(r=C,n=p)}}else if("Polygon"===g.type){if(i||n)continue;Kt([t.lng,t.lat],g.coordinates)&&(d=p)}}return{clickedFeature:i||n||d,clickedMidPoint:s}},e}(Q),Ht=/*#__PURE__*/function(t){function e(e,i,o,n,r){var s;return(s=t.call(this,e)||this).config=void 0,s.featuresAtCursorEvent=void 0,s.selectionPoints=void 0,s.midPoints=void 0,s.coordinatePoints=void 0,s.draggedFeatureId=null,s.dragPosition=void 0,s.config=e,s.featuresAtCursorEvent=i,s.selectionPoints=o,s.midPoints=n,s.coordinatePoints=r,s}r(e,t);var i=e.prototype;return i.startDragging=function(t,e){this.draggedFeatureId=e,this.dragPosition=[t.lng,t.lat]},i.stopDragging=function(){this.draggedFeatureId=null,this.dragPosition=void 0},i.isDragging=function(){return null!==this.draggedFeatureId},i.canDrag=function(t,e){var i=this.featuresAtCursorEvent.find(t,!0).clickedFeature;return!(!i||i.id!==e)},i.drag=function(t,e){if(this.draggedFeatureId){var i=this.store.getGeometryCopy(this.draggedFeatureId),o=[t.lng,t.lat];if("Polygon"===i.type||"LineString"===i.type){var n,r;if(r="Polygon"===i.type?(n=i.coordinates[0]).length-1:(n=i.coordinates).length,!this.dragPosition)return!1;for(var s=0;s<r;s++){var a=n[s],l=void 0,c=void 0;if("web-mercator"===this.config.projection){var h=_(this.dragPosition[0],this.dragPosition[1]),u=_(o[0],o[1]),p=_(a[0],a[1]),g={x:h.x-u.x,y:h.y-u.y},f=b(p.x-g.x,p.y-g.y);l=f.lng,c=f.lat}else{var y=[this.dragPosition[0]-o[0],this.dragPosition[1]-o[1]];l=a[0]-y[0],c=a[1]-y[1]}if(l=w(l,this.config.coordinatePrecision),c=w(c,this.config.coordinatePrecision),l>180||l<-180||c>90||c<-90)return!1;n[s]=[l,c]}"Polygon"===i.type&&(n[n.length-1]=[n[0][0],n[0][1]]);var v=this.selectionPoints.getUpdated(n)||[],m=this.midPoints.getUpdated(n)||[],C=this.coordinatePoints.getUpdated(this.draggedFeatureId,n)||[];if(e&&!e({type:"Feature",id:this.draggedFeatureId,geometry:i,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:d.Provisional}).valid)return!1;this.store.updateGeometry([{id:this.draggedFeatureId,geometry:i}].concat(v,m,C)),this.dragPosition=[t.lng,t.lat]}else"Point"===i.type&&(this.store.updateGeometry([{id:this.draggedFeatureId,geometry:{type:"Point",coordinates:o}}]),this.dragPosition=[t.lng,t.lat])}},e}(Q),qt=/*#__PURE__*/function(t){function e(e,i,o,n,r,s,a){var d;return(d=t.call(this,e)||this).config=void 0,d.pixelDistance=void 0,d.selectionPoints=void 0,d.midPoints=void 0,d.coordinatePoints=void 0,d.coordinateSnapping=void 0,d.lineSnapping=void 0,d.draggedCoordinate={id:null,index:-1},d.config=e,d.pixelDistance=i,d.selectionPoints=o,d.midPoints=n,d.coordinatePoints=r,d.coordinateSnapping=s,d.lineSnapping=a,d}r(e,t);var i=e.prototype;return i.getClosestCoordinate=function(t,e){var i,o={dist:Infinity,index:-1,isFirstOrLastPolygonCoord:!1};if("LineString"===e.type)i=e.coordinates;else{if("Polygon"!==e.type)return o;i=e.coordinates[0]}for(var n=0;n<i.length;n++){var r=this.pixelDistance.measure(t,i[n]);if(r<this.pointerDistance&&r<o.dist){var s="Polygon"===e.type&&(n===i.length-1||0===n);o.dist=r,o.index=s?0:n,o.isFirstOrLastPolygonCoord=s}}return o},i.getDraggableIndex=function(t,e){var i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return-1===o.index?-1:o.index},i.snapCoordinate=function(t,e,i){var o,n,r,s=this,a=[t.lng,t.lat],d=function(t){return Boolean(t.properties&&t.properties.mode===i.properties.mode&&t.id!==s.draggedCoordinate.id)};return null!=e&&e.toLine&&(o=this.lineSnapping.getSnappable(t,d).coordinate)&&(a=o),e.toCoordinate&&(n=this.coordinateSnapping.getSnappable(t,d).coordinate)&&(a=n),null!=e&&e.toCustom&&(r=e.toCustom(t,{currentCoordinate:this.draggedCoordinate.index,currentId:i.id,getCurrentGeometrySnapshot:i.id?function(){return s.store.getGeometryCopy(i.id)}:function(){return null},project:this.project,unproject:this.unproject}))&&(a=r),a},i.drag=function(t,e,i,o){var n=this.draggedCoordinate.id;if(null===n)return!1;var r=this.draggedCoordinate.index,s=this.store.getGeometryCopy(n),a=this.store.getPropertiesCopy(n),l="LineString"===s.type?s.coordinates:s.coordinates[0],c="Polygon"===s.type&&(r===l.length-1||0===r),h={type:"Feature",id:n,geometry:s,properties:a},u=this.snapCoordinate(t,o,h);if(t.lng>180||t.lng<-180||t.lat>90||t.lat<-90)return!1;if(c){var p=l.length-1;l[0]=u,l[p]=u}else l[r]=u;var g=this.selectionPoints.getOneUpdated(r,u),f=g?[g]:[],y=this.midPoints.getUpdated(l)||[],v=this.coordinatePoints.getUpdated(n,l)||[];return!("Point"!==s.type&&!e&&T({type:"Feature",geometry:s,properties:{}})||i&&!i(h,{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:d.Provisional}).valid||(this.store.updateGeometry([{id:n,geometry:s}].concat(f,y,v)),0))},i.isDragging=function(){return null!==this.draggedCoordinate.id},i.startDragging=function(t,e){this.draggedCoordinate={id:t,index:e}},i.stopDragging=function(){this.draggedCoordinate={id:null,index:-1}},e}(Q);function Zt(t){var e=0,i=0,o=0;return("Polygon"===t.geometry.type?t.geometry.coordinates[0].slice(0,-1):t.geometry.coordinates).forEach(function(t){e+=t[0],i+=t[1],o++},!0),[e/o,i/o]}var Jt=function(t,e){if(0===e||360===e||-360===e)return t;var i=.017453292519943295*e,o=("Polygon"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).map(function(t){return _(t[0],t[1])}),n=o.reduce(function(t,e){return{x:t.x+e.x,y:t.y+e.y}},{x:0,y:0});n.x/=o.length,n.y/=o.length;var r=o.map(function(t){return{x:n.x+(t.x-n.x)*Math.cos(i)-(t.y-n.y)*Math.sin(i),y:n.y+(t.x-n.x)*Math.sin(i)+(t.y-n.y)*Math.cos(i)}}).map(function(t){var e=t.x,i=t.y;return[b(e,i).lng,b(e,i).lat]});return"Polygon"===t.geometry.type?t.geometry.coordinates[0]=r:t.geometry.coordinates=r,t};function $t(t){var e=("Polygon"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).map(function(t){var e=_(t[0],t[1]);return[e.x,e.y]});return"Polygon"===t.geometry.type?function(t){for(var e=0,i=0,o=0,n=t.length,r=0;r<n-1;r++){var s=t[r],a=s[0],d=s[1],l=t[r+1],c=l[0],h=l[1],u=a*h-c*d;e+=u,i+=(a+c)*u,o+=(d+h)*u}return{x:i/=6*(e/=2),y:o/=6*e}}(e):function(t){for(var e=t.length,i=0,o=0,n=0;n<e;n++){var r=t[n];i+=r[0],o+=r[1]}return{x:i/e,y:o/e}}(e)}var Qt=/*#__PURE__*/function(t){function e(e,i,o,n){var r;return(r=t.call(this,e)||this).config=void 0,r.selectionPoints=void 0,r.midPoints=void 0,r.coordinatePoints=void 0,r.lastBearing=void 0,r.selectedGeometry=void 0,r.selectedGeometryCentroid=void 0,r.selectedGeometryWebMercatorCentroid=void 0,r.config=e,r.selectionPoints=i,r.midPoints=o,r.coordinatePoints=n,r}r(e,t);var i=e.prototype;return i.reset=function(){this.lastBearing=void 0,this.selectedGeometry=void 0,this.selectedGeometryWebMercatorCentroid=void 0,this.selectedGeometryCentroid=void 0},i.rotate=function(t,e,i){var o=this;this.selectedGeometry||(this.selectedGeometry=this.store.getGeometryCopy(e));var n=this.selectedGeometry;if("Polygon"===n.type||"LineString"===n.type){var r,s=[t.lng,t.lat],a={type:"Feature",geometry:n,properties:{}};if("web-mercator"===this.config.projection){this.selectedGeometryWebMercatorCentroid||(this.selectedGeometryWebMercatorCentroid=$t(a));var l=_(t.lng,t.lat);if(0===(r=at(this.selectedGeometryWebMercatorCentroid,l)))return;if(!this.lastBearing)return void(this.lastBearing=r);Jt(a,-(this.lastBearing-r))}else{if("globe"!==this.config.projection)throw new Error("Unsupported projection");if(this.selectedGeometryCentroid||(this.selectedGeometryCentroid=Zt({type:"Feature",geometry:n,properties:{}})),r=Gt(this.selectedGeometryCentroid,s),!this.lastBearing)return void(this.lastBearing=r+180);!function(t,e){if(0===e||360===e||-360===e)return t;var i=Zt(t);("Polygon"===t.geometry.type?t.geometry.coordinates[0]:t.geometry.coordinates).forEach(function(t){var o=Gt(i,t)+e,n=function(t,e){t[0]+=t[0]-e[0]>180?-360:e[0]-t[0]>180?360:0;var i=x,o=e[1]*Math.PI/180,n=t[1]*Math.PI/180,r=n-o,s=Math.abs(t[0]-e[0])*Math.PI/180;s>Math.PI&&(s-=2*Math.PI);var a=Math.log(Math.tan(n/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),d=Math.abs(a)>1e-11?r/a:Math.cos(o);return Math.sqrt(r*r+d*d*s*s)*i}(i,t),r=Rt(i,n,o);t[0]=r[0],t[1]=r[1]})}(a,-(this.lastBearing-(r+180)))}var c="Polygon"===n.type?n.coordinates[0]:n.coordinates;c.forEach(function(t){t[0]=w(t[0],o.coordinatePrecision),t[1]=w(t[1],o.coordinatePrecision)});var h=this.midPoints.getUpdated(c)||[],u=this.selectionPoints.getUpdated(c)||[],p=this.coordinatePoints.getUpdated(e,c)||[];if(i&&!i({id:e,type:"Feature",geometry:n,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:d.Provisional}))return!1;this.store.updateGeometry([{id:e,geometry:n}].concat(u,h,p)),"web-mercator"===this.projection?this.lastBearing=r:"globe"===this.projection&&(this.lastBearing=r+180)}},e}(Q),te=/*#__PURE__*/function(t){function e(e,i){var o;return(o=t.call(this,e)||this).config=void 0,o.dragCoordinateResizeBehavior=void 0,o.config=e,o.dragCoordinateResizeBehavior=i,o}r(e,t);var i=e.prototype;return i.scale=function(t,e,i){if(!this.dragCoordinateResizeBehavior.isDragging()){var o=this.dragCoordinateResizeBehavior.getDraggableIndex(t,e);this.dragCoordinateResizeBehavior.startDragging(e,o)}this.dragCoordinateResizeBehavior.drag(t,"center-fixed",i)},i.reset=function(){this.dragCoordinateResizeBehavior.stopDragging()},e}(Q);function ee(t){var e=t.originX,i=t.originY,o=t.xScale,n=t.yScale;1===o&&1===n||t.coordinates.forEach(function(t){var r=_(t[0],t[1]),s=b(e+(r.x-e)*o,i+(r.y-i)*n),a=s.lat;t[0]=s.lng,t[1]=a})}var ie=/*#__PURE__*/function(t){function e(e,i,o,n,r){var s;return(s=t.call(this,e)||this).config=void 0,s.pixelDistance=void 0,s.selectionPoints=void 0,s.midPoints=void 0,s.coordinatePoints=void 0,s.minimumScale=1e-4,s.draggedCoordinate={id:null,index:-1},s.boundingBoxMaps={opposite:{0:4,1:5,2:6,3:7,4:0,5:1,6:2,7:3}},s.config=e,s.pixelDistance=i,s.selectionPoints=o,s.midPoints=n,s.coordinatePoints=r,s}r(e,t);var i=e.prototype;return i.getClosestCoordinate=function(t,e){var i,o={dist:Infinity,index:-1,isFirstOrLastPolygonCoord:!1};if("LineString"===e.type)i=e.coordinates;else{if("Polygon"!==e.type)return o;i=e.coordinates[0]}for(var n=0;n<i.length;n++){var r=this.pixelDistance.measure(t,i[n]);if(r<this.pointerDistance&&r<o.dist){var s="Polygon"===e.type&&(n===i.length-1||0===n);o.dist=r,o.index=s?0:n,o.isFirstOrLastPolygonCoord=s}}return o},i.isValidDragWebMercator=function(t,e,i){switch(t){case 0:if(e<=0||i>=0)return!1;break;case 1:if(i>=0)return!1;break;case 2:if(e>=0||i>=0)return!1;break;case 3:if(e>=0)return!1;break;case 4:if(e>=0||i<=0)return!1;break;case 5:if(i<=0)return!1;break;case 6:if(e<=0||i<=0)return!1;break;case 7:if(e<=0)return!1}return!0},i.getSelectedFeatureDataWebMercator=function(){if(!this.draggedCoordinate.id||-1===this.draggedCoordinate.index)return null;var t=this.getFeature(this.draggedCoordinate.id);if(!t)return null;var e=this.getNormalisedCoordinates(t.geometry);return{boundingBox:this.getBBoxWebMercator(e),feature:t,updatedCoords:e,selectedCoordinate:e[this.draggedCoordinate.index]}},i.centerWebMercatorDrag=function(t){var e=this.getSelectedFeatureDataWebMercator();if(!e)return null;var i=e.boundingBox,o=e.updatedCoords,n=e.selectedCoordinate,r=$t(e.feature);if(!r)return null;var s=_(n[0],n[1]),a=this.getIndexesWebMercator(i,s).closestBBoxIndex,d=_(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:a,updatedCoords:o,webMercatorCursor:d,webMercatorSelected:s,webMercatorOrigin:r}),o},i.centerFixedWebMercatorDrag=function(t){var e=this.getSelectedFeatureDataWebMercator();if(!e)return null;var i=e.boundingBox,o=e.updatedCoords,n=e.selectedCoordinate,r=$t(e.feature);if(!r)return null;var s=_(n[0],n[1]),a=this.getIndexesWebMercator(i,s).closestBBoxIndex,d=_(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:a,updatedCoords:o,webMercatorCursor:d,webMercatorSelected:s,webMercatorOrigin:r}),o},i.scaleFixedWebMercator=function(t){var e=t.webMercatorOrigin,i=t.webMercatorSelected,o=t.webMercatorCursor,n=t.updatedCoords;if(!this.isValidDragWebMercator(t.closestBBoxIndex,e.x-o.x,e.y-o.y))return null;var r=H(e,o)/H(e,i);return r<0&&(r=this.minimumScale),ee({coordinates:n,originX:e.x,originY:e.y,xScale:r,yScale:r}),n},i.oppositeFixedWebMercatorDrag=function(t){var e=this.getSelectedFeatureDataWebMercator();if(!e)return null;var i=e.boundingBox,o=e.updatedCoords,n=e.selectedCoordinate,r=_(n[0],n[1]),s=this.getIndexesWebMercator(i,r),a=s.oppositeBboxIndex,d=s.closestBBoxIndex,l={x:i[a][0],y:i[a][1]},c=_(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:d,updatedCoords:o,webMercatorCursor:c,webMercatorSelected:r,webMercatorOrigin:l}),o},i.oppositeWebMercatorDrag=function(t){var e=this.getSelectedFeatureDataWebMercator();if(!e)return null;var i=e.boundingBox,o=e.updatedCoords,n=e.selectedCoordinate,r=_(n[0],n[1]),s=this.getIndexesWebMercator(i,r),a=s.oppositeBboxIndex,d=s.closestBBoxIndex,l={x:i[a][0],y:i[a][1]},c=_(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:d,updatedCoords:o,webMercatorCursor:c,webMercatorSelected:r,webMercatorOrigin:l}),o},i.scaleWebMercator=function(t){var e=t.closestBBoxIndex,i=t.webMercatorOrigin,o=t.webMercatorSelected,n=t.webMercatorCursor,r=t.updatedCoords,s=i.x-n.x,a=i.y-n.y;if(!this.isValidDragWebMercator(e,s,a))return null;var d=1;0!==s&&1!==e&&5!==e&&(d=1-(i.x-o.x-s)/s);var l=1;return 0!==a&&3!==e&&7!==e&&(l=1-(i.y-o.y-a)/a),this.validateScale(d,l)?(d<0&&(d=this.minimumScale),l<0&&(l=this.minimumScale),this.performWebMercatorScale(r,i.x,i.y,d,l),r):null},i.getFeature=function(t){if(null===this.draggedCoordinate.id)return null;var e=this.store.getGeometryCopy(t);return"Polygon"!==e.type&&"LineString"!==e.type?null:{id:t,type:"Feature",geometry:e,properties:{}}},i.getNormalisedCoordinates=function(t){return"Polygon"===t.type?t.coordinates[0]:t.coordinates},i.validateScale=function(t,e){var i=!isNaN(t)&&e<Number.MAX_SAFE_INTEGER,o=!isNaN(e)&&e<Number.MAX_SAFE_INTEGER;return i&&o},i.performWebMercatorScale=function(t,e,i,o,n){t.forEach(function(t){var r=_(t[0],t[1]),s=b(e+(r.x-e)*o,i+(r.y-i)*n),a=s.lat;t[0]=s.lng,t[1]=a})},i.getBBoxWebMercator=function(t){var e=[Infinity,Infinity,-Infinity,-Infinity];(t=t.map(function(t){var e=_(t[0],t[1]);return[e.x,e.y]})).forEach(function(t){var i=t[0],o=t[1];i<e[0]&&(e[0]=i),o<e[1]&&(e[1]=o),i>e[2]&&(e[2]=i),o>e[3]&&(e[3]=o)});var i=e[0],o=e[1],n=e[2],r=e[3];return[[i,r],[(i+n)/2,r],[n,r],[n,r+(o-r)/2],[n,o],[(i+n)/2,o],[i,o],[i,r+(o-r)/2]]},i.getIndexesWebMercator=function(t,e){for(var i,o=Infinity,n=0;n<t.length;n++){var r=H({x:e.x,y:e.y},{x:t[n][0],y:t[n][1]});r<o&&(i=n,o=r)}if(void 0===i)throw new Error("No closest coordinate found");return{oppositeBboxIndex:this.boundingBoxMaps.opposite[i],closestBBoxIndex:i}},i.isDragging=function(){return null!==this.draggedCoordinate.id},i.startDragging=function(t,e){this.draggedCoordinate={id:t,index:e}},i.stopDragging=function(){this.draggedCoordinate={id:null,index:-1}},i.getDraggableIndex=function(t,e){var i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return-1===o.index?-1:o.index},i.drag=function(t,e,i){if(!this.draggedCoordinate.id)return!1;var o=this.getFeature(this.draggedCoordinate.id);if(!o)return!1;var n=null;if("center"===e?n=this.centerWebMercatorDrag(t):"opposite"===e?n=this.oppositeWebMercatorDrag(t):"center-fixed"===e?n=this.centerFixedWebMercatorDrag(t):"opposite-fixed"===e&&(n=this.oppositeFixedWebMercatorDrag(t)),!n)return!1;for(var r=0;r<n.length;r++){var s=n[r];if(s[0]=w(s[0],this.coordinatePrecision),s[1]=w(s[1],this.coordinatePrecision),!W(s,this.coordinatePrecision))return!1}var a=this.midPoints.getUpdated(n)||[],l=this.selectionPoints.getUpdated(n)||[],c=this.coordinatePoints.getUpdated(o.id,n)||[],h={type:o.geometry.type,coordinates:"Polygon"===o.geometry.type?[n]:n};return!(i&&!i({id:this.draggedCoordinate.id,type:"Feature",geometry:h,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:d.Provisional}).valid||(this.store.updateGeometry([{id:this.draggedCoordinate.id,geometry:h}].concat(l,a,c)),0))},e}(Q),oe={deselect:"Escape",delete:"Delete",rotate:["Control","r"],scale:["Control","s"]},ne={pointerOver:"move",dragStart:"move",dragEnd:"move",insertMidpoint:"crosshair"},re=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="select",i.allowManualDeselection=!0,i.dragEventThrottle=5,i.dragEventCount=0,i.selected=[],i.flags={},i.keyEvents=oe,i.cursors=ne,i.validations={},i.selectionPoints=void 0,i.midPoints=void 0,i.coordinateSnap=void 0,i.featuresAtMouseEvent=void 0,i.pixelDistance=void 0,i.clickBoundingBox=void 0,i.dragFeature=void 0,i.dragCoordinate=void 0,i.rotateFeature=void 0,i.scaleFeature=void 0,i.dragCoordinateResizeFeature=void 0,i.coordinatePoints=void 0,i.lineSnap=void 0,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){if(t.prototype.updateOptions.call(this,e),this.cursors=e&&e.cursors?n({},this.cursors,e.cursors):ne,null===(null==e?void 0:e.keyEvents)?this.keyEvents={deselect:null,delete:null,rotate:null,scale:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),void 0!==(null==e?void 0:e.dragEventThrottle)&&(this.dragEventThrottle=e.dragEventThrottle),void 0!==(null==e?void 0:e.allowManualDeselection)&&(this.allowManualDeselection=e.allowManualDeselection),null!=e&&e.flags)for(var i in this.flags=n({},this.flags,e.flags),this.validations={},this.flags){var o=this.flags[i].feature;o&&o.validation&&(this.validations[i]=o.validation)}},i.selectFeature=function(t){this.select(t,!1)},i.setSelecting=function(){if("started"!==this._state)throw new Error("Mode must be started to move to selecting state");this._state="selecting"},i.registerBehaviors=function(t){this.pixelDistance=new it(t),this.clickBoundingBox=new et(t),this.featuresAtMouseEvent=new Xt(t,this.clickBoundingBox,this.pixelDistance),this.selectionPoints=new Yt(t),this.coordinatePoints=new _t(t),this.midPoints=new Vt(t,this.selectionPoints,this.coordinatePoints),this.coordinateSnap=new ot(t,this.pixelDistance,this.clickBoundingBox),this.lineSnap=new Ct(t,this.pixelDistance,this.clickBoundingBox),this.rotateFeature=new Qt(t,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragFeature=new Ht(t,this.featuresAtMouseEvent,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragCoordinate=new qt(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints,this.coordinateSnap,this.lineSnap),this.dragCoordinateResizeFeature=new ie(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints),this.scaleFeature=new te(t,this.dragCoordinateResizeFeature)},i.deselectFeature=function(){this.deselect()},i.deselect=function(){var t=this,e=this.selected.filter(function(e){return t.store.has(e)}).map(function(t){return{id:t,property:l.SELECTED,value:!1}});this.store.updateProperty(e),this.onDeselect(this.selected[0]),this.selected=[],this.selectionPoints.delete(),this.midPoints.delete()},i.deleteSelected=function(){this.store.delete(this.selected),this.selected=[]},i.onRightClick=function(t){var e=this;if(this.selectionPoints.ids.length){var i,o=Infinity;if(this.selectionPoints.ids.forEach(function(n){var r=e.store.getGeometryCopy(n),s=e.pixelDistance.measure(t,r.coordinates);s<e.pointerDistance&&s<o&&(o=s,i=e.store.getPropertiesCopy(n))}),i){var n=i.selectionPointFeatureId,r=i.index,s=this.store.getPropertiesCopy(n),a=this.flags[s.mode],l=this.validations[s.mode];if(a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.deletable){var c,h=this.store.getGeometryCopy(n);if("Polygon"===h.type){if((c=h.coordinates[0]).length<=4)return}else if("LineString"===h.type&&(c=h.coordinates).length<=2)return;if(c){if("Polygon"!==h.type||0!==r&&r!==c.length-1?c.splice(r,1):(c.shift(),c.pop(),c.push([c[0][0],c[0][1]])),l&&!l({id:n,type:"Feature",geometry:h,properties:s},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Commit}).valid)return;var u=[].concat(this.midPoints.ids,this.selectionPoints.ids);this.store.delete(u),this.store.updateGeometry([{id:n,geometry:h}]),s.coordinatePointIds&&this.coordinatePoints.createOrUpdate(n),this.selectionPoints.create(c,h.type,n),a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.midpoints&&this.midPoints.create(c,n,this.coordinatePrecision)}}}}},i.select=function(t,e){if(void 0===e&&(e=!0),this.selected[0]!==t){var i=this.store.getPropertiesCopy(t),o=this.flags[i.mode];if(o&&o.feature){var n=this.selected[0];if(n){if(n===t)return;this.deselect()}e&&this.setCursor(this.cursors.pointerOver),this.selected=[t],this.store.updateProperty([{id:t,property:l.SELECTED,value:!0}]),this.onSelect(t);var r=this.store.getGeometryCopy(t),s=r.type,a=r.coordinates;if("LineString"===s||"Polygon"===s){var d="LineString"===s?a:a[0];d&&o&&o.feature.coordinates&&(this.selectionPoints.create(d,s,t),o.feature.coordinates.midpoints&&this.midPoints.create(d,t,this.coordinatePrecision))}}}},i.onLeftClick=function(t){var e=this.featuresAtMouseEvent.find(t,this.selected.length>0),i=e.clickedFeature,o=e.clickedMidPoint;if(this.selected.length&&o)this.midPoints.insert(this.selected[0],o.id,this.coordinatePrecision);else if(i&&i.id)this.select(i.id,!0);else if(this.selected.length&&this.allowManualDeselection)return void this.deselect()},i.start=function(){this.setStarted(),this.setSelecting()},i.stop=function(){this.cleanUp(),this.setStarted(),this.setStopped()},i.onClick=function(t){"right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)},i.canScale=function(t){return this.keyEvents.scale&&this.keyEvents.scale.every(function(e){return t.heldKeys.includes(e)})},i.canRotate=function(t){return this.keyEvents.rotate&&this.keyEvents.rotate.every(function(e){return t.heldKeys.includes(e)})},i.preventDefaultKeyEvent=function(t){var e=this.canRotate(t),i=this.canScale(t);(e||i)&&t.preventDefault()},i.onKeyDown=function(t){this.preventDefaultKeyEvent(t)},i.onKeyUp=function(t){if(this.preventDefaultKeyEvent(t),this.keyEvents.delete&&t.key===this.keyEvents.delete){if(!this.selected.length)return;var e=this.selected[0];this.onDeselect(this.selected[0]),this.coordinatePoints.deletePointsByFeatureIds([e]),this.deleteSelected(),this.selectionPoints.delete(),this.midPoints.delete()}else this.keyEvents.deselect&&t.key===this.keyEvents.deselect&&this.cleanUp()},i.cleanUp=function(){this.selected.length&&this.deselect()},i.onDragStart=function(t,e){if(this.allowPointerEvent(this.pointerEvents.onDragStart,t)&&this.selected.length){var i=this.store.getPropertiesCopy(this.selected[0]),o=this.flags[i.mode];if(o&&o.feature&&(o.feature.draggable||o.feature.coordinates&&o.feature.coordinates.draggable||o.feature.coordinates&&o.feature.coordinates.resizable||o.feature.coordinates&&"object"==typeof o.feature.coordinates.midpoints&&o.feature.coordinates.midpoints.draggable)){this.dragEventCount=0;var n=this.selected[0],r=this.dragCoordinate.getDraggableIndex(t,n);if(o&&o.feature&&o.feature.coordinates&&(o.feature.coordinates.draggable||o.feature.coordinates.resizable)&&-1!==r)return this.setCursor(this.cursors.dragStart),o.feature.coordinates.resizable?this.dragCoordinateResizeFeature.startDragging(n,r):this.dragCoordinate.startDragging(n,r),void e(!1);if(o&&o.feature&&o.feature.coordinates&&"object"==typeof o.feature.coordinates.midpoints&&o.feature.coordinates.midpoints.draggable){var s=this.featuresAtMouseEvent.find(t,this.selected.length>0).clickedMidPoint;if(this.selected.length&&s){this.midPoints.insert(n,s.id,this.coordinatePrecision);var a=this.dragCoordinate.getDraggableIndex(t,n);return this.dragCoordinate.startDragging(n,a),void e(!1)}}return o&&o.feature&&o.feature.draggable&&this.dragFeature.canDrag(t,n)?(this.setCursor(this.cursors.dragStart),this.dragFeature.startDragging(t,n),void e(!1)):void 0}}},i.onDrag=function(t,e){if(this.allowPointerEvent(this.pointerEvents.onDrag,t)){var i=this.selected[0];if(i){var o=this.store.getPropertiesCopy(i),n=this.flags[o.mode],r=!0===(n&&n.feature&&n.feature.selfIntersectable);if(this.dragEventCount++,this.dragEventCount%this.dragEventThrottle!=0){var s=this.validations[o.mode];if(n&&n.feature&&n.feature.rotateable&&this.canRotate(t))return e(!1),void this.rotateFeature.rotate(t,i,s);if(n&&n.feature&&n.feature.scaleable&&this.canScale(t))return e(!1),void this.scaleFeature.scale(t,i,s);if(this.dragCoordinateResizeFeature.isDragging()&&n.feature&&n.feature.coordinates&&n.feature.coordinates.resizable){if("globe"===this.projection)throw new Error("Globe is currently unsupported projection for resizable");return e(!1),void this.dragCoordinateResizeFeature.drag(t,n.feature.coordinates.resizable,s)}if(this.dragCoordinate.isDragging()){var a,d=null==(a=n.feature)||null==(a=a.coordinates)?void 0:a.snappable,l={toCoordinate:!1};return!0===d?l={toCoordinate:!0}:"object"==typeof d&&(l=d),void this.dragCoordinate.drag(t,r,s,l)}this.dragFeature.isDragging()?this.dragFeature.drag(t,s):e(!0)}}}},i.onDragEnd=function(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&(this.setCursor(this.cursors.dragEnd),this.dragCoordinate.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:"dragCoordinate"}):this.dragFeature.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:"dragFeature"}):this.dragCoordinateResizeFeature.isDragging()&&this.onFinish(this.selected[0],{mode:this.mode,action:"dragCoordinateResize"}),this.dragCoordinate.stopDragging(),this.dragFeature.stopDragging(),this.dragCoordinateResizeFeature.stopDragging(),this.rotateFeature.reset(),this.scaleFeature.reset(),e(!0))},i.onMouseMove=function(t){var e=this;if(this.selected.length){if(!this.dragFeature.isDragging()){var i=!1;this.midPoints.ids.forEach(function(o){if(!i){var n=e.store.getGeometryCopy(o);e.pixelDistance.measure(t,n.coordinates)<e.pointerDistance&&(i=!0)}});var o=!1;if(this.selectionPoints.ids.forEach(function(n){var r=e.store.getGeometryCopy(n);e.pixelDistance.measure(t,r.coordinates)<e.pointerDistance&&(i=!1,o=!0)}),i)this.setCursor(this.cursors.insertMidpoint);else{var n=this.featuresAtMouseEvent.find(t,!0).clickedFeature;this.setCursor(this.selected.length>0&&(n&&n.id===this.selected[0]||o)?this.cursors.pointerOver:"unset")}}}else this.setCursor("unset")},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.properties.mode===this.mode&&"Point"===t.geometry.type){if(t.properties.selectionPoint)return e.pointColor=this.getHexColorStylingValue(this.styles.selectionPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectionPointOutlineColor,e.pointOutlineColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.selectionPointWidth,e.pointWidth,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectionPointOutlineWidth,2,t),e.zIndex=30,e;if(t.properties.midPoint)return e.pointColor=this.getHexColorStylingValue(this.styles.midPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.midPointOutlineColor,e.pointOutlineColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.midPointWidth,4,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.midPointOutlineWidth,2,t),e.zIndex=50,e}else if(t.properties[l.SELECTED]){if("Polygon"===t.geometry.type)return e.polygonFillColor=this.getHexColorStylingValue(this.styles.selectedPolygonColor,e.polygonFillColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.selectedPolygonOutlineWidth,e.polygonOutlineWidth,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.selectedPolygonOutlineColor,e.polygonOutlineColor,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.selectedPolygonFillOpacity,e.polygonFillOpacity,t),e.zIndex=h,e;if("LineString"===t.geometry.type)return e.lineStringColor=this.getHexColorStylingValue(this.styles.selectedLineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.selectedLineStringWidth,e.lineStringWidth,t),e.zIndex=h,e;if("Point"===t.geometry.type)return e.pointWidth=this.getNumericStylingValue(this.styles.selectedPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.selectedPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectedPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectedPointOutlineWidth,e.pointOutlineWidth,t),e.zIndex=h,e}return e},i.afterFeatureUpdated=function(t){if(this.selected.length&&t.id===this.selected[0]){var e,i,o=this.flags[t.properties.mode];if(null==o||null==(e=o.feature)||!e.coordinates)return;var n,r=t.geometry.type,s=t.id;if(this.selectionPoints.delete(),this.midPoints.delete(),"Polygon"===r)n=t.geometry.coordinates[0];else{if("LineString"!==r)return;n=t.geometry.coordinates}this.selectionPoints.create(n,r,s),null!=o&&null!=(i=o.feature)&&null!=(i=i.coordinates)&&i.midpoints&&this.midPoints.create("Polygon"===r?t.geometry.coordinates[0]:t.geometry.coordinates,s,this.coordinatePrecision)}},e}(P),se=/*#__PURE__*/function(t){function e(){for(var e,i=arguments.length,o=new Array(i),n=0;n<i;n++)o[n]=arguments[n];return(e=t.call.apply(t,[this].concat(o))||this).type=f.Static,e.mode="static",e}r(e,t);var i=e.prototype;return i.start=function(){},i.stop=function(){},i.onKeyUp=function(){},i.onKeyDown=function(){},i.onClick=function(){},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.onMouseMove=function(){},i.cleanUp=function(){},i.styleFeature=function(){return n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0})},e}(C);function ae(t,e,i,o,n){for(;o>i;){if(o-i>600){var r=o-i+1,s=e-i+1,a=Math.log(r),d=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*d*(r-d)/r)*(s-r/2<0?-1:1);ae(t,e,Math.max(i,Math.floor(e-s*d/r+l)),Math.min(o,Math.floor(e+(r-s)*d/r+l)),n)}var c=t[e],h=i,u=o;for(de(t,i,e),n(t[o],c)>0&&de(t,i,o);h<u;){for(de(t,h,u),h++,u--;n(t[h],c)<0;)h++;for(;n(t[u],c)>0;)u--}0===n(t[i],c)?de(t,i,u):de(t,++u,o),u<=e&&(i=u+1),e<=u&&(o=u-1)}}function de(t,e,i){var o=t[e];t[e]=t[i],t[i]=o}function le(t,e){ce(t,0,t.children.length,e,t)}function ce(t,e,i,o,n){n||(n=me([])),n.minX=Infinity,n.minY=Infinity,n.maxX=-Infinity,n.maxY=-Infinity;for(var r=e;r<i;r++){var s=t.children[r];he(n,t.leaf?o(s):s)}return n}function he(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function ue(t,e){return t.minX-e.minX}function pe(t,e){return t.minY-e.minY}function ge(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function fe(t){return t.maxX-t.minX+(t.maxY-t.minY)}function ye(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function ve(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function me(t){return{children:t,height:1,leaf:!0,minX:Infinity,minY:Infinity,maxX:-Infinity,maxY:-Infinity}}function Ce(t,e,i,o,n){for(var r=[e,i];r.length;)if(!((i=r.pop())-(e=r.pop())<=o)){var s=e+Math.ceil((i-e)/o/2)*o;ae(t,s,e,i,n),r.push(e,s,s,i)}}var Pe=/*#__PURE__*/function(){function t(t){this._maxEntries=void 0,this._minEntries=void 0,this.data=void 0,this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}var e=t.prototype;return e.search=function(t){var e=this.data,i=[];if(!ve(t,e))return i;for(var o=this.toBBox,n=[];e;){for(var r=0;r<e.children.length;r++){var s=e.children[r],a=e.leaf?o(s):s;ve(t,a)&&(e.leaf?i.push(s):ye(t,a)?this._all(s,i):n.push(s))}e=n.pop()}return i},e.collides=function(t){var e=this.data;if(ve(t,e))for(var i=[];e;){for(var o=0;o<e.children.length;o++){var n=e.children[o],r=e.leaf?this.toBBox(n):n;if(ve(t,r)){if(e.leaf||ye(t,r))return!0;i.push(n)}}e=i.pop()}return!1},e.load=function(t){if(t.length<this._minEntries)for(var e=0;e<t.length;e++)this.insert(t[e]);else{var i=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===i.height)this._splitRoot(this.data,i);else{if(this.data.height<i.height){var o=this.data;this.data=i,i=o}this._insert(i,this.data.height-i.height-1,!0)}else this.data=i}},e.insert=function(t){this._insert(t,this.data.height-1)},e.clear=function(){this.data=me([])},e.remove=function(t){for(var e,i,o=this.data,n=this.toBBox(t),r=[],s=[],a=!1;o||r.length;){if(o||(o=r.pop(),i=r[r.length-1],e=s.pop(),a=!0),o.leaf){var d=o.children.indexOf(t);-1!==d&&(o.children.splice(d,1),r.push(o),this._condense(r))}a||o.leaf||!ye(o,n)?i?(e++,o=i.children[e],a=!1):o=null:(r.push(o),s.push(e),e=0,i=o,o=o.children[0])}},e.toBBox=function(t){return t},e.compareMinX=function(t,e){return t.minX-e.minX},e.compareMinY=function(t,e){return t.minY-e.minY},e._all=function(t,e){for(var i=[];t;)t.leaf?e.push.apply(e,t.children):i.push.apply(i,t.children),t=i.pop();return e},e._build=function(t,e,i,o){var n,r=i-e+1,s=this._maxEntries;if(r<=s)return le(n=me(t.slice(e,i+1)),this.toBBox),n;o||(o=Math.ceil(Math.log(r)/Math.log(s)),s=Math.ceil(r/Math.pow(s,o-1))),(n=me([])).leaf=!1,n.height=o;var a=Math.ceil(r/s),d=a*Math.ceil(Math.sqrt(s));Ce(t,e,i,d,this.compareMinX);for(var l=e;l<=i;l+=d){var c=Math.min(l+d-1,i);Ce(t,l,c,a,this.compareMinY);for(var h=l;h<=c;h+=a){var u=Math.min(h+a-1,c);n.children.push(this._build(t,h,u,o-1))}}return le(n,this.toBBox),n},e._chooseSubtree=function(t,e,i,o){for(;o.push(e),!e.leaf&&o.length-1!==i;){for(var n=Infinity,r=Infinity,s=void 0,a=0;a<e.children.length;a++){var d=e.children[a],l=ge(d),c=(h=t,u=d,(Math.max(u.maxX,h.maxX)-Math.min(u.minX,h.minX))*(Math.max(u.maxY,h.maxY)-Math.min(u.minY,h.minY))-l);c<r?(r=c,n=l<n?l:n,s=d):c===r&&l<n&&(n=l,s=d)}e=s||e.children[0]}var h,u;return e},e._insert=function(t,e,i){var o=i?t:this.toBBox(t),n=[],r=this._chooseSubtree(o,this.data,e,n);for(r.children.push(t),he(r,o);e>=0&&n[e].children.length>this._maxEntries;)this._split(n,e),e--;this._adjustParentBBoxes(o,n,e)},e._split=function(t,e){var i=t[e],o=i.children.length,n=this._minEntries;this._chooseSplitAxis(i,n,o);var r=this._chooseSplitIndex(i,n,o),s=me(i.children.splice(r,i.children.length-r));s.height=i.height,s.leaf=i.leaf,le(i,this.toBBox),le(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(i,s)},e._splitRoot=function(t,e){this.data=me([t,e]),this.data.height=t.height+1,this.data.leaf=!1,le(this.data,this.toBBox)},e._chooseSplitIndex=function(t,e,i){for(var o,n,r,s,a,d,l,c=Infinity,h=Infinity,u=e;u<=i-e;u++){var p=ce(t,0,u,this.toBBox),g=ce(t,u,i,this.toBBox),f=(n=p,r=g,s=Math.max(n.minX,r.minX),a=Math.max(n.minY,r.minY),d=Math.min(n.maxX,r.maxX),l=Math.min(n.maxY,r.maxY),Math.max(0,d-s)*Math.max(0,l-a)),y=ge(p)+ge(g);f<c?(c=f,o=u,h=y<h?y:h):f===c&&y<h&&(h=y,o=u)}return o||i-e},e._chooseSplitAxis=function(t,e,i){var o=t.leaf?this.compareMinX:ue,n=t.leaf?this.compareMinY:pe;this._allDistMargin(t,e,i,o)<this._allDistMargin(t,e,i,n)&&t.children.sort(o)},e._allDistMargin=function(t,e,i,o){t.children.sort(o);for(var n=this.toBBox,r=ce(t,0,e,n),s=ce(t,i-e,i,n),a=fe(r)+fe(s),d=e;d<i-e;d++){var l=t.children[d];he(r,t.leaf?n(l):l),a+=fe(r)}for(var c=i-e-1;c>=e;c--){var h=t.children[c];he(s,t.leaf?n(h):h),a+=fe(s)}return a},e._adjustParentBBoxes=function(t,e,i){for(var o=i;o>=0;o--)he(e[o],t)},e._condense=function(t){for(var e,i=t.length-1;i>=0;i--)0===t[i].children.length?i>0?(e=t[i-1].children).splice(e.indexOf(t[i]),1):this.clear():le(t[i],this.toBBox)},t}(),Ie=/*#__PURE__*/function(){function t(t){this.tree=void 0,this.idToNode=void 0,this.nodeToId=void 0,this.tree=new Pe(t&&t.maxEntries?t.maxEntries:9),this.idToNode=new Map,this.nodeToId=new Map}var e=t.prototype;return e.setMaps=function(t,e){this.idToNode.set(t.id,e),this.nodeToId.set(e,t.id)},e.toBBox=function(t){var e,i=[],o=[];if("Polygon"===t.geometry.type)e=t.geometry.coordinates[0];else if("LineString"===t.geometry.type)e=t.geometry.coordinates;else{if("Point"!==t.geometry.type)throw new Error("Not a valid feature to turn into a bounding box");e=[t.geometry.coordinates]}for(var n=0;n<e.length;n++)o.push(e[n][1]),i.push(e[n][0]);var r=Math.min.apply(Math,o),s=Math.max.apply(Math,o);return{minX:Math.min.apply(Math,i),minY:r,maxX:Math.max.apply(Math,i),maxY:s}},e.insert=function(t){if(this.idToNode.get(String(t.id)))throw new Error("Feature already exists");var e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)},e.load=function(t){var e=this,i=[],o=new Set;t.forEach(function(t){var n=e.toBBox(t);if(e.setMaps(t,n),o.has(String(t.id)))throw new Error("Duplicate feature ID found "+t.id);o.add(String(t.id)),i.push(n)}),this.tree.load(i)},e.update=function(t){this.remove(t.id);var e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)},e.remove=function(t){var e=this.idToNode.get(t);if(!e)throw new Error(t+" not inserted into the spatial index");this.tree.remove(e)},e.clear=function(){this.tree.clear()},e.search=function(t){var e=this;return this.tree.search(this.toBBox(t)).map(function(t){return e.nodeToId.get(t)})},e.collides=function(t){return this.tree.collides(this.toBBox(t))},t}(),xe={getId:function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var e=16*Math.random()|0;return("x"==t?e:3&e|8).toString(16)})},isValidId:function(t){return"string"==typeof t&&36===t.length}},Se=/*#__PURE__*/function(){function t(t){this.idStrategy=void 0,this.tracked=void 0,this.spatialIndex=void 0,this.store=void 0,this._onChange=function(){},this.store={},this.spatialIndex=new Ie,this.tracked=!t||!1!==t.tracked,this.idStrategy=t&&t.idStrategy?t.idStrategy:xe}var e=t.prototype;return e.clone=function(t){return JSON.parse(JSON.stringify(t))},e.getId=function(){return this.idStrategy.getId()},e.has=function(t){return Boolean(this.store[t])},e.load=function(t,e,i,o){var n=this;if(0===t.length)return[];var r=this.clone(t),s=[],a=[];r=r.filter(function(t){null==t.id&&(t.id=n.idStrategy.getId());var i=t.id;if(e){var o=e(t);if(!o.valid)return s.push({id:i,valid:!1,reason:o.reason}),!1}if(n.tracked){if(t.properties.createdAt){if(!g(t.properties.createdAt))return s.push({id:t.id,valid:!1,reason:"createdAt is not a valid numeric timestamp"}),!1}else t.properties.createdAt=+new Date;if(t.properties.updatedAt){if(!g(t.properties.updatedAt))return s.push({id:t.id,valid:!1,reason:"updatedAt is not a valid numeric timestamp"}),!1}else t.properties.updatedAt=+new Date}return n.has(i)?(s.push({id:i,valid:!1,reason:"Feature already exists with this id: "+i}),!1):(n.store[i]=t,a.push(t),s.push({id:i,valid:!0}),!0)}),this.spatialIndex.load(r);var d=a.map(function(t){return t.id});return d.length>0&&(this._onChange(d,"create",o),i&&a.forEach(function(t){i(t)})),s},e.search=function(t,e){var i=this,o=this.spatialIndex.search(t).map(function(t){return i.store[t]});return this.clone(e?o.filter(e):o)},e.registerOnChange=function(t){this._onChange=function(e,i,o){t(e,i,o)}},e.getGeometryCopy=function(t){var e=this.store[t];if(!e)throw new Error("No feature with this id ("+t+"), can not get geometry copy");return this.clone(e.geometry)},e.getPropertiesCopy=function(t){var e=this.store[t];if(!e)throw new Error("No feature with this id ("+t+"), can not get properties copy");return this.clone(e.properties)},e.updateProperty=function(t,e){var i=this,o=[];t.forEach(function(t){var e=t.id,n=t.property,r=t.value,s=i.store[e];if(!s)throw new Error("No feature with this ("+e+"), can not update geometry");o.push(e),void 0===r?delete s.properties[n]:s.properties[n]=r,i.tracked&&(s.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(o,"update",e)},e.updateGeometry=function(t,e){var i=this,o=[];t.forEach(function(t){var e=t.id,n=t.geometry;o.push(e);var r=i.store[e];if(!r)throw new Error("No feature with this ("+e+"), can not update geometry");r.geometry=i.clone(n),i.spatialIndex.update(r),i.tracked&&(r.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(o,"update",e)},e.create=function(t,e){var i=this,o=[];return t.forEach(function(t){var e,r=t.geometry,s=t.properties,a=n({},s);i.tracked&&(e=+new Date,s?(a.createdAt="number"==typeof s.createdAt?s.createdAt:e,a.updatedAt="number"==typeof s.updatedAt?s.updatedAt:e):a={createdAt:e,updatedAt:e});var d=i.getId(),l={id:d,type:"Feature",geometry:r,properties:a};i.store[d]=l,i.spatialIndex.insert(l),o.push(d)}),this._onChange&&this._onChange([].concat(o),"create",e),o},e.delete=function(t,e){var i=this;t.forEach(function(t){if(!i.store[t])throw new Error("No feature with id "+t+", can not delete");delete i.store[t],i.spatialIndex.remove(t)}),this._onChange&&this._onChange([].concat(t),"delete",e)},e.copy=function(t){return this.clone(this.store[t])},e.copyAll=function(){var t=this;return this.clone(Object.keys(this.store).map(function(e){return t.store[e]}))},e.copyAllWhere=function(t){var e=this;return this.clone(Object.keys(this.store).map(function(t){return e.store[t]}).filter(function(e){return e.properties&&t(e.properties)}))},e.clear=function(){this.store={},this.spatialIndex.clear()},e.size=function(){return Object.keys(this.store).length},t}();function Ee(t){var e=t.coordinates,i=0;if(e&&e.length>0){i+=Math.abs(De(e[0]));for(var o=1;o<e.length;o++)i-=Math.abs(De(e[o]))}return i}var Me=20294876564838.72,we=Math.PI/180;function De(t){var e=t.length;if(e<=2)return 0;for(var i=0,o=0;o<e;)i+=(t[o+2>=e?(o+2)%e:o+2][0]*we-t[o][0]*we)*Math.sin(t[o+1===e?0:o+1][1]*we),o++;return i*Me}var Fe="Feature is smaller than the minimum area",Oe="Feature is not a Polygon or LineString",_e="Feature intersects itself";function be(t,e,i){var o=at(t,e),n=at(e,i)-o;return n<0&&(n+=360),180-Math.abs(n-90-90)}var ke={cancel:"Escape",finish:"Enter"},Ne={start:"crosshair",close:"pointer"},Te=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="angled-rectangle",i.currentCoordinate=0,i.currentId=void 0,i.keyEvents=ke,i.cursors=Ne,i.mouseMove=!1,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents))},i.close=function(){if(void 0!==this.currentId){this.store.updateProperty([{id:this.currentId,property:c.CURRENTLY_DRAWING,value:void 0}]);var t=this.currentId;this.currentCoordinate=0,this.currentId=void 0,"drawing"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onMouseMove=function(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0!==this.currentId&&0!==this.currentCoordinate){var e,i,o,n,r,s=this.store.getGeometryCopy(this.currentId).coordinates[0];if(1===this.currentCoordinate){var a=1/Math.pow(10,this.coordinatePrecision-1),l=Math.max(1e-6,a);e=[s[0],[t.lng,t.lat],[t.lng,t.lat-l],s[0]]}else if(2===this.currentCoordinate){var c=s[0],h=s[1],u=Lt(c,h,this.coordinatePrecision,this.project,this.unproject),p=_(c[0],c[1]),g=_(u[0],u[1]),f=_(h[0],h[1]),y=_(t.lng,t.lat),v=H(y,p)<H(y,f),m=be(p,g,y),C=v?90-m:be(p,g,y)-90,P=H(g,y),I=Math.cos(S(C))*P,x=at(p,f)+("right"==((r=((n=y).x-(o=f).x)*((i=p).y-o.y)-(n.y-o.y)*(i.x-o.x))>1e-10?"left":r<-1e-10?"right":"left")?-90:90),E=rt(p,I,x),M=rt(f,I,x),w=b(E.x,E.y),D=b(M.x,M.y);e=[s[0],s[1],[D.lng,D.lat],[w.lng,w.lat],s[0]]}e&&this.updatePolygonGeometry(this.currentId,e,d.Provisional)}},i.updatePolygonGeometry=function(t,e,i){var o={type:"Polygon",coordinates:[e]};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))},i.onClick=function(t){if("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){var e,i=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:(e={mode:this.mode},e[c.CURRENTLY_DRAWING]=!0,e)}]);this.currentId=i[0],this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){var o=this.store.getGeometryCopy(this.currentId);if(pt([t.lng,t.lat],o.coordinates[0][0]))return;if(!this.updatePolygonGeometry(this.currentId,[o.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],o.coordinates[0][0]],d.Commit))return;this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentId&&this.close()},i.onKeyUp=function(t){if(t.key===this.keyEvents.cancel)this.cleanUp();else if(t.key===this.keyEvents.finish){if(this.currentCoordinate<2)return void this.cleanUp();this.close()}},i.onKeyDown=function(){},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.cleanUp=function(){try{this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentId=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted()},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.properties.mode===this.mode&&"Polygon"===t.geometry.type&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=h),e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return Y(t,e.coordinatePrecision)})},i.afterFeatureUpdated=function(t){this.currentId===t.id&&(this.currentId=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted())},e}(C);function je(t,e,i){return(e.x-t.x)*(i.y-t.y)-(e.y-t.y)*(i.x-t.x)<=0}var We={cancel:"Escape",finish:"Enter"},Be={start:"crosshair",close:"pointer"},Ge=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="sector",i.currentCoordinate=0,i.currentId=void 0,i.keyEvents=We,i.direction=void 0,i.arcPoints=64,i.cursors=Be,i.mouseMove=!1,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),null!=e&&e.arcPoints&&(this.arcPoints=e.arcPoints)},i.close=function(){if(void 0!==this.currentId){var t=q(this.store.getGeometryCopy(this.currentId));t&&this.store.updateGeometry([{id:this.currentId,geometry:t}]),this.store.updateProperty([{id:this.currentId,property:c.CURRENTLY_DRAWING,value:void 0}]);var e=this.currentId;this.currentCoordinate=0,this.currentId=void 0,this.direction=void 0,"drawing"===this.state&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onMouseMove=function(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0!==this.currentId&&0!==this.currentCoordinate){var e,i=this.store.getGeometryCopy(this.currentId).coordinates[0];if(1===this.currentCoordinate){var o=1/Math.pow(10,this.coordinatePrecision-1),n=Math.max(1e-6,o);e=[i[0],[t.lng,t.lat],[t.lng,t.lat-n],i[0]]}else if(2===this.currentCoordinate){var r=i[0],s=i[1],a=[t.lng,t.lat],l=_(r[0],r[1]),c=_(s[0],s[1]),h=_(a[0],a[1]);if(void 0===this.direction){var u=je(l,c,h);this.direction=u?"clockwise":"anticlockwise"}var p,g=H(l,c),f=at(l,c),y=at(l,h),v=this.arcPoints,m=[r],C=dt(f),P=dt(y);"anticlockwise"===this.direction?(p=P-C)<0&&(p+=360):(p=C-P)<0&&(p+=360);var I=("anticlockwise"===this.direction?1:-1)*p/v;m.push(s);for(var x=0;x<=v;x++){var S=rt(l,g,C+x*I),E=b(S.x,S.y),M=E.lat,D=[w(E.lng,this.coordinatePrecision),w(M,this.coordinatePrecision)];D[0]!==m[m.length-1][0]&&D[1]!==m[m.length-1][1]&&m.push(D)}m.push(r),e=[].concat(m)}e&&this.updatePolygonGeometry(this.currentId,e,d.Provisional)}},i.updatePolygonGeometry=function(t,e,i){var o={type:"Polygon",coordinates:[e]};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))},i.onClick=function(t){if("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){var e,i=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:(e={mode:this.mode},e[c.CURRENTLY_DRAWING]=!0,e)}]);this.currentId=i[0],this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentId){var o=this.store.getGeometryCopy(this.currentId);if(pt([t.lng,t.lat],o.coordinates[0][0]))return;if(!this.updatePolygonGeometry(this.currentId,[o.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],o.coordinates[0][0]],d.Commit))return;this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentId&&this.close()},i.onKeyUp=function(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()},i.onKeyDown=function(){},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.cleanUp=function(){try{this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentId=void 0,this.direction=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted()},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.properties.mode===this.mode&&"Polygon"===t.geometry.type&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=h),e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return Y(t,e.coordinatePrecision)})},i.afterFeatureUpdated=function(t){this.currentId===t.id&&(this.currentId=void 0,this.direction=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted())},e}(C),Re={cancel:"Escape",finish:"Enter"},Le={start:"crosshair",close:"pointer"},Ae=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="sensor",i.currentCoordinate=0,i.currentId=void 0,i.currentInitialArcId=void 0,i.currentStartingPointId=void 0,i.keyEvents=Re,i.direction=void 0,i.arcPoints=64,i.cursors=Le,i.mouseMove=!1,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors)),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),null!=e&&e.arcPoints&&(this.arcPoints=e.arcPoints)},i.close=function(){if(void 0!==this.currentStartingPointId){var t=this.currentStartingPointId,e=this.currentInitialArcId,i=this.currentId;if(t&&this.store.delete([t]),e&&this.store.delete([e]),this.currentId){var o=q(this.store.getGeometryCopy(this.currentId));o&&this.store.updateGeometry([{id:this.currentId,geometry:o}]),this.store.updateProperty([{id:this.currentId,property:c.CURRENTLY_DRAWING,value:void 0}])}this.currentCoordinate=0,this.currentStartingPointId=void 0,this.currentInitialArcId=void 0,this.currentId=void 0,this.direction=void 0,"drawing"===this.state&&this.setStarted(),i&&this.onFinish(i,{mode:this.mode,action:"draw"})}},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onMouseMove=function(t){if(this.mouseMove=!0,this.setCursor(this.cursors.start),void 0!==this.currentInitialArcId&&void 0!==this.currentStartingPointId&&0!==this.currentCoordinate)if(2===this.currentCoordinate){var e=this.store.getGeometryCopy(this.currentInitialArcId).coordinates,i=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,o=e[0],n=[t.lng,t.lat],r=_(o[0],o[1]),s=_(n[0],n[1]),a=_(i[0],i[1]),l=H(a,r);if(void 0===this.direction){var h=je(a,r,s);this.direction=h?"clockwise":"anticlockwise"}var u,p=at(a,r),g=at(a,s),f=this.arcPoints,y=[o],v=dt(p),m=dt(g);"anticlockwise"===this.direction?(u=m-v)<0&&(u+=360):(u=v-m)<0&&(u+=360);for(var C=("anticlockwise"===this.direction?1:-1)*u/f,P=0;P<=f;P++){var I=rt(a,l,v+P*C),x=b(I.x,I.y),S=x.lat,E=[w(x.lng,this.coordinatePrecision),w(S,this.coordinatePrecision)];E[0]!==y[y.length-1][0]&&E[1]!==y[y.length-1][1]&&y.push(E)}this.updateLineStringGeometry(this.currentInitialArcId,y,d.Provisional)}else if(3===this.currentCoordinate){var M=this.store.getGeometryCopy(this.currentInitialArcId).coordinates;if(M.length<2)return;if(!this.direction)return;var D=this.store.getGeometryCopy(this.currentStartingPointId).coordinates,F=M[0],O=M[M.length-1],k=_(t.lng,t.lat),N=_(F[0],F[1]),T=_(O[0],O[1]),j=_(D[0],D[1]),W=H(j,N),B=H(j,k)<W?N:k,G=at(j,k),R=at(j,N),L=at(j,T),A=dt(R),U=dt(L),V=dt(G);if(this.notInSector({normalizedCursor:V,normalizedStart:A,normalizedEnd:U,direction:this.direction}))return;for(var Y=this.getDeltaBearing(this.direction,A,U),K=this.arcPoints,z=("anticlockwise"===this.direction?1:-1)*Y/K,X=H(j,B),q=[],Z=0;Z<=K;Z++){var J=rt(j,X,A+Z*z),$=b(J.x,J.y),Q=$.lat,tt=[w($.lng,this.coordinatePrecision),w(Q,this.coordinatePrecision)];tt[0]!==M[M.length-1][0]&&tt[1]!==M[M.length-1][1]&&q.unshift(tt)}if(M.push.apply(M,q),M.push(M[0]),this.currentId)this.updatePolygonGeometry(this.currentId,M,d.Provisional);else{var et,it=this.store.create([{geometry:{type:"Polygon",coordinates:[M]},properties:(et={mode:this.mode},et[c.CURRENTLY_DRAWING]=!0,et)}]);this.currentId=it[0]}}},i.updateLineStringGeometry=function(t,e,i){var o={type:"LineString",coordinates:e};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))},i.updatePolygonGeometry=function(t,e,i){var o={type:"Polygon",coordinates:[e]};return!(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid||(this.store.updateGeometry([{id:t,geometry:o}]),0))},i.onClick=function(t){if("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,0===this.currentCoordinate){var e=this.store.create([{geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:{mode:this.mode}}]);this.currentStartingPointId=e[0],this.currentCoordinate++,this.setDrawing()}else if(1===this.currentCoordinate&&this.currentStartingPointId){var i=this.store.create([{geometry:{type:"LineString",coordinates:[[t.lng,t.lat],[t.lng,t.lat]]},properties:{mode:this.mode}}]);this.currentInitialArcId=i[0],this.currentCoordinate++}else 2===this.currentCoordinate&&this.currentStartingPointId?this.currentCoordinate++:3===this.currentCoordinate&&this.currentStartingPointId&&this.close()},i.onKeyUp=function(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()},i.onKeyDown=function(){},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.cleanUp=function(){try{this.currentStartingPointId&&this.store.delete([this.currentStartingPointId]),this.currentInitialArcId&&this.store.delete([this.currentInitialArcId]),this.currentId&&this.store.delete([this.currentId])}catch(t){}this.currentStartingPointId=void 0,this.direction=void 0,this.currentId=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted()},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.properties.mode===this.mode&&("Polygon"===t.geometry.type?(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=h):"LineString"===t.geometry.type?(e.lineStringColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.zIndex=h):"Point"===t.geometry.type&&(e.pointColor=this.getHexColorStylingValue(this.styles.centerPointColor,e.pointColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.centerPointWidth,e.pointWidth,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.centerPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.centerPointOutlineWidth,e.pointOutlineWidth,t),e.zIndex=20)),e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return Y(t,e.coordinatePrecision)})},i.afterFeatureUpdated=function(t){this.currentId===t.id&&(this.currentStartingPointId&&this.store.delete([this.currentStartingPointId]),this.currentInitialArcId&&this.store.delete([this.currentInitialArcId]),this.currentStartingPointId=void 0,this.direction=void 0,this.currentId=void 0,this.currentCoordinate=0,"drawing"===this.state&&this.setStarted())},i.getDeltaBearing=function(t,e,i){var o;return"anticlockwise"===t?(o=i-e)<0&&(o+=360):(o=e-i)<0&&(o+=360),o},i.notInSector=function(t){var e=t.normalizedCursor,i=t.normalizedStart,o=t.normalizedEnd;return"clockwise"===t.direction?i<=o?e>=i&&e<=o:e>=i||e<=o:i>=o?e<=i&&e>=o:e<=i||e>=o},e}(C),Ue=function(t){var e=this,i=t.name,o=t.callback,n=t.unregister,r=t.register;this.name=void 0,this.callback=void 0,this.registered=!1,this.register=void 0,this.unregister=void 0,this.name=i,this.register=function(){e.registered||(e.registered=!0,r(o))},this.unregister=function(){e.register&&(e.registered=!1,n(o))},this.callback=o},Ve={__proto__:null,GeoJSONStore:Se,TerraDrawBaseDrawMode:C,TerraDrawBaseSelectMode:P,TerraDrawBaseAdapter:/*#__PURE__*/function(){function t(t){this._nextKeyUpIsContextMenu=!1,this._minPixelDragDistance=void 0,this._minPixelDragDistanceDrawing=void 0,this._minPixelDragDistanceSelecting=void 0,this._lastDrawEvent=void 0,this._coordinatePrecision=void 0,this._heldKeys=new Set,this._listeners=[],this._dragState="not-dragging",this._currentModeCallbacks=void 0,this._minPixelDragDistance="number"==typeof t.minPixelDragDistance?t.minPixelDragDistance:1,this._minPixelDragDistanceSelecting="number"==typeof t.minPixelDragDistanceSelecting?t.minPixelDragDistanceSelecting:1,this._minPixelDragDistanceDrawing="number"==typeof t.minPixelDragDistanceDrawing?t.minPixelDragDistanceDrawing:8,this._coordinatePrecision="number"==typeof t.coordinatePrecision?t.coordinatePrecision:9}var e=t.prototype;return e.getButton=function(t){return-1===t.button?"neither":0===t.button?"left":1===t.button?"middle":2===t.button?"right":"neither"},e.getMapElementXYPosition=function(t){var e=this.getMapEventElement().getBoundingClientRect();return{containerX:t.clientX-e.left,containerY:t.clientY-e.top}},e.getDrawEventFromEvent=function(t,e){void 0===e&&(e=!1);var i=this.getLngLatFromEvent(t);if(!i)return null;var o=i.lng,n=i.lat,r=this.getMapElementXYPosition(t),s=r.containerX,a=r.containerY,d=this.getButton(t),l=Array.from(this._heldKeys);return{lng:w(o,this._coordinatePrecision),lat:w(n,this._coordinatePrecision),containerX:s,containerY:a,button:d,heldKeys:l,isContextMenu:e}},e.register=function(t){this._currentModeCallbacks=t,this._listeners=this.getAdapterListeners(),this._listeners.forEach(function(t){t.register()})},e.getCoordinatePrecision=function(){return this._coordinatePrecision},e.getAdapterListeners=function(){var t=this;return[new Ue({name:"pointerdown",callback:function(e){if(t._currentModeCallbacks&&e.isPrimary){var i=t.getDrawEventFromEvent(e);i&&(t._dragState="pre-dragging",t._lastDrawEvent=i)}},register:function(e){t.getMapEventElement().addEventListener("pointerdown",e)},unregister:function(e){t.getMapEventElement().removeEventListener("pointerdown",e)}}),new Ue({name:"pointermove",callback:function(e){if(t._currentModeCallbacks&&e.isPrimary){e.preventDefault();var i=t.getDrawEventFromEvent(e);if(i)if("not-dragging"===t._dragState)t._currentModeCallbacks.onMouseMove(i),t._lastDrawEvent=i;else if("pre-dragging"===t._dragState){if(!t._lastDrawEvent)return;var o={x:t._lastDrawEvent.containerX,y:t._lastDrawEvent.containerY},n={x:i.containerX,y:i.containerY},r=t._currentModeCallbacks.getState(),s=H(o,n);if("drawing"===r?s<t._minPixelDragDistanceDrawing:"selecting"===r?s<t._minPixelDragDistanceSelecting:s<t._minPixelDragDistance)return;t._nextKeyUpIsContextMenu=!1,t._dragState="dragging",t._currentModeCallbacks.onDragStart(i,function(e){t.setDraggability.bind(t)(e)})}else"dragging"===t._dragState&&t._currentModeCallbacks.onDrag(i,function(e){t.setDraggability.bind(t)(e)})}},register:function(e){t.getMapEventElement().addEventListener("pointermove",e)},unregister:function(e){t.getMapEventElement().removeEventListener("pointermove",e)}}),new Ue({name:"contextmenu",callback:function(e){t._currentModeCallbacks&&(e.preventDefault(),t._nextKeyUpIsContextMenu=!0)},register:function(e){t.getMapEventElement().addEventListener("contextmenu",e)},unregister:function(e){t.getMapEventElement().removeEventListener("contextmenu",e)}}),new Ue({name:"pointerup",callback:function(e){if(t._currentModeCallbacks&&e.target===t.getMapEventElement()&&e.isPrimary){var i=t.getDrawEventFromEvent(e);i&&("dragging"===t._dragState?t._currentModeCallbacks.onDragEnd(i,function(e){t.setDraggability.bind(t)(e)}):"not-dragging"!==t._dragState&&"pre-dragging"!==t._dragState||(t._nextKeyUpIsContextMenu&&(i.isContextMenu=!0,t._nextKeyUpIsContextMenu=!1),t._currentModeCallbacks.onClick(i)),t._dragState="not-dragging",t.setDraggability(!0))}},register:function(e){t.getMapEventElement().addEventListener("pointerup",e)},unregister:function(e){t.getMapEventElement().removeEventListener("pointerup",e)}}),new Ue({name:"keyup",callback:function(e){t._currentModeCallbacks&&(t._heldKeys.delete(e.key),t._currentModeCallbacks.onKeyUp({key:e.key,heldKeys:Array.from(t._heldKeys),preventDefault:function(){return e.preventDefault()}}))},register:function(e){t.getMapEventElement().addEventListener("keyup",e)},unregister:function(e){t.getMapEventElement().removeEventListener("keyup",e)}}),new Ue({name:"keydown",callback:function(e){t._currentModeCallbacks&&(t._heldKeys.add(e.key),t._currentModeCallbacks.onKeyDown({key:e.key,heldKeys:Array.from(t._heldKeys),preventDefault:function(){return e.preventDefault()}}))},register:function(e){t.getMapEventElement().addEventListener("keydown",e)},unregister:function(e){t.getMapEventElement().removeEventListener("keydown",e)}})]},e.unregister=function(){this._listeners.forEach(function(t){t.unregister()}),this.clear(),this._currentModeCallbacks=void 0},t}(),getDefaultStyling:function(){return{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0}},SELECT_PROPERTIES:l},Ye={ValidationReasonFeatureNotPoint:St,ValidationReasonFeatureInvalidCoordinates:Et,ValidationReasonFeatureInvalidCoordinatePrecision:Mt,ValidationReasonFeatureNotPolygon:y,ValidationReasonFeatureHasHoles:R,ValidationReasonFeatureLessThanFourCoordinates:L,ValidationReasonFeatureHasInvalidCoordinates:A,ValidationReasonFeatureCoordinatesNotClosed:U,ValidationReasonFeatureNotPolygonOrLineString:Oe,ValidationReasonFeatureSelfIntersects:_e,ValidationReasonFeatureLessThanMinSize:Fe,ValidationReasonModeMismatch:v},Ke={cancel:"Escape",finish:"Enter"},ze={start:"crosshair",close:"pointer"},Xe=/*#__PURE__*/function(t){function e(e){var i;return(i=t.call(this,e,!0)||this).mode="freehand-linestring",i.startingClick=!1,i.currentId=void 0,i.closingPointId=void 0,i.minDistance=20,i.keyEvents=Ke,i.cursors=ze,i.preventNewFeature=!1,i.updateOptions(e),i}r(e,t);var i=e.prototype;return i.updateOptions=function(e){t.prototype.updateOptions.call(this,e),null!=e&&e.minDistance&&(this.minDistance=e.minDistance),null===(null==e?void 0:e.keyEvents)?this.keyEvents={cancel:null,finish:null}:null!=e&&e.keyEvents&&(this.keyEvents=n({},this.keyEvents,e.keyEvents)),null!=e&&e.cursors&&(this.cursors=n({},this.cursors,e.cursors))},i.close=function(){if(void 0!==this.currentId){this.currentId&&this.store.updateProperty([{id:this.currentId,property:c.CURRENTLY_DRAWING,value:void 0}]);var t=this.currentId;if(this.validate&&t){var e=this.store.getGeometryCopy(t);if(!this.validate({type:"Feature",id:t,geometry:e,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,"drawing"===this.state&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}},i.start=function(){this.setStarted(),this.setCursor(this.cursors.start)},i.stop=function(){this.cleanUp(),this.setStopped(),this.setCursor("unset")},i.onMouseMove=function(t){if(void 0!==this.currentId&&!1!==this.startingClick){var e=this.store.getGeometryCopy(this.currentId),i=e.coordinates[e.coordinates.length-2],o=this.project(i[0],i[1]),n=H({x:o.x,y:o.y},{x:t.containerX,y:t.containerY}),r=e.coordinates[e.coordinates.length-1],s=this.project(r[0],r[1]),a=H({x:s.x,y:s.y},{x:t.containerX,y:t.containerY});if(this.setCursor(a<this.pointerDistance?this.cursors.close:this.cursors.start),!(n<this.minDistance)){var l={type:"LineString",coordinates:[].concat(e.coordinates,[[t.lng,t.lat]])};if(this.validate&&!this.validate({type:"Feature",id:this.currentId,geometry:l,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:d.Provisional}).valid)return;this.store.updateGeometry([{id:this.currentId,geometry:l}]),this.closingPointId&&this.store.updateGeometry([{id:this.closingPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}])}}else this.setCursor(this.cursors.start)},i.onClick=function(t){if("right"===t.button&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||"left"===t.button&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)){if(this.preventNewFeature)return;if(!1===this.startingClick){var e,i,o=this.store.create([{geometry:{type:"LineString",coordinates:[[t.lng,t.lat],[t.lng,t.lat]]},properties:(e={mode:this.mode},e[c.CURRENTLY_DRAWING]=!0,e)},{geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:(i={mode:this.mode},i[c.CLOSING_POINT]=!0,i)}]),n=o[1];return this.currentId=o[0],this.closingPointId=n,this.startingClick=!0,void("drawing"!==this.state&&this.setDrawing())}this.close()}},i.onKeyDown=function(){},i.onKeyUp=function(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&!0===this.startingClick&&this.close()},i.onDragStart=function(){},i.onDrag=function(){},i.onDragEnd=function(){},i.cleanUp=function(){var t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,"drawing"===this.state&&this.setStarted();try{void 0!==t&&this.store.delete([t]),void 0!==e&&this.store.delete([e])}catch(t){}},i.styleFeature=function(t){var e=n({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return"Feature"===t.type&&"LineString"===t.geometry.type&&t.properties.mode===this.mode?(e.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,e.lineStringWidth,t),e.zIndex=h,e):"Feature"===t.type&&"Point"===t.geometry.type&&t.properties.mode===this.mode?(e.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,t),e.zIndex=50,e):e},i.validateFeature=function(t){var e=this;return this.validateModeFeature(t,function(t){return gt(t,e.coordinatePrecision)})},i.afterFeatureUpdated=function(t){this.currentId===t.id&&(this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0)},e}(C);function He(t){if(null===t)return!0;if("boolean"==typeof t)return!0;if("string"==typeof t)return!0;if(void 0===t)return!1;if("number"==typeof t)return Number.isFinite(t);if("bigint"==typeof t)return!1;if("symbol"==typeof t)return!1;if("function"==typeof t)return!1;if(t instanceof RegExp)return!1;if(t instanceof Map)return!1;if(t instanceof Set)return!1;if(t instanceof Date)return!1;if("object"==typeof t&&null!==t&&!Array.isArray(t)){var e=Object.getPrototypeOf(t);if(e!==Object.prototype&&null!==e)return!1}if(ArrayBuffer.isView(t)&&!(t instanceof DataView))return!1;if(Array.isArray(t))for(var i,n=o(t);!(i=n()).done;)if(!He(i.value))return!1;return"object"==typeof t&&Object.keys(t).every(function(e){return"string"==typeof e&&He(t[e])})}exports.TerraDraw=/*#__PURE__*/function(){function t(t){var e=this;this._modes=void 0,this._mode=void 0,this._adapter=void 0,this._enabled=!1,this._store=void 0,this._eventListeners=void 0,this._instanceSelectMode=void 0,this._adapter=t.adapter,this._mode=new se;var i=new Set,o=t.modes.reduce(function(t,e){if(i.has(e.mode))throw new Error("There is already a "+e.mode+" mode provided");return i.add(e.mode),t[e.mode]=e,t},{}),r=Object.keys(o);if(0===r.length)throw new Error("No modes provided");r.forEach(function(t){if(o[t].type===f.Select){if(e._instanceSelectMode)throw new Error("only one type of select mode can be provided");e._instanceSelectMode=t}}),this._modes=n({},o,{static:this._mode}),this._eventListeners={change:[],select:[],deselect:[],finish:[],ready:[]},this._store=new Se({tracked:!!t.tracked,idStrategy:t.idStrategy?t.idStrategy:void 0});var s=function(t){var i=[],o=e._store.copyAll().filter(function(e){return!t.includes(e.id)||(i.push(e),!1)});return{changed:i,unchanged:o}},a=function(t,i){e._enabled&&e._eventListeners.finish.forEach(function(e){e(t,i)})},d=function(t,i,o){if(e._enabled){e._eventListeners.change.forEach(function(e){e(t,i,o)});var n=s(t),r=n.changed,a=n.unchanged;"create"===i?e._adapter.render({created:r,deletedIds:[],unchanged:a,updated:[]},e.getModeStyles()):"update"===i?e._adapter.render({created:[],deletedIds:[],unchanged:a,updated:r},e.getModeStyles()):"delete"===i?e._adapter.render({created:[],deletedIds:t,unchanged:a,updated:[]},e.getModeStyles()):"styling"===i&&e._adapter.render({created:[],deletedIds:[],unchanged:a,updated:[]},e.getModeStyles())}},l=function(t){if(e._enabled){e._eventListeners.select.forEach(function(e){e(t)});var i=s([t]);e._adapter.render({created:[],deletedIds:[],unchanged:i.unchanged,updated:i.changed},e.getModeStyles())}},c=function(t){if(e._enabled){e._eventListeners.deselect.forEach(function(t){t()});var i=s([t]),o=i.changed;o&&e._adapter.render({created:[],deletedIds:[],unchanged:i.unchanged,updated:o},e.getModeStyles())}};Object.keys(this._modes).forEach(function(t){e._modes[t].register({mode:t,store:e._store,setCursor:e._adapter.setCursor.bind(e._adapter),project:e._adapter.project.bind(e._adapter),unproject:e._adapter.unproject.bind(e._adapter),setDoubleClickToZoom:e._adapter.setDoubleClickToZoom.bind(e._adapter),onChange:d,onSelect:l,onDeselect:c,onFinish:a,coordinatePrecision:e._adapter.getCoordinatePrecision()})})}var e=t.prototype;return e.checkEnabled=function(){if(!this._enabled)throw new Error("Terra Draw is not enabled")},e.getModeStyles=function(){var t=this,e={};return Object.keys(this._modes).forEach(function(i){e[i]=function(e){return t._instanceSelectMode&&e.properties[l.SELECTED]?t._modes[t._instanceSelectMode].styleFeature.bind(t._modes[t._instanceSelectMode])(e):t._modes[i].styleFeature.bind(t._modes[i])(e)}}),e},e.featuresAtLocation=function(t,e){var i=t.lng,n=t.lat,r=e&&void 0!==e.pointerDistance?e.pointerDistance:30,s=!e||void 0===e.ignoreSelectFeatures||e.ignoreSelectFeatures,a=!(!e||void 0===e.ignoreCoordinatePoints)&&e.ignoreCoordinatePoints,d=!(!e||void 0===e.ignoreCurrentlyDrawing)&&e.ignoreCurrentlyDrawing,h=!(!e||void 0===e.ignoreClosingPoints)&&e.ignoreClosingPoints,u=this._adapter.unproject.bind(this._adapter),p=this._adapter.project.bind(this._adapter),g=p(i,n),f=tt({unproject:u,point:g,pointerDistance:r});return this._store.search(f).filter(function(t){if(s&&(t.properties[l.MID_POINT]||t.properties[l.SELECTION_POINT]))return!1;if(a&&t.properties[c.COORDINATE_POINT])return!1;if(h&&t.properties[c.CLOSING_POINT])return!1;if(d&&t.properties[c.CURRENTLY_DRAWING])return!1;if("Point"===t.geometry.type){var u=t.geometry.coordinates,f=p(u[0],u[1]);return H(g,f)<r}if("LineString"===t.geometry.type){for(var y=t.geometry.coordinates,v=0;v<y.length-1;v++){var m=y[v],C=y[v+1];if(zt(g,p(m[0],m[1]),p(C[0],C[1]))<r)return!0}return!1}if(Kt([i,n],t.geometry.coordinates))return!0;if(null!=e&&e.includePolygonsWithinPointerDistance)for(var P,I=o(t.geometry.coordinates);!(P=I()).done;)for(var x=P.value,S=0;S<x.length-1;S++){var E=x[S],M=x[S+1],w=p(E[0],E[1]),D=p(M[0],M[1]);if(zt(g,w,D)<r)return!0}return!1}).map(function(t){if(null==e||!e.addClosestCoordinateInfoToProperties)return t;var o;if("Polygon"===t.geometry.type)(o=t.geometry.coordinates[0]).pop();else{if("LineString"!==t.geometry.type)return t;o=t.geometry.coordinates}for(var r,s=-1,a=Infinity,d=0;d<o.length;d++){var l=o[d],c=H(p(l[0],l[1]),g);c<a&&(s=d,a=c,r=l)}return t.properties.closestCoordinateIndexToEvent=s,t.properties.closestCoordinatePixelDistanceToEvent=a,t.properties.closestCoordinateDistanceKmToEvent=I(r,[i,n]),t})},e.getSelectModeOrThrow=function(){var t=this.getSelectMode({switchToSelectMode:!0});if(!t)throw new Error("No select mode defined in instance");return t},e.getSelectMode=function(t){var e=t.switchToSelectMode;if(this.checkEnabled(),!this._instanceSelectMode)return null;var i=this.getMode();return e&&i!==this._instanceSelectMode&&this.setMode(this._instanceSelectMode),this._modes[this._instanceSelectMode]},e.isGuidanceFeature=function(t){return Boolean(t.properties[l.MID_POINT]||t.properties[l.SELECTION_POINT]||t.properties[c.COORDINATE_POINT]||t.properties[c.SNAPPING_POINT])},e.setModeStyles=function(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._modes[t].styles=e},e.updateModeOptions=function(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._modes[t].updateOptions(e)},e.getSnapshot=function(){return this._store.copyAll()},e.getSnapshotFeature=function(t){if(this._store.has(t))return this._store.copy(t)},e.clear=function(){this.checkEnabled(),this._adapter.clear()},e.getMode=function(){return this._mode.mode},e.getModeState=function(){return this._mode.state},e.setMode=function(t){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._mode.stop(),this._mode=this._modes[t],this._mode.start()},e.removeFeatures=function(t){var e=this;this.checkEnabled();var i=[];t.forEach(function(t){if(!e._store.has(t))throw new Error("No feature with id "+t+", can not delete");var o=e._store.copy(t);o.properties[l.SELECTED]&&e.deselectFeature(t),o.properties[c.COORDINATE_POINT_IDS]&&i.push.apply(i,o.properties[c.COORDINATE_POINT_IDS])}),this._store.delete([].concat(t,i),{origin:"api"})},e.selectFeature=function(t){this.getSelectModeOrThrow().selectFeature(t)},e.deselectFeature=function(t){this.getSelectModeOrThrow().deselectFeature(t)},e.getFeatureId=function(){return this._store.getId()},e.hasFeature=function(t){return this._store.has(t)},e.checkIsReservedProperty=function(t){return![].concat(Object.values(l),Object.values(c)).includes(t)},e.updateFeatureProperties=function(t,e){var i=this;if(!this._store.has(t))throw new Error("No feature with id "+t+" present in store");var o=this._store.copy(t);if(this.isGuidanceFeature(o))throw new Error("Guidance features are not allowed to be updated directly.");var n=o.properties.mode;if(!this._modes[n])throw new Error("No mode with name "+n+" present in instance");var r=Object.entries(e);r.forEach(function(t){var e=t[0],o=t[1];if(!i.checkIsReservedProperty(e))throw new Error("You are trying to update a reserved property name: "+e+". Please choose another name.");if(void 0!==o&&!He(o))throw new Error("Invalid JSON value provided for property "+e)}),this._store.updateProperty(r.map(function(t){return{id:o.id,property:t[0],value:t[1]}}),{origin:"api"})},e.updateFeatureGeometry=function(t,e){if(!this._store.has(t))throw new Error("No feature with id "+t+" present in store");var i=this._store.copy(t);if(this.isGuidanceFeature(i))throw new Error("Guidance features are not allowed to be updated directly.");if(!(i&&e&&e.type&&e.coordinates))throw new Error("Invalid geometry provided");if(e.type!==i.geometry.type)throw new Error("Geometry type mismatch: expected "+i.geometry.type+", got "+e.type);var o=i.properties.mode,r=this._modes[o];if(!r)throw new Error("No mode with name "+o+" present in instance");var s=n({},i,{geometry:e}),a=r.validateFeature(s);if(!a.valid)throw new Error("Feature validation failed: "+(a.reason||"Unknown reason"));if(this._store.updateGeometry([{id:i.id,geometry:e}],{origin:"api"}),r.afterFeatureUpdated){r.afterFeatureUpdated(s);var d=s.properties[l.SELECTED],c=this.getSelectMode({switchToSelectMode:!1});c&&d&&c.afterFeatureUpdated(s)}},e.transformFeatureGeometry=function(t,e){var i=this;if(!this._store.has(t))throw new Error("No feature with id "+t+" present in store");var o=this._store.copy(t);if(this.isGuidanceFeature(o))throw new Error("Guidance features are not allowed to be updated directly.");var n,r=o.properties.mode,s=this._modes[r];if(!s)throw new Error("No mode with name "+r+" present in instance");if("Polygon"===o.geometry.type)n=o.geometry.coordinates[0];else{if("LineString"!==o.geometry.type)throw new Error("Feature geometry type "+o.geometry.type+" is not supported for transformation");n=o.geometry.coordinates}if("web-mercator"!=e.projection)throw new Error("Projection "+e.projection+" is not currently supported for transformation");if("scale"===e.type){var a=_(e.origin[0],e.origin[1]);ee({coordinates:n,originX:a.x,originY:a.y,xScale:e.options.xScale||1,yScale:e.options.yScale||1})}else"rotate"===e.type&&(n="Polygon"===(o=Jt(o,e.options.angle||0)).geometry.type?o.geometry.coordinates[0]:o.geometry.coordinates);if(n=n.map(function(t){return[w(t[0],i._adapter.getCoordinatePrecision()),w(t[1],i._adapter.getCoordinatePrecision())]}),o.geometry.coordinates="Polygon"===o.geometry.type?[n]:n,this._store.updateGeometry([{id:o.id,geometry:o.geometry}],{origin:"api"}),s.afterFeatureUpdated){s.afterFeatureUpdated(o);var d=o.properties[l.SELECTED],c=this.getSelectMode({switchToSelectMode:!1});c&&d&&c.afterFeatureUpdated(o)}},e.addFeatures=function(t){var e=this;return this.checkEnabled(),0===t.length?[]:this._store.load(t,function(t){if(p(t)){var i=t.properties.mode,o=e._modes[i];if(!o)return{id:t.id,valid:!1,reason:i+" mode is not in the list of instantiated modes"};var n=o.validateFeature.bind(o)(t);return{id:t.id,valid:n.valid,reason:n.reason?n.reason:n.valid?void 0:"Feature is invalid"}}return{id:t.id,valid:!1,reason:"Mode property does not exist"}},function(t){if(p(t)){var i=e._modes[t.properties.mode];i&&i.afterFeatureAdded&&i.afterFeatureAdded(t)}},{origin:"api"})},e.start=function(){var t=this;this._enabled||(this._enabled=!0,this._adapter.register({onReady:function(){t._eventListeners.ready.forEach(function(t){t()})},getState:function(){return t._mode.state},onClick:function(e){t._mode.onClick(e)},onMouseMove:function(e){t._mode.onMouseMove(e)},onKeyDown:function(e){t._mode.onKeyDown(e)},onKeyUp:function(e){t._mode.onKeyUp(e)},onDragStart:function(e,i){t._mode.onDragStart(e,i)},onDrag:function(e,i){t._mode.onDrag(e,i)},onDragEnd:function(e,i){t._mode.onDragEnd(e,i)},onClear:function(){t._mode.cleanUp(),t._store.clear()}}))},e.getFeaturesAtLngLat=function(t,e){return this.featuresAtLocation({lng:t.lng,lat:t.lat},e)},e.getFeaturesAtPointerEvent=function(t,e){var i=this._adapter.getLngLatFromEvent.bind(this._adapter)(t);return null===i?[]:this.featuresAtLocation(i,e)},e.stop=function(){this._enabled&&(this._enabled=!1,this._adapter.unregister())},e.on=function(t,e){var i=this._eventListeners[t];i.includes(e)||i.push(e)},e.off=function(t,e){var i=this._eventListeners[t];i.includes(e)&&i.splice(i.indexOf(e),1)},i(t,[{key:"enabled",get:function(){return this._enabled},set:function(t){throw new Error("Enabled is read only")}}])}(),exports.TerraDrawAngledRectangleMode=Te,exports.TerraDrawCircleMode=X,exports.TerraDrawExtend=Ve,exports.TerraDrawFreehandLineStringMode=Xe,exports.TerraDrawFreehandMode=$,exports.TerraDrawLineStringMode=xt,exports.TerraDrawPointMode=Ft,exports.TerraDrawPolygonMode=Nt,exports.TerraDrawRectangleMode=Wt,exports.TerraDrawRenderMode=Bt,exports.TerraDrawSectorMode=Ge,exports.TerraDrawSelectMode=re,exports.TerraDrawSensorMode=Ae,exports.ValidateMaxAreaSquareMeters=function(t,e){return"Polygon"!==t.geometry.type?{valid:!1,reason:y}:Ee(t.geometry)>e?{valid:!1,reason:"Feature is larger than the maximum area"}:{valid:!0}},exports.ValidateMinAreaSquareMeters=function(t,e){return"Polygon"!==t.geometry.type?{valid:!1,reason:y}:Ee(t.geometry)<e?{valid:!1,reason:Fe}:{valid:!0}},exports.ValidateNotSelfIntersecting=function(t){return"Polygon"!==t.geometry.type&&"LineString"!==t.geometry.type?{valid:!1,reason:Oe}:T(t)?{valid:!1,reason:_e}:{valid:!0}},exports.ValidationReasons=Ye;
//# sourceMappingURL=terra-draw.cjs.map
